

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jan 27 09:04:29 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290                           
   291                           	psect	idataBANK0
   292  027B                     __pidataBANK0:
   293                           
   294                           ;initializer for _disp_selector
   295  027B  3401               	retlw	1
   296  0001                     _TMR0	set	1
   297  0009                     _PORTE	set	9
   298  0007                     _PORTC	set	7
   299  0008                     _PORTD	set	8
   300  0009                     _PORTEbits	set	9
   301  001E                     _ADRESH	set	30
   302  001F                     _ADCON0bits	set	31
   303  0005                     _PORTA	set	5
   304  000B                     _INTCONbits	set	11
   305  000C                     _PIR1bits	set	12
   306  0031                     _RB1	set	49
   307  0030                     _RB0	set	48
   308  005A                     _T0IF	set	90
   309  008C                     _PIE1bits	set	140
   310  009F                     _ADCON1bits	set	159
   311  008F                     _OSCCONbits	set	143
   312  0096                     _IOCBbits	set	150
   313  0095                     _WPUBbits	set	149
   314  0081                     _OPTION_REGbits	set	129
   315  0089                     _TRISE	set	137
   316  0088                     _TRISD	set	136
   317  0087                     _TRISC	set	135
   318  0086                     _TRISB	set	134
   319  0085                     _TRISA	set	133
   320  0189                     _ANSELH	set	393
   321  0188                     _ANSEL	set	392
   322                           
   323                           	psect	cinit
   324  0015                     start_initialization:	
   325                           ; #config settings
   326                           
   327  0015                     __initialization:
   328                           
   329                           ; Initialize objects allocated to BANK0
   330  0015  120A  118A  227B  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   331  001A  00B2               	movwf	__pdataBANK0& (0+127)
   332                           
   333                           ; Clear objects allocated to BANK0
   334  001B  01A0               	clrf	__pbssBANK0& (0+127)
   335  001C  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   336  001D  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   337  001E  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   338  001F  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   339  0020  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   340  0021  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   341  0022  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   342  0023  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   343  0024  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   344  0025  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   345  0026                     end_of_initialization:	
   346                           ;End of C runtime variable initialization code
   347                           
   348  0026                     __end_of__initialization:
   349  0026  0183               	clrf	3
   350  0027  120A  118A  2A07   	ljmp	_main	;jump to C main() function
   351                           
   352                           	psect	bssBANK0
   353  0020                     __pbssBANK0:
   354  0020                     _dig:
   355  0020                     	ds	6
   356  0026                     _decenas:
   357  0026                     	ds	2
   358  0028                     _unidades:
   359  0028                     	ds	2
   360  002A                     _Puerto_A:
   361  002A                     	ds	1
   362                           
   363                           	psect	dataBANK0
   364  0032                     __pdataBANK0:
   365  0032                     _disp_selector:
   366  0032                     	ds	1
   367                           
   368                           	psect	cstackCOMMON
   369  0070                     __pcstackCOMMON:
   370  0070                     ?_ADC:
   371  0070                     ?_tmr0:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ??_tmr0:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ?_displays:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ?_setup:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ?_isr:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ?_main:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ?_tabla:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ?___awdiv:	
   393                           ; 2 bytes @ 0x0
   394                           
   395  0070                     tabla@a:	
   396                           ; 2 bytes @ 0x0
   397                           
   398  0070                     ___awdiv@divisor:	
   399                           ; 2 bytes @ 0x0
   400                           
   401                           
   402                           ; 2 bytes @ 0x0
   403  0070                     	ds	2
   404  0072                     ??_displays:
   405  0072                     ??_tabla:	
   406                           ; 1 bytes @ 0x2
   407                           
   408  0072                     ___awdiv@dividend:	
   409                           ; 1 bytes @ 0x2
   410                           
   411                           
   412                           ; 2 bytes @ 0x2
   413  0072                     	ds	2
   414  0074                     ??___awdiv:
   415                           
   416                           ; 1 bytes @ 0x4
   417  0074                     	ds	1
   418  0075                     ___awdiv@counter:
   419                           
   420                           ; 1 bytes @ 0x5
   421  0075                     	ds	1
   422  0076                     ___awdiv@sign:
   423                           
   424                           ; 1 bytes @ 0x6
   425  0076                     	ds	1
   426  0077                     ___awdiv@quotient:
   427                           
   428                           ; 2 bytes @ 0x7
   429  0077                     	ds	2
   430  0079                     ??_ADC:
   431                           
   432                           ; 1 bytes @ 0x9
   433  0079                     	ds	3
   434  007C                     ADC@i:
   435                           
   436                           ; 2 bytes @ 0xC
   437  007C                     	ds	2
   438                           
   439                           	psect	cstackBANK0
   440  002B                     __pcstackBANK0:
   441  002B                     ??_isr:
   442                           
   443                           ; 1 bytes @ 0x0
   444  002B                     	ds	5
   445  0030                     ??_setup:
   446                           
   447                           ; 1 bytes @ 0x5
   448  0030                     	ds	1
   449  0031                     ??_main:
   450                           
   451                           ; 1 bytes @ 0x6
   452  0031                     	ds	1
   453                           
   454                           	psect	maintext
   455  0207                     __pmaintext:	
   456 ;;
   457 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   458 ;;
   459 ;; *************** function _main *****************
   460 ;; Defined at:
   461 ;;		line 79 in file "LAB1.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;		None
   466 ;; Return value:  Size  Location     Type
   467 ;;                  1    wreg      void 
   468 ;; Registers used:
   469 ;;		wreg, status,2, status,0, pclath, cstack
   470 ;; Tracked objects:
   471 ;;		On entry : B00/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   475 ;;      Params:         0       0       0       0       0
   476 ;;      Locals:         0       0       0       0       0
   477 ;;      Temps:          0       1       0       0       0
   478 ;;      Totals:         0       1       0       0       0
   479 ;;Total ram usage:        1 bytes
   480 ;; Hardware stack levels required when called: 4
   481 ;; This function calls:
   482 ;;		_setup
   483 ;; This function is called by:
   484 ;;		Startup code after reset
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488                           
   489                           ;psect for function _main
   490  0207                     _main:
   491  0207                     l1374:	
   492                           ;incstack = 0
   493                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   494                           
   495                           
   496                           ;LAB1.c: 80:     setup();
   497  0207  120A  118A  2179  120A  118A  	fcall	_setup
   498  020C                     l1376:
   499                           
   500                           ;LAB1.c: 81:     ADCON0bits.GO = 1;
   501  020C  1283               	bcf	3,5	;RP0=0, select bank0
   502  020D  1303               	bcf	3,6	;RP1=0, select bank0
   503  020E  149F               	bsf	31,1	;volatile
   504  020F                     l1378:
   505                           
   506                           ;LAB1.c: 83:         if(ADCON0bits.GO == 0){
   507  020F  189F               	btfsc	31,1	;volatile
   508  0210  2A12               	goto	u461
   509  0211  2A13               	goto	u460
   510  0212                     u461:
   511  0212  2A37               	goto	l1394
   512  0213                     u460:
   513  0213                     l1380:
   514                           
   515                           ;LAB1.c: 84:             if(ADCON0bits.CHS == 9){
   516  0213  0C1F               	rrf	31,w	;volatile
   517  0214  00B1               	movwf	??_main
   518  0215  0C31               	rrf	??_main,w
   519  0216  390F               	andlw	15
   520  0217  3A09               	xorlw	9
   521  0218  1D03               	skipz
   522  0219  2A1B               	goto	u471
   523  021A  2A1C               	goto	u470
   524  021B                     u471:
   525  021B  2A28               	goto	l1386
   526  021C                     u470:
   527  021C                     l1382:
   528                           
   529                           ;LAB1.c: 85:                 ADCON0bits.CHS = 8;
   530  021C  081F               	movf	31,w	;volatile
   531  021D  39C3               	andlw	-61
   532  021E  3820               	iorlw	32
   533  021F  009F               	movwf	31	;volatile
   534  0220                     l1384:
   535                           
   536                           ;LAB1.c: 86:                 _delay((unsigned long)((50)*(4000000/4000000.0)));
   537  0220  300F               	movlw	15
   538  0221  1283               	bcf	3,5	;RP0=0, select bank0
   539  0222  1303               	bcf	3,6	;RP1=0, select bank0
   540  0223  00B1               	movwf	??_main
   541  0224                     u497:
   542  0224  0BB1               	decfsz	??_main,f
   543  0225  2A24               	goto	u497
   544  0226  2A27               	nop2
   545                           
   546                           ;LAB1.c: 87:             }
   547  0227  2A2D               	goto	l1390
   548  0228                     l1386:
   549                           
   550                           ;LAB1.c: 89:                 ADCON0bits.CHS = 9;
   551  0228  081F               	movf	31,w	;volatile
   552  0229  39C3               	andlw	-61
   553  022A  3824               	iorlw	36
   554  022B  009F               	movwf	31	;volatile
   555  022C  2A20               	goto	l1384
   556  022D                     l1390:
   557                           
   558                           ;LAB1.c: 92:             _delay((unsigned long)((50)*(4000000/4000000.0)));
   559  022D  300F               	movlw	15
   560  022E  1283               	bcf	3,5	;RP0=0, select bank0
   561  022F  1303               	bcf	3,6	;RP1=0, select bank0
   562  0230  00B1               	movwf	??_main
   563  0231                     u507:
   564  0231  0BB1               	decfsz	??_main,f
   565  0232  2A31               	goto	u507
   566  0233  2A34               	nop2
   567  0234                     l1392:
   568                           
   569                           ;LAB1.c: 93:             ADCON0bits.GO = 1;
   570  0234  1283               	bcf	3,5	;RP0=0, select bank0
   571  0235  1303               	bcf	3,6	;RP1=0, select bank0
   572  0236  149F               	bsf	31,1	;volatile
   573  0237                     l1394:
   574                           
   575                           ;LAB1.c: 95:         if(ADRESH > PORTA){
   576  0237  081E               	movf	30,w	;volatile
   577  0238  0205               	subwf	5,w	;volatile
   578  0239  1803               	skipnc
   579  023A  2A3C               	goto	u481
   580  023B  2A3D               	goto	u480
   581  023C                     u481:
   582  023C  2A3F               	goto	l99
   583  023D                     u480:
   584  023D                     l1396:
   585                           
   586                           ;LAB1.c: 96:             PORTEbits.RE0 = 1;
   587  023D  1409               	bsf	9,0	;volatile
   588                           
   589                           ;LAB1.c: 97:         }
   590  023E  2A0F               	goto	l1378
   591  023F                     l99:	
   592                           ;LAB1.c: 98:         else{
   593                           
   594                           
   595                           ;LAB1.c: 99:             PORTEbits.RE0 = 0;
   596  023F  1009               	bcf	9,0	;volatile
   597  0240  2A0F               	goto	l1378
   598  0241  120A  118A  2812   	ljmp	start
   599  0244                     __end_of_main:
   600                           
   601                           	psect	text1
   602  0179                     __ptext1:	
   603 ;; *************** function _setup *****************
   604 ;; Defined at:
   605 ;;		line 106 in file "LAB1.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;		None
   608 ;; Auto vars:     Size  Location     Type
   609 ;;		None
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		wreg, status,2, status,0
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   619 ;;      Params:         0       0       0       0       0
   620 ;;      Locals:         0       0       0       0       0
   621 ;;      Temps:          0       1       0       0       0
   622 ;;      Totals:         0       1       0       0       0
   623 ;;Total ram usage:        1 bytes
   624 ;; Hardware stack levels used: 1
   625 ;; Hardware stack levels required when called: 3
   626 ;; This function calls:
   627 ;;		Nothing
   628 ;; This function is called by:
   629 ;;		_main
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633                           
   634                           ;psect for function _setup
   635  0179                     _setup:
   636  0179                     l1272:	
   637                           ;incstack = 0
   638                           ; Regs used in _setup: [wreg+status,2+status,0]
   639                           
   640                           
   641                           ;LAB1.c: 109:     ANSEL = 0b1000000000;
   642  0179  1683               	bsf	3,5	;RP0=1, select bank3
   643  017A  1703               	bsf	3,6	;RP1=1, select bank3
   644  017B  0188               	clrf	8	;volatile
   645                           
   646                           ;LAB1.c: 110:     ANSELH = 0;
   647  017C  0189               	clrf	9	;volatile
   648                           
   649                           ;LAB1.c: 112:     TRISA = 0;
   650  017D  1683               	bsf	3,5	;RP0=1, select bank1
   651  017E  1303               	bcf	3,6	;RP1=0, select bank1
   652  017F  0185               	clrf	5	;volatile
   653  0180                     l1274:
   654                           
   655                           ;LAB1.c: 113:     TRISB = 0b0111;
   656  0180  3007               	movlw	7
   657  0181  0086               	movwf	6	;volatile
   658  0182                     l1276:
   659                           
   660                           ;LAB1.c: 115:     TRISC = 0;
   661  0182  0187               	clrf	7	;volatile
   662  0183                     l1278:
   663                           
   664                           ;LAB1.c: 116:     TRISD = 0;
   665  0183  0188               	clrf	8	;volatile
   666  0184                     l1280:
   667                           
   668                           ;LAB1.c: 117:     TRISE = 0;
   669  0184  0189               	clrf	9	;volatile
   670  0185                     l1282:
   671                           
   672                           ;LAB1.c: 119:     PORTA = 0;
   673  0185  1283               	bcf	3,5	;RP0=0, select bank0
   674  0186  1303               	bcf	3,6	;RP1=0, select bank0
   675  0187  0185               	clrf	5	;volatile
   676  0188                     l1284:
   677                           
   678                           ;LAB1.c: 120:     PORTD = 0;
   679  0188  0188               	clrf	8	;volatile
   680  0189                     l1286:
   681                           
   682                           ;LAB1.c: 121:     PORTC = 0;
   683  0189  0187               	clrf	7	;volatile
   684  018A                     l1288:
   685                           
   686                           ;LAB1.c: 122:     PORTE = 0;
   687  018A  0189               	clrf	9	;volatile
   688  018B                     l1290:
   689                           
   690                           ;LAB1.c: 125:     OPTION_REGbits.nRBPU = 0;
   691  018B  1683               	bsf	3,5	;RP0=1, select bank1
   692  018C  1303               	bcf	3,6	;RP1=0, select bank1
   693  018D  1381               	bcf	1,7	;volatile
   694  018E                     l1292:
   695                           
   696                           ;LAB1.c: 126:     WPUBbits.WPUB0 = 1;
   697  018E  1415               	bsf	21,0	;volatile
   698  018F                     l1294:
   699                           
   700                           ;LAB1.c: 127:     WPUBbits.WPUB1 = 1;
   701  018F  1495               	bsf	21,1	;volatile
   702  0190                     l1296:
   703                           
   704                           ;LAB1.c: 130:     IOCBbits.IOCB0 = 1;
   705  0190  1416               	bsf	22,0	;volatile
   706  0191                     l1298:
   707                           
   708                           ;LAB1.c: 131:     IOCBbits.IOCB1 = 1;
   709  0191  1496               	bsf	22,1	;volatile
   710  0192                     l1300:
   711                           
   712                           ;LAB1.c: 132:     INTCONbits.RBIF = 0;
   713  0192  100B               	bcf	11,0	;volatile
   714  0193                     l1302:
   715                           
   716                           ;LAB1.c: 136:     OSCCONbits.IRCF = 0b0110;
   717  0193  080F               	movf	15,w	;volatile
   718  0194  398F               	andlw	-113
   719  0195  3860               	iorlw	96
   720  0196  008F               	movwf	15	;volatile
   721  0197                     l1304:
   722                           
   723                           ;LAB1.c: 137:     OSCCONbits.SCS = 1;
   724  0197  140F               	bsf	15,0	;volatile
   725  0198                     l1306:
   726                           
   727                           ;LAB1.c: 140:     OPTION_REGbits.T0CS = 0;
   728  0198  1281               	bcf	1,5	;volatile
   729  0199                     l1308:
   730                           
   731                           ;LAB1.c: 141:     OPTION_REGbits.T0SE = 0;
   732  0199  1201               	bcf	1,4	;volatile
   733  019A                     l1310:
   734                           
   735                           ;LAB1.c: 142:     OPTION_REGbits.PSA = 0;
   736  019A  1181               	bcf	1,3	;volatile
   737  019B                     l1312:
   738                           
   739                           ;LAB1.c: 143:     OPTION_REGbits.PS2 = 1;
   740  019B  1501               	bsf	1,2	;volatile
   741  019C                     l1314:
   742                           
   743                           ;LAB1.c: 144:     OPTION_REGbits.PS1 = 1;
   744  019C  1481               	bsf	1,1	;volatile
   745  019D                     l1316:
   746                           
   747                           ;LAB1.c: 145:     OPTION_REGbits.PS0 = 1;
   748  019D  1401               	bsf	1,0	;volatile
   749  019E                     l1318:
   750                           
   751                           ;LAB1.c: 146:     TMR0 = 237;
   752  019E  30ED               	movlw	237
   753  019F  1283               	bcf	3,5	;RP0=0, select bank0
   754  01A0  1303               	bcf	3,6	;RP1=0, select bank0
   755  01A1  0081               	movwf	1	;volatile
   756  01A2                     l1320:
   757                           
   758                           ;LAB1.c: 149:     ADCON1bits.ADFM = 0;
   759  01A2  1683               	bsf	3,5	;RP0=1, select bank1
   760  01A3  1303               	bcf	3,6	;RP1=0, select bank1
   761  01A4  139F               	bcf	31,7	;volatile
   762  01A5                     l1322:
   763                           
   764                           ;LAB1.c: 150:     ADCON1bits.VCFG0 = 0;
   765  01A5  121F               	bcf	31,4	;volatile
   766  01A6                     l1324:
   767                           
   768                           ;LAB1.c: 151:     ADCON1bits.VCFG1 = 0;
   769  01A6  129F               	bcf	31,5	;volatile
   770                           
   771                           ;LAB1.c: 153:     ADCON0bits.ADCS = 0b01;
   772  01A7  1283               	bcf	3,5	;RP0=0, select bank0
   773  01A8  1303               	bcf	3,6	;RP1=0, select bank0
   774  01A9  081F               	movf	31,w	;volatile
   775  01AA  393F               	andlw	-193
   776  01AB  3840               	iorlw	64
   777  01AC  009F               	movwf	31	;volatile
   778                           
   779                           ;LAB1.c: 154:     ADCON0bits.CHS = 5;
   780  01AD  081F               	movf	31,w	;volatile
   781  01AE  39C3               	andlw	-61
   782  01AF  3814               	iorlw	20
   783  01B0  009F               	movwf	31	;volatile
   784  01B1                     l1326:
   785                           
   786                           ;LAB1.c: 155:     ADCON0bits.ADON = 1;
   787  01B1  141F               	bsf	31,0	;volatile
   788  01B2                     l1328:
   789                           
   790                           ;LAB1.c: 156:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   791  01B2  300F               	movlw	15
   792  01B3  1283               	bcf	3,5	;RP0=0, select bank0
   793  01B4  1303               	bcf	3,6	;RP1=0, select bank0
   794  01B5  00B0               	movwf	??_setup
   795  01B6                     u517:
   796  01B6  0BB0               	decfsz	??_setup,f
   797  01B7  29B6               	goto	u517
   798  01B8  29B9               	nop2
   799  01B9                     l1330:
   800                           
   801                           ;LAB1.c: 159:     INTCONbits.T0IF = 0;
   802  01B9  110B               	bcf	11,2	;volatile
   803  01BA                     l1332:
   804                           
   805                           ;LAB1.c: 160:     INTCONbits.T0IE = 1;
   806  01BA  168B               	bsf	11,5	;volatile
   807  01BB                     l1334:
   808                           
   809                           ;LAB1.c: 161:     INTCONbits.RBIF = 0;
   810  01BB  100B               	bcf	11,0	;volatile
   811  01BC                     l1336:
   812                           
   813                           ;LAB1.c: 162:     INTCONbits.RBIE = 1;
   814  01BC  158B               	bsf	11,3	;volatile
   815  01BD                     l1338:
   816                           
   817                           ;LAB1.c: 163:     INTCONbits.GIE = 1;
   818  01BD  178B               	bsf	11,7	;volatile
   819  01BE                     l1340:
   820                           
   821                           ;LAB1.c: 164:     PIR1bits.ADIF = 0;
   822  01BE  1283               	bcf	3,5	;RP0=0, select bank0
   823  01BF  1303               	bcf	3,6	;RP1=0, select bank0
   824  01C0  130C               	bcf	12,6	;volatile
   825  01C1                     l1342:
   826                           
   827                           ;LAB1.c: 165:     PIE1bits.ADIE = 1;
   828  01C1  1683               	bsf	3,5	;RP0=1, select bank1
   829  01C2  1303               	bcf	3,6	;RP1=0, select bank1
   830  01C3  170C               	bsf	12,6	;volatile
   831  01C4                     l1344:
   832                           
   833                           ;LAB1.c: 166:     INTCONbits.PEIE = 1;
   834  01C4  170B               	bsf	11,6	;volatile
   835  01C5                     l106:
   836  01C5  0008               	return
   837  01C6                     __end_of_setup:
   838                           
   839                           	psect	text2
   840  01C6                     __ptext2:	
   841 ;; *************** function _isr *****************
   842 ;; Defined at:
   843 ;;		line 56 in file "LAB1.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;		None
   846 ;; Auto vars:     Size  Location     Type
   847 ;;		None
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      void 
   850 ;; Registers used:
   851 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   857 ;;      Params:         0       0       0       0       0
   858 ;;      Locals:         0       0       0       0       0
   859 ;;      Temps:          0       5       0       0       0
   860 ;;      Totals:         0       5       0       0       0
   861 ;;Total ram usage:        5 bytes
   862 ;; Hardware stack levels used: 1
   863 ;; Hardware stack levels required when called: 2
   864 ;; This function calls:
   865 ;;		_ADC
   866 ;;		_displays
   867 ;;		_tmr0
   868 ;; This function is called by:
   869 ;;		Interrupt level 1
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           
   874                           ;psect for function _isr
   875  01C6                     _isr:
   876  01C6                     i1l1348:
   877                           
   878                           ;LAB1.c: 57:     if(PIR1bits.ADIF){
   879  01C6  1F0C               	btfss	12,6	;volatile
   880  01C7  29C9               	goto	u39_21
   881  01C8  29CA               	goto	u39_20
   882  01C9                     u39_21:
   883  01C9  29CF               	goto	i1l1352
   884  01CA                     u39_20:
   885  01CA                     i1l1350:
   886                           
   887                           ;LAB1.c: 58:         ADC();
   888  01CA  120A  118A  211A  120A  118A  	fcall	_ADC
   889  01CF                     i1l1352:
   890                           
   891                           ;LAB1.c: 60:     if(T0IF){
   892  01CF  1D0B               	btfss	11,2	;volatile
   893  01D0  29D2               	goto	u40_21
   894  01D1  29D3               	goto	u40_20
   895  01D2                     u40_21:
   896  01D2  29DD               	goto	i1l1358
   897  01D3                     u40_20:
   898  01D3                     i1l1354:
   899                           
   900                           ;LAB1.c: 61:         tmr0();
   901  01D3  120A  118A  2275  120A  118A  	fcall	_tmr0
   902  01D8                     i1l1356:
   903                           
   904                           ;LAB1.c: 62:         displays();
   905  01D8  120A  118A  2244  120A  118A  	fcall	_displays
   906  01DD                     i1l1358:
   907                           
   908                           ;LAB1.c: 64:     if(INTCONbits.RBIF){
   909  01DD  1C0B               	btfss	11,0	;volatile
   910  01DE  29E0               	goto	u41_21
   911  01DF  29E1               	goto	u41_20
   912  01E0                     u41_21:
   913  01E0  29FA               	goto	i1l90
   914  01E1                     u41_20:
   915  01E1                     i1l1360:
   916                           
   917                           ;LAB1.c: 65:         if(RB0 == 0){
   918  01E1  1283               	bcf	3,5	;RP0=0, select bank0
   919  01E2  1303               	bcf	3,6	;RP1=0, select bank0
   920  01E3  1806               	btfsc	6,0	;volatile
   921  01E4  29E6               	goto	u42_21
   922  01E5  29E7               	goto	u42_20
   923  01E6                     u42_21:
   924  01E6  29EF               	goto	i1l1366
   925  01E7                     u42_20:
   926  01E7                     i1l83:
   927  01E7  1C06               	btfss	6,0	;volatile
   928  01E8  29EA               	goto	u43_21
   929  01E9  29EB               	goto	u43_20
   930  01EA                     u43_21:
   931  01EA  29E7               	goto	i1l83
   932  01EB                     u43_20:
   933  01EB                     i1l1364:
   934                           
   935                           ;LAB1.c: 67:             PORTA += 1;
   936  01EB  3001               	movlw	1
   937  01EC  00AB               	movwf	??_isr
   938  01ED  082B               	movf	??_isr,w
   939  01EE  0785               	addwf	5,f	;volatile
   940  01EF                     i1l1366:
   941                           
   942                           ;LAB1.c: 69:         if(RB1 == 0){
   943  01EF  1886               	btfsc	6,1	;volatile
   944  01F0  29F2               	goto	u44_21
   945  01F1  29F3               	goto	u44_20
   946  01F2                     u44_21:
   947  01F2  29F9               	goto	i1l1372
   948  01F3                     u44_20:
   949  01F3                     i1l87:
   950  01F3  1C86               	btfss	6,1	;volatile
   951  01F4  29F6               	goto	u45_21
   952  01F5  29F7               	goto	u45_20
   953  01F6                     u45_21:
   954  01F6  29F3               	goto	i1l87
   955  01F7                     u45_20:
   956  01F7                     i1l1370:
   957                           
   958                           ;LAB1.c: 71:             PORTA -= 1;
   959  01F7  3001               	movlw	1
   960  01F8  0285               	subwf	5,f	;volatile
   961  01F9                     i1l1372:
   962                           
   963                           ;LAB1.c: 73:         INTCONbits.RBIF = 0;
   964  01F9  100B               	bcf	11,0	;volatile
   965  01FA                     i1l90:
   966  01FA  1283               	bcf	3,5	;RP0=0, select bank0
   967  01FB  1303               	bcf	3,6	;RP1=0, select bank0
   968  01FC  082F               	movf	??_isr+4,w
   969  01FD  00FF               	movwf	btemp+1
   970  01FE  082E               	movf	??_isr+3,w
   971  01FF  008A               	movwf	10
   972  0200  082D               	movf	??_isr+2,w
   973  0201  0084               	movwf	4
   974  0202  0E2C               	swapf	??_isr+1,w
   975  0203  0083               	movwf	3
   976  0204  0EFE               	swapf	btemp,f
   977  0205  0E7E               	swapf	btemp,w
   978  0206  0009               	retfie
   979  0207                     __end_of_isr:
   980                           
   981                           	psect	intentry
   982  0004                     __pintentry:	
   983                           ;incstack = 0
   984                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   985                           
   986  0004                     interrupt_function:
   987  007E                     saved_w	set	btemp
   988  0004  00FE               	movwf	btemp
   989  0005  0E03               	swapf	3,w
   990  0006  1283               	bcf	3,5	;RP0=0, select bank0
   991  0007  1303               	bcf	3,6	;RP1=0, select bank0
   992  0008  00AC               	movwf	??_isr+1
   993  0009  0804               	movf	4,w
   994  000A  00AD               	movwf	??_isr+2
   995  000B  080A               	movf	10,w
   996  000C  00AE               	movwf	??_isr+3
   997  000D  087F               	movf	btemp+1,w
   998  000E  00AF               	movwf	??_isr+4
   999  000F  120A  118A  29C6   	ljmp	_isr
  1000                           
  1001                           	psect	text3
  1002  0275                     __ptext3:	
  1003 ;; *************** function _tmr0 *****************
  1004 ;; Defined at:
  1005 ;;		line 171 in file "LAB1.c"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;		None
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;		None
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      void 
  1012 ;; Registers used:
  1013 ;;		wreg
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1019 ;;      Params:         0       0       0       0       0
  1020 ;;      Locals:         0       0       0       0       0
  1021 ;;      Temps:          0       0       0       0       0
  1022 ;;      Totals:         0       0       0       0       0
  1023 ;;Total ram usage:        0 bytes
  1024 ;; Hardware stack levels used: 1
  1025 ;; This function calls:
  1026 ;;		Nothing
  1027 ;; This function is called by:
  1028 ;;		_isr
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032                           
  1033                           ;psect for function _tmr0
  1034  0275                     _tmr0:
  1035  0275                     i1l920:	
  1036                           ;incstack = 0
  1037                           ; Regs used in _tmr0: [wreg]
  1038                           
  1039                           
  1040                           ;LAB1.c: 172:     INTCONbits.T0IF = 0;
  1041  0275  110B               	bcf	11,2	;volatile
  1042  0276                     i1l922:
  1043                           
  1044                           ;LAB1.c: 173:     TMR0 = 237;
  1045  0276  30ED               	movlw	237
  1046  0277  1283               	bcf	3,5	;RP0=0, select bank0
  1047  0278  1303               	bcf	3,6	;RP1=0, select bank0
  1048  0279  0081               	movwf	1	;volatile
  1049  027A                     i1l109:
  1050  027A  0008               	return
  1051  027B                     __end_of_tmr0:
  1052                           
  1053                           	psect	text4
  1054  0244                     __ptext4:	
  1055 ;; *************** function _displays *****************
  1056 ;; Defined at:
  1057 ;;		line 178 in file "LAB1.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;		None
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;		None
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  1    wreg      void 
  1064 ;; Registers used:
  1065 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1071 ;;      Params:         0       0       0       0       0
  1072 ;;      Locals:         0       0       0       0       0
  1073 ;;      Temps:          1       0       0       0       0
  1074 ;;      Totals:         1       0       0       0       0
  1075 ;;Total ram usage:        1 bytes
  1076 ;; Hardware stack levels used: 1
  1077 ;; Hardware stack levels required when called: 1
  1078 ;; This function calls:
  1079 ;;		_tabla
  1080 ;; This function is called by:
  1081 ;;		_isr
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           
  1086                           ;psect for function _displays
  1087  0244                     _displays:
  1088  0244                     i1l1256:	
  1089                           ;incstack = 0
  1090                           ; Regs used in _displays: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1091                           
  1092                           
  1093                           ;LAB1.c: 179:     PORTD = disp_selector;
  1094  0244  1283               	bcf	3,5	;RP0=0, select bank0
  1095  0245  1303               	bcf	3,6	;RP1=0, select bank0
  1096  0246  0832               	movf	_disp_selector,w
  1097  0247  0088               	movwf	8	;volatile
  1098  0248                     i1l1258:
  1099                           
  1100                           ;LAB1.c: 180:     if(disp_selector == 0b001){
  1101  0248  0332               	decf	_disp_selector,w
  1102  0249  1D03               	btfss	3,2
  1103  024A  2A4C               	goto	u37_21
  1104  024B  2A4D               	goto	u37_20
  1105  024C                     u37_21:
  1106  024C  2A5F               	goto	i1l1264
  1107  024D                     u37_20:
  1108  024D                     i1l1260:
  1109                           
  1110                           ;LAB1.c: 181:         PORTC = tabla(dig[0]);
  1111  024D  0821               	movf	_dig+1,w
  1112  024E  00F1               	movwf	tabla@a+1
  1113  024F  0820               	movf	_dig,w
  1114  0250  00F0               	movwf	tabla@a
  1115  0251  120A  118A  202A  120A  118A  	fcall	_tabla
  1116  0256  0870               	movf	?_tabla,w
  1117  0257  1283               	bcf	3,5	;RP0=0, select bank0
  1118  0258  1303               	bcf	3,6	;RP1=0, select bank0
  1119  0259  0087               	movwf	7	;volatile
  1120  025A                     i1l1262:
  1121                           
  1122                           ;LAB1.c: 182:         disp_selector = 0b010;
  1123  025A  3002               	movlw	2
  1124  025B  00F2               	movwf	??_displays
  1125  025C  0872               	movf	??_displays,w
  1126  025D  00B2               	movwf	_disp_selector
  1127                           
  1128                           ;LAB1.c: 183:     }
  1129  025E  2A74               	goto	i1l115
  1130  025F                     i1l1264:
  1131  025F  3002               	movlw	2
  1132  0260  0632               	xorwf	_disp_selector,w
  1133  0261  1D03               	btfss	3,2
  1134  0262  2A64               	goto	u38_21
  1135  0263  2A65               	goto	u38_20
  1136  0264                     u38_21:
  1137  0264  2A74               	goto	i1l115
  1138  0265                     u38_20:
  1139  0265                     i1l1266:
  1140                           
  1141                           ;LAB1.c: 185:         PORTC = tabla(dig[1]);
  1142  0265  0823               	movf	_dig+3,w
  1143  0266  00F1               	movwf	tabla@a+1
  1144  0267  0822               	movf	_dig+2,w
  1145  0268  00F0               	movwf	tabla@a
  1146  0269  120A  118A  202A  120A  118A  	fcall	_tabla
  1147  026E  0870               	movf	?_tabla,w
  1148  026F  1283               	bcf	3,5	;RP0=0, select bank0
  1149  0270  1303               	bcf	3,6	;RP1=0, select bank0
  1150  0271  0087               	movwf	7	;volatile
  1151  0272                     i1l1268:
  1152                           
  1153                           ;LAB1.c: 186:         disp_selector = 0b001;
  1154  0272  01B2               	clrf	_disp_selector
  1155  0273  0AB2               	incf	_disp_selector,f
  1156  0274                     i1l115:
  1157  0274  0008               	return
  1158  0275                     __end_of_displays:
  1159                           
  1160                           	psect	text5
  1161  002A                     __ptext5:	
  1162 ;; *************** function _tabla *****************
  1163 ;; Defined at:
  1164 ;;		line 20 in file "ADC-7seg.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;  a               2    0[COMMON] int 
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;		None
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  2    0[COMMON] int 
  1171 ;; Registers used:
  1172 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1178 ;;      Params:         2       0       0       0       0
  1179 ;;      Locals:         0       0       0       0       0
  1180 ;;      Temps:          0       0       0       0       0
  1181 ;;      Totals:         2       0       0       0       0
  1182 ;;Total ram usage:        2 bytes
  1183 ;; Hardware stack levels used: 1
  1184 ;; This function calls:
  1185 ;;		Nothing
  1186 ;; This function is called by:
  1187 ;;		_displays
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           
  1192                           ;psect for function _tabla
  1193  002A                     _tabla:
  1194  002A                     i1l1088:	
  1195                           ;incstack = 0
  1196                           ; Regs used in _tabla: [wreg-fsr0h+status,2+status,0]
  1197                           
  1198                           
  1199                           ;ADC-7seg.c: 21:     switch (a){
  1200  002A  287B               	goto	i1l1188
  1201  002B                     i1l1090:
  1202                           
  1203                           ;ADC-7seg.c: 23:             return 0b00111111;
  1204  002B  303F               	movlw	63
  1205  002C  00F0               	movwf	?_tabla
  1206  002D  3000               	movlw	0
  1207  002E  00F1               	movwf	?_tabla+1
  1208  002F  28B2               	goto	i1l143
  1209  0030                     i1l1096:
  1210                           
  1211                           ;ADC-7seg.c: 26:             return 0b00000110;
  1212  0030  3006               	movlw	6
  1213  0031  00F0               	movwf	?_tabla
  1214  0032  3000               	movlw	0
  1215  0033  00F1               	movwf	?_tabla+1
  1216  0034  28B2               	goto	i1l143
  1217  0035                     i1l1102:
  1218                           
  1219                           ;ADC-7seg.c: 29:             return 0b01011011;
  1220  0035  305B               	movlw	91
  1221  0036  00F0               	movwf	?_tabla
  1222  0037  3000               	movlw	0
  1223  0038  00F1               	movwf	?_tabla+1
  1224  0039  28B2               	goto	i1l143
  1225  003A                     i1l1108:
  1226                           
  1227                           ;ADC-7seg.c: 32:             return 0b01001111;
  1228  003A  304F               	movlw	79
  1229  003B  00F0               	movwf	?_tabla
  1230  003C  3000               	movlw	0
  1231  003D  00F1               	movwf	?_tabla+1
  1232  003E  28B2               	goto	i1l143
  1233  003F                     i1l1114:
  1234                           
  1235                           ;ADC-7seg.c: 35:             return 0b01100110;
  1236  003F  3066               	movlw	102
  1237  0040  00F0               	movwf	?_tabla
  1238  0041  3000               	movlw	0
  1239  0042  00F1               	movwf	?_tabla+1
  1240  0043  28B2               	goto	i1l143
  1241  0044                     i1l1120:
  1242                           
  1243                           ;ADC-7seg.c: 38:             return 0b01101101;
  1244  0044  306D               	movlw	109
  1245  0045  00F0               	movwf	?_tabla
  1246  0046  3000               	movlw	0
  1247  0047  00F1               	movwf	?_tabla+1
  1248  0048  28B2               	goto	i1l143
  1249  0049                     i1l1126:
  1250                           
  1251                           ;ADC-7seg.c: 41:             return 0b01111101;
  1252  0049  307D               	movlw	125
  1253  004A  00F0               	movwf	?_tabla
  1254  004B  3000               	movlw	0
  1255  004C  00F1               	movwf	?_tabla+1
  1256  004D  28B2               	goto	i1l143
  1257  004E                     i1l1132:
  1258                           
  1259                           ;ADC-7seg.c: 44:             return 0b00000111;
  1260  004E  3007               	movlw	7
  1261  004F  00F0               	movwf	?_tabla
  1262  0050  3000               	movlw	0
  1263  0051  00F1               	movwf	?_tabla+1
  1264  0052  28B2               	goto	i1l143
  1265  0053                     i1l1138:
  1266                           
  1267                           ;ADC-7seg.c: 47:             return 0b01111111;
  1268  0053  307F               	movlw	127
  1269  0054  00F0               	movwf	?_tabla
  1270  0055  3000               	movlw	0
  1271  0056  00F1               	movwf	?_tabla+1
  1272  0057  28B2               	goto	i1l143
  1273  0058                     i1l1144:
  1274                           
  1275                           ;ADC-7seg.c: 50:             return 0b01101111;
  1276  0058  306F               	movlw	111
  1277  0059  00F0               	movwf	?_tabla
  1278  005A  3000               	movlw	0
  1279  005B  00F1               	movwf	?_tabla+1
  1280  005C  28B2               	goto	i1l143
  1281  005D                     i1l1150:
  1282                           
  1283                           ;ADC-7seg.c: 53:             return 0b01110111;
  1284  005D  3077               	movlw	119
  1285  005E  00F0               	movwf	?_tabla
  1286  005F  3000               	movlw	0
  1287  0060  00F1               	movwf	?_tabla+1
  1288  0061  28B2               	goto	i1l143
  1289  0062                     i1l1156:
  1290                           
  1291                           ;ADC-7seg.c: 56:             return 0b01111100;
  1292  0062  307C               	movlw	124
  1293  0063  00F0               	movwf	?_tabla
  1294  0064  3000               	movlw	0
  1295  0065  00F1               	movwf	?_tabla+1
  1296  0066  28B2               	goto	i1l143
  1297  0067                     i1l1162:
  1298                           
  1299                           ;ADC-7seg.c: 59:             return 0b00111001;
  1300  0067  3039               	movlw	57
  1301  0068  00F0               	movwf	?_tabla
  1302  0069  3000               	movlw	0
  1303  006A  00F1               	movwf	?_tabla+1
  1304  006B  28B2               	goto	i1l143
  1305  006C                     i1l1168:
  1306                           
  1307                           ;ADC-7seg.c: 62:             return 0b01011110;
  1308  006C  305E               	movlw	94
  1309  006D  00F0               	movwf	?_tabla
  1310  006E  3000               	movlw	0
  1311  006F  00F1               	movwf	?_tabla+1
  1312  0070  28B2               	goto	i1l143
  1313  0071                     i1l1174:
  1314                           
  1315                           ;ADC-7seg.c: 65:             return 0b01111001;
  1316  0071  3079               	movlw	121
  1317  0072  00F0               	movwf	?_tabla
  1318  0073  3000               	movlw	0
  1319  0074  00F1               	movwf	?_tabla+1
  1320  0075  28B2               	goto	i1l143
  1321  0076                     i1l1180:
  1322                           
  1323                           ;ADC-7seg.c: 68:             return 0b01110001;
  1324  0076  3071               	movlw	113
  1325  0077  00F0               	movwf	?_tabla
  1326  0078  3000               	movlw	0
  1327  0079  00F1               	movwf	?_tabla+1
  1328  007A  28B2               	goto	i1l143
  1329  007B                     i1l1188:
  1330                           
  1331                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1332                           ; Switch size 1, requested type "simple"
  1333                           ; Number of cases is 1, Range of values is 0 to 0
  1334                           ; switch strategies available:
  1335                           ; Name         Instructions Cycles
  1336                           ; simple_byte            4     3 (average)
  1337                           ; direct_byte           11     8 (fixed)
  1338                           ; jumptable            260     6 (fixed)
  1339                           ;	Chosen strategy is simple_byte
  1340  007B  0871               	movf	tabla@a+1,w
  1341  007C  3A00               	xorlw	0	; case 0
  1342  007D  1903               	skipnz
  1343  007E  2880               	goto	i1l1418
  1344  007F  28B2               	goto	i1l143
  1345  0080                     i1l1418:
  1346                           
  1347                           ; Switch size 1, requested type "simple"
  1348                           ; Number of cases is 16, Range of values is 0 to 15
  1349                           ; switch strategies available:
  1350                           ; Name         Instructions Cycles
  1351                           ; simple_byte           49    25 (average)
  1352                           ; direct_byte           56     8 (fixed)
  1353                           ; jumptable            260     6 (fixed)
  1354                           ;	Chosen strategy is simple_byte
  1355  0080  0870               	movf	tabla@a,w
  1356  0081  3A00               	xorlw	0	; case 0
  1357  0082  1903               	skipnz
  1358  0083  282B               	goto	i1l1090
  1359  0084  3A01               	xorlw	1	; case 1
  1360  0085  1903               	skipnz
  1361  0086  2830               	goto	i1l1096
  1362  0087  3A03               	xorlw	3	; case 2
  1363  0088  1903               	skipnz
  1364  0089  2835               	goto	i1l1102
  1365  008A  3A01               	xorlw	1	; case 3
  1366  008B  1903               	skipnz
  1367  008C  283A               	goto	i1l1108
  1368  008D  3A07               	xorlw	7	; case 4
  1369  008E  1903               	skipnz
  1370  008F  283F               	goto	i1l1114
  1371  0090  3A01               	xorlw	1	; case 5
  1372  0091  1903               	skipnz
  1373  0092  2844               	goto	i1l1120
  1374  0093  3A03               	xorlw	3	; case 6
  1375  0094  1903               	skipnz
  1376  0095  2849               	goto	i1l1126
  1377  0096  3A01               	xorlw	1	; case 7
  1378  0097  1903               	skipnz
  1379  0098  284E               	goto	i1l1132
  1380  0099  3A0F               	xorlw	15	; case 8
  1381  009A  1903               	skipnz
  1382  009B  2853               	goto	i1l1138
  1383  009C  3A01               	xorlw	1	; case 9
  1384  009D  1903               	skipnz
  1385  009E  2858               	goto	i1l1144
  1386  009F  3A03               	xorlw	3	; case 10
  1387  00A0  1903               	skipnz
  1388  00A1  285D               	goto	i1l1150
  1389  00A2  3A01               	xorlw	1	; case 11
  1390  00A3  1903               	skipnz
  1391  00A4  2862               	goto	i1l1156
  1392  00A5  3A07               	xorlw	7	; case 12
  1393  00A6  1903               	skipnz
  1394  00A7  2867               	goto	i1l1162
  1395  00A8  3A01               	xorlw	1	; case 13
  1396  00A9  1903               	skipnz
  1397  00AA  286C               	goto	i1l1168
  1398  00AB  3A03               	xorlw	3	; case 14
  1399  00AC  1903               	skipnz
  1400  00AD  2871               	goto	i1l1174
  1401  00AE  3A01               	xorlw	1	; case 15
  1402  00AF  1903               	skipnz
  1403  00B0  2876               	goto	i1l1180
  1404  00B1  28B2               	goto	i1l143
  1405  00B2                     i1l143:
  1406  00B2  0008               	return
  1407  00B3                     __end_of_tabla:
  1408                           
  1409                           	psect	text6
  1410  011A                     __ptext6:	
  1411 ;; *************** function _ADC *****************
  1412 ;; Defined at:
  1413 ;;		line 4 in file "ADC-7seg.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;		None
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;  i               2   12[COMMON] int 
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  1    wreg      void 
  1420 ;; Registers used:
  1421 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1427 ;;      Params:         0       0       0       0       0
  1428 ;;      Locals:         2       0       0       0       0
  1429 ;;      Temps:          3       0       0       0       0
  1430 ;;      Totals:         5       0       0       0       0
  1431 ;;Total ram usage:        5 bytes
  1432 ;; Hardware stack levels used: 1
  1433 ;; Hardware stack levels required when called: 1
  1434 ;; This function calls:
  1435 ;;		___awdiv
  1436 ;; This function is called by:
  1437 ;;		_isr
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           
  1442                           ;psect for function _ADC
  1443  011A                     _ADC:
  1444  011A                     i1l1238:	
  1445                           ;incstack = 0
  1446                           ; Regs used in _ADC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1447                           
  1448                           
  1449                           ;ADC-7seg.c: 5:     if(ADCON0bits.CHS == 8){
  1450  011A  1283               	bcf	3,5	;RP0=0, select bank0
  1451  011B  1303               	bcf	3,6	;RP1=0, select bank0
  1452  011C  0C1F               	rrf	31,w	;volatile
  1453  011D  00F9               	movwf	??_ADC
  1454  011E  0C79               	rrf	??_ADC,w
  1455  011F  390F               	andlw	15
  1456  0120  3A08               	xorlw	8
  1457  0121  1D03               	skipz
  1458  0122  2924               	goto	u35_21
  1459  0123  2925               	goto	u35_20
  1460  0124                     u35_21:
  1461  0124  2975               	goto	i1l137
  1462  0125                     u35_20:
  1463  0125                     i1l1240:
  1464                           
  1465                           ;ADC-7seg.c: 6:         unidades = ADRESH;
  1466  0125  081E               	movf	30,w	;volatile
  1467  0126  00F9               	movwf	??_ADC
  1468  0127  01FA               	clrf	??_ADC+1
  1469  0128  0879               	movf	??_ADC,w
  1470  0129  00A8               	movwf	_unidades
  1471  012A  087A               	movf	??_ADC+1,w
  1472  012B  00A9               	movwf	_unidades+1
  1473  012C                     i1l1242:
  1474                           
  1475                           ;ADC-7seg.c: 7:         for(int i = 0; i<3 ; i++){
  1476  012C  01FC               	clrf	ADC@i
  1477  012D  01FD               	clrf	ADC@i+1
  1478  012E                     i1l1248:
  1479                           
  1480                           ;ADC-7seg.c: 8:             dig[i] = unidades % 16;
  1481  012E  300F               	movlw	15
  1482  012F  1283               	bcf	3,5	;RP0=0, select bank0
  1483  0130  1303               	bcf	3,6	;RP1=0, select bank0
  1484  0131  0528               	andwf	_unidades,w
  1485  0132  00F9               	movwf	??_ADC
  1486  0133  3000               	movlw	0
  1487  0134  0529               	andwf	_unidades+1,w
  1488  0135  00FA               	movwf	??_ADC+1
  1489  0136  087C               	movf	ADC@i,w
  1490  0137  00FB               	movwf	??_ADC+2
  1491  0138  077B               	addwf	??_ADC+2,w
  1492  0139  3E20               	addlw	(low (_dig| 0))& (0+255)
  1493  013A  0084               	movwf	4
  1494  013B  0879               	movf	??_ADC,w
  1495  013C  1383               	bcf	3,7	;select IRP bank0
  1496  013D  0080               	movwf	0
  1497  013E  0A84               	incf	4,f
  1498  013F  087A               	movf	??_ADC+1,w
  1499  0140  0080               	movwf	0
  1500  0141                     i1l1250:
  1501                           
  1502                           ;ADC-7seg.c: 9:             unidades = (unidades - dig[i])/16;
  1503  0141  3010               	movlw	16
  1504  0142  00F0               	movwf	___awdiv@divisor
  1505  0143  3000               	movlw	0
  1506  0144  00F1               	movwf	___awdiv@divisor+1
  1507  0145  087C               	movf	ADC@i,w
  1508  0146  00F9               	movwf	??_ADC
  1509  0147  0779               	addwf	??_ADC,w
  1510  0148  3E20               	addlw	(low (_dig| 0))& (0+255)
  1511  0149  0084               	movwf	4
  1512  014A  0800               	movf	0,w
  1513  014B  00FA               	movwf	??_ADC+1
  1514  014C  0A84               	incf	4,f
  1515  014D  0800               	movf	0,w
  1516  014E  00FB               	movwf	??_ADC+2
  1517  014F  087A               	movf	??_ADC+1,w
  1518  0150  0228               	subwf	_unidades,w
  1519  0151  00F2               	movwf	___awdiv@dividend
  1520  0152  087B               	movf	??_ADC+2,w
  1521  0153  1C03               	skipc
  1522  0154  0A7B               	incf	??_ADC+2,w
  1523  0155  0229               	subwf	_unidades+1,w
  1524  0156  00F3               	movwf	___awdiv@dividend+1
  1525  0157  120A  118A  20B3  120A  118A  	fcall	___awdiv
  1526  015C  0871               	movf	?___awdiv+1,w
  1527  015D  1283               	bcf	3,5	;RP0=0, select bank0
  1528  015E  1303               	bcf	3,6	;RP1=0, select bank0
  1529  015F  00A9               	movwf	_unidades+1
  1530  0160  0870               	movf	?___awdiv,w
  1531  0161  00A8               	movwf	_unidades
  1532  0162                     i1l1252:
  1533                           
  1534                           ;ADC-7seg.c: 10:         }
  1535  0162  3001               	movlw	1
  1536  0163  07FC               	addwf	ADC@i,f
  1537  0164  1803               	skipnc
  1538  0165  0AFD               	incf	ADC@i+1,f
  1539  0166  3000               	movlw	0
  1540  0167  07FD               	addwf	ADC@i+1,f
  1541  0168                     i1l1254:
  1542  0168  087D               	movf	ADC@i+1,w
  1543  0169  3A80               	xorlw	128
  1544  016A  00FF               	movwf	btemp+1
  1545  016B  3080               	movlw	128
  1546  016C  027F               	subwf	btemp+1,w
  1547  016D  1D03               	skipz
  1548  016E  2971               	goto	u36_25
  1549  016F  3003               	movlw	3
  1550  0170  027C               	subwf	ADC@i,w
  1551  0171                     u36_25:
  1552  0171  1C03               	skipc
  1553  0172  2974               	goto	u36_21
  1554  0173  2975               	goto	u36_20
  1555  0174                     u36_21:
  1556  0174  292E               	goto	i1l1248
  1557  0175                     u36_20:
  1558  0175                     i1l137:	
  1559                           ;ADC-7seg.c: 14:     }
  1560                           
  1561                           
  1562                           ;ADC-7seg.c: 15:     PIR1bits.ADIF = 0;
  1563  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1564  0176  1303               	bcf	3,6	;RP1=0, select bank0
  1565  0177  130C               	bcf	12,6	;volatile
  1566  0178                     i1l138:
  1567  0178  0008               	return
  1568  0179                     __end_of_ADC:
  1569                           
  1570                           	psect	text7
  1571  00B3                     __ptext7:	
  1572 ;; *************** function ___awdiv *****************
  1573 ;; Defined at:
  1574 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;  divisor         2    0[COMMON] int 
  1577 ;;  dividend        2    2[COMMON] int 
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;  quotient        2    7[COMMON] int 
  1580 ;;  sign            1    6[COMMON] unsigned char 
  1581 ;;  counter         1    5[COMMON] unsigned char 
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  2    0[COMMON] int 
  1584 ;; Registers used:
  1585 ;;		wreg, status,2, status,0
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1591 ;;      Params:         4       0       0       0       0
  1592 ;;      Locals:         4       0       0       0       0
  1593 ;;      Temps:          1       0       0       0       0
  1594 ;;      Totals:         9       0       0       0       0
  1595 ;;Total ram usage:        9 bytes
  1596 ;; Hardware stack levels used: 1
  1597 ;; This function calls:
  1598 ;;		Nothing
  1599 ;; This function is called by:
  1600 ;;		_ADC
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           
  1605                           ;psect for function ___awdiv
  1606  00B3                     ___awdiv:
  1607  00B3                     i1l1194:	
  1608                           ;incstack = 0
  1609                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1610                           
  1611  00B3  01F6               	clrf	___awdiv@sign
  1612  00B4                     i1l1196:
  1613  00B4  1FF1               	btfss	___awdiv@divisor+1,7
  1614  00B5  28B7               	goto	u25_21
  1615  00B6  28B8               	goto	u25_20
  1616  00B7                     u25_21:
  1617  00B7  28BF               	goto	i1l1202
  1618  00B8                     u25_20:
  1619  00B8                     i1l1198:
  1620  00B8  09F0               	comf	___awdiv@divisor,f
  1621  00B9  09F1               	comf	___awdiv@divisor+1,f
  1622  00BA  0AF0               	incf	___awdiv@divisor,f
  1623  00BB  1903               	skipnz
  1624  00BC  0AF1               	incf	___awdiv@divisor+1,f
  1625  00BD                     i1l1200:
  1626  00BD  01F6               	clrf	___awdiv@sign
  1627  00BE  0AF6               	incf	___awdiv@sign,f
  1628  00BF                     i1l1202:
  1629  00BF  1FF3               	btfss	___awdiv@dividend+1,7
  1630  00C0  28C2               	goto	u26_21
  1631  00C1  28C3               	goto	u26_20
  1632  00C2                     u26_21:
  1633  00C2  28CC               	goto	i1l1208
  1634  00C3                     u26_20:
  1635  00C3                     i1l1204:
  1636  00C3  09F2               	comf	___awdiv@dividend,f
  1637  00C4  09F3               	comf	___awdiv@dividend+1,f
  1638  00C5  0AF2               	incf	___awdiv@dividend,f
  1639  00C6  1903               	skipnz
  1640  00C7  0AF3               	incf	___awdiv@dividend+1,f
  1641  00C8                     i1l1206:
  1642  00C8  3001               	movlw	1
  1643  00C9  00F4               	movwf	??___awdiv
  1644  00CA  0874               	movf	??___awdiv,w
  1645  00CB  06F6               	xorwf	___awdiv@sign,f
  1646  00CC                     i1l1208:
  1647  00CC  01F7               	clrf	___awdiv@quotient
  1648  00CD  01F8               	clrf	___awdiv@quotient+1
  1649  00CE                     i1l1210:
  1650  00CE  0870               	movf	___awdiv@divisor,w
  1651  00CF  0471               	iorwf	___awdiv@divisor+1,w
  1652  00D0  1903               	btfsc	3,2
  1653  00D1  28D3               	goto	u27_21
  1654  00D2  28D4               	goto	u27_20
  1655  00D3                     u27_21:
  1656  00D3  290B               	goto	i1l1230
  1657  00D4                     u27_20:
  1658  00D4                     i1l1212:
  1659  00D4  01F5               	clrf	___awdiv@counter
  1660  00D5  0AF5               	incf	___awdiv@counter,f
  1661  00D6  28E2               	goto	i1l1218
  1662  00D7                     i1l1214:
  1663  00D7  3001               	movlw	1
  1664  00D8                     u28_25:
  1665  00D8  1003               	clrc
  1666  00D9  0DF0               	rlf	___awdiv@divisor,f
  1667  00DA  0DF1               	rlf	___awdiv@divisor+1,f
  1668  00DB  3EFF               	addlw	-1
  1669  00DC  1D03               	skipz
  1670  00DD  28D8               	goto	u28_25
  1671  00DE                     i1l1216:
  1672  00DE  3001               	movlw	1
  1673  00DF  00F4               	movwf	??___awdiv
  1674  00E0  0874               	movf	??___awdiv,w
  1675  00E1  07F5               	addwf	___awdiv@counter,f
  1676  00E2                     i1l1218:
  1677  00E2  1FF1               	btfss	___awdiv@divisor+1,7
  1678  00E3  28E5               	goto	u29_21
  1679  00E4  28E6               	goto	u29_20
  1680  00E5                     u29_21:
  1681  00E5  28D7               	goto	i1l1214
  1682  00E6                     u29_20:
  1683  00E6                     i1l1220:
  1684  00E6  3001               	movlw	1
  1685  00E7                     u30_25:
  1686  00E7  1003               	clrc
  1687  00E8  0DF7               	rlf	___awdiv@quotient,f
  1688  00E9  0DF8               	rlf	___awdiv@quotient+1,f
  1689  00EA  3EFF               	addlw	-1
  1690  00EB  1D03               	skipz
  1691  00EC  28E7               	goto	u30_25
  1692  00ED  0871               	movf	___awdiv@divisor+1,w
  1693  00EE  0273               	subwf	___awdiv@dividend+1,w
  1694  00EF  1D03               	skipz
  1695  00F0  28F3               	goto	u31_25
  1696  00F1  0870               	movf	___awdiv@divisor,w
  1697  00F2  0272               	subwf	___awdiv@dividend,w
  1698  00F3                     u31_25:
  1699  00F3  1C03               	skipc
  1700  00F4  28F6               	goto	u31_21
  1701  00F5  28F7               	goto	u31_20
  1702  00F6                     u31_21:
  1703  00F6  28FE               	goto	i1l1226
  1704  00F7                     u31_20:
  1705  00F7                     i1l1222:
  1706  00F7  0870               	movf	___awdiv@divisor,w
  1707  00F8  02F2               	subwf	___awdiv@dividend,f
  1708  00F9  0871               	movf	___awdiv@divisor+1,w
  1709  00FA  1C03               	skipc
  1710  00FB  03F3               	decf	___awdiv@dividend+1,f
  1711  00FC  02F3               	subwf	___awdiv@dividend+1,f
  1712  00FD                     i1l1224:
  1713  00FD  1477               	bsf	___awdiv@quotient,0
  1714  00FE                     i1l1226:
  1715  00FE  3001               	movlw	1
  1716  00FF                     u32_25:
  1717  00FF  1003               	clrc
  1718  0100  0CF1               	rrf	___awdiv@divisor+1,f
  1719  0101  0CF0               	rrf	___awdiv@divisor,f
  1720  0102  3EFF               	addlw	-1
  1721  0103  1D03               	skipz
  1722  0104  28FF               	goto	u32_25
  1723  0105                     i1l1228:
  1724  0105  3001               	movlw	1
  1725  0106  02F5               	subwf	___awdiv@counter,f
  1726  0107  1D03               	btfss	3,2
  1727  0108  290A               	goto	u33_21
  1728  0109  290B               	goto	u33_20
  1729  010A                     u33_21:
  1730  010A  28E6               	goto	i1l1220
  1731  010B                     u33_20:
  1732  010B                     i1l1230:
  1733  010B  0876               	movf	___awdiv@sign,w
  1734  010C  1903               	btfsc	3,2
  1735  010D  290F               	goto	u34_21
  1736  010E  2910               	goto	u34_20
  1737  010F                     u34_21:
  1738  010F  2915               	goto	i1l1234
  1739  0110                     u34_20:
  1740  0110                     i1l1232:
  1741  0110  09F7               	comf	___awdiv@quotient,f
  1742  0111  09F8               	comf	___awdiv@quotient+1,f
  1743  0112  0AF7               	incf	___awdiv@quotient,f
  1744  0113  1903               	skipnz
  1745  0114  0AF8               	incf	___awdiv@quotient+1,f
  1746  0115                     i1l1234:
  1747  0115  0878               	movf	___awdiv@quotient+1,w
  1748  0116  00F1               	movwf	?___awdiv+1
  1749  0117  0877               	movf	___awdiv@quotient,w
  1750  0118  00F0               	movwf	?___awdiv
  1751  0119                     i1l399:
  1752  0119  0008               	return
  1753  011A                     __end_of___awdiv:
  1754  007E                     btemp	set	126	;btemp
  1755  007E                     wtemp0	set	126
  1756                           
  1757                           	psect	config
  1758                           
  1759                           ;Config register CONFIG1 @ 0x2007
  1760                           ;	Oscillator Selection bits
  1761                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1762                           ;	Watchdog Timer Enable bit
  1763                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1764                           ;	Power-up Timer Enable bit
  1765                           ;	PWRTE = OFF, PWRT disabled
  1766                           ;	RE3/MCLR pin function select bit
  1767                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1768                           ;	Code Protection bit
  1769                           ;	CP = OFF, Program memory code protection is disabled
  1770                           ;	Data Code Protection bit
  1771                           ;	CPD = OFF, Data memory code protection is disabled
  1772                           ;	Brown Out Reset Selection bits
  1773                           ;	BOREN = OFF, BOR disabled
  1774                           ;	Internal External Switchover bit
  1775                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1776                           ;	Fail-Safe Clock Monitor Enabled bit
  1777                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1778                           ;	Low Voltage Programming Enable bit
  1779                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1780                           ;	In-Circuit Debugger Mode bit
  1781                           ;	DEBUG = 0x1, unprogrammed default
  1782  2007                     	org	8199
  1783  2007  20D4               	dw	8404
  1784                           
  1785                           ;Config register CONFIG2 @ 0x2008
  1786                           ;	Brown-out Reset Selection bit
  1787                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1788                           ;	Flash Program Memory Self Write Enable bits
  1789                           ;	WRT = OFF, Write protection off
  1790  2008                     	org	8200
  1791  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      7      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_ADC
    _displays->_tabla
    _ADC->___awdiv

Critical Paths under _main in BANK0

    _main->_setup

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              6 BANK0      1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  5     5      0     716
                                              0 BANK0      5     5      0
                                _ADC
                           _displays
                               _tmr0
 ---------------------------------------------------------------------------------
 (3) _tmr0                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _displays                                             1     1      0     174
                                              2 COMMON     1     1      0
                              _tabla
 ---------------------------------------------------------------------------------
 (4) _tabla                                                2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADC                                                  5     5      0     542
                                              9 COMMON     5     5      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)
   _ADC
     ___awdiv
   _displays
     _tabla
   _tmr0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      7      13       5       23.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      21      12        0.0%
ABS                  0      0      21       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jan 27 09:04:29 2022

                     l99 023F             ___awdiv@sign 0076                      l106 01C5  
                    _ADC 011A                      _RB0 0030                      _RB1 0031  
                    u507 0231                      u460 0213                      u517 01B6  
                    u461 0212                      u470 021C                      u471 021B  
                    u480 023D                      u481 023C                      u497 0224  
                    _dig 0020                      _isr 01C6                      fsr0 0004  
                    indf 0000                     ADC@i 007C                     ?_ADC 0070  
                   l1300 0192                     l1310 019A                     l1302 0193  
                   l1320 01A2                     l1312 019B                     l1304 0197  
                   l1330 01B9                     l1322 01A5                     l1314 019C  
                   l1306 0198                     l1340 01BE                     l1332 01BA  
                   l1324 01A6                     l1316 019D                     l1308 0199  
                   l1342 01C1                     l1334 01BB                     l1326 01B1  
                   l1318 019E                     l1344 01C4                     l1336 01BC  
                   l1328 01B2                     l1280 0184                     l1272 0179  
                   l1338 01BD                     l1290 018B                     l1282 0185  
                   l1274 0180                     l1292 018E                     l1284 0188  
                   l1276 0182                     l1380 0213                     l1294 018F  
                   l1286 0189                     l1278 0183                     l1390 022D  
                   l1382 021C                     l1374 0207                     l1296 0190  
                   l1288 018A                     l1392 0234                     l1384 0220  
                   l1376 020C                     l1298 0191                     l1386 0228  
                   l1394 0237                     l1378 020F                     l1396 023D  
                   ?_isr 0070                     _T0IF 005A                     i1l90 01FA  
                   i1l83 01E7                     i1l87 01F3                     _TMR0 0001  
                   _main 0207                     _tmr0 0275                     btemp 007E  
                   start 0012                    ??_ADC 0079                    ??_isr 002B  
                  ?_main 0070          __end_of___awdiv 011A                    ?_tmr0 0070  
                  _ANSEL 0188          ___awdiv@divisor 0070                    i1l115 0274  
                  i1l109 027A                    i1l143 00B2                    i1l137 0175  
                  i1l138 0178                    i1l399 0119                    i1l920 0275  
                  i1l922 0276          ___awdiv@counter 0075                    u30_25 00E7  
                  u31_20 00F7                    u31_21 00F6                    u31_25 00F3  
                  u40_20 01D3                    u40_21 01D2                    u32_25 00FF  
                  u33_20 010B                    u25_20 00B8                    u41_20 01E1  
                  u33_21 010A                    u25_21 00B7                    u41_21 01E0  
                  u34_20 0110                    u26_20 00C3                    u42_20 01E7  
                  u34_21 010F                    u26_21 00C2                    u42_21 01E6  
                  u27_20 00D4                    u35_20 0125                    u43_20 01EB  
                  u27_21 00D3                    u35_21 0124                    u43_21 01EA  
                  _PORTA 0005                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    u36_20 0175                    u44_20 01F3  
                  u36_21 0174                    u44_21 01F2                    u28_25 00D8  
                  u36_25 0171                    u29_20 00E6                    u37_20 024D  
                  u45_20 01F7                    u29_21 00E5                    u37_21 024C  
                  u45_21 01F6                    u38_20 0265                    u38_21 0264  
                  u39_20 01CA                    u39_21 01C9                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _tabla 002A                    _setup 0179  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0015             __end_of_main 0244             __end_of_tmr0 027B  
                 ??_main 0031                   ??_tmr0 0070                   ?_tabla 0070  
                 _ADRESH 001E         ___awdiv@dividend 0072                   ?_setup 0070  
                 _ANSELH 0189                   i1l1102 0035                   i1l1200 00BD  
                 i1l1120 0044                   i1l1210 00CE                   i1l1202 00BF  
                 i1l1114 003F                   i1l1220 00E6                   i1l1212 00D4  
                 i1l1204 00C3                   i1l1132 004E                   i1l1108 003A  
                 i1l1222 00F7                   i1l1214 00D7                   i1l1230 010B  
                 i1l1206 00C8                   i1l1150 005D                   i1l1126 0049  
                 i1l1232 0110                   i1l1224 00FD                   i1l1216 00DE  
                 i1l1208 00CC                   i1l1240 0125                   i1l1144 0058  
                 i1l1234 0115                   i1l1226 00FE                   i1l1218 00E2  
                 i1l1250 0141                   i1l1242 012C                   i1l1162 0067  
                 i1l1138 0053                   i1l1090 002B                   i1l1228 0105  
                 i1l1252 0162                   i1l1180 0076                   i1l1156 0062  
                 i1l1260 024D                   i1l1254 0168                   i1l1238 011A  
                 i1l1174 0071                   i1l1262 025A                   i1l1350 01CA  
                 i1l1248 012E                   i1l1168 006C                   i1l1096 0030  
                 i1l1088 002A                   i1l1264 025F                   i1l1256 0244  
                 i1l1360 01E1                   i1l1352 01CF                   i1l1194 00B3  
                 i1l1418 0080                   i1l1266 0265                   i1l1258 0248  
                 i1l1370 01F7                   i1l1354 01D3                   i1l1196 00B4  
                 i1l1188 007B                   i1l1268 0272                   i1l1372 01F9  
                 i1l1364 01EB                   i1l1356 01D8                   i1l1348 01C6  
                 i1l1198 00B8                   i1l1366 01EF                   i1l1358 01DD  
       __end_of_displays 0275                ??___awdiv 0074         ___awdiv@quotient 0077  
                 tabla@a 0070                   saved_w 007E  __end_of__initialization 0026  
         __pcstackCOMMON 0070             __pidataBANK0 027B            __end_of_tabla 00B3  
          __end_of_setup 01C6           _OPTION_REGbits 0081                  ??_tabla 0072  
                ??_setup 0030               __pbssBANK0 0020               __pmaintext 0207  
             __pintentry 0004                ?_displays 0070                  ___awdiv 00B3  
                _decenas 0026                  __ptext1 0179                  __ptext2 01C6  
                __ptext3 0275                  __ptext4 0244                  __ptext5 002A  
                __ptext6 011A                  __ptext7 00B3             __size_of_ADC 005F  
           __size_of_isr 0041               ??_displays 0072     end_of_initialization 0026  
              _PORTEbits 0009      start_initialization 0015              __end_of_ADC 0179  
            __end_of_isr 0207              __pdataBANK0 0032                ___latbits 0002  
          __pcstackBANK0 002B        __size_of_displays 0031                 ?___awdiv 0070  
         __size_of_tabla 0089           __size_of_setup 004D        interrupt_function 0004  
               _IOCBbits 0096                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F                 _WPUBbits 0095  
               _Puerto_A 002A         __size_of___awdiv 0067                 _displays 0244  
          __size_of_main 003D            __size_of_tmr0 0006                 _unidades 0028  
             _INTCONbits 000B                 intlevel1 0000               _OSCCONbits 008F  
          _disp_selector 0032  
