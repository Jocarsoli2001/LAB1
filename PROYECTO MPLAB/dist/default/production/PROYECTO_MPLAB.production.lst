

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jan 27 05:31:47 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212                           
   213                           	psect	idataBANK0
   214  024D                     __pidataBANK0:
   215                           
   216                           ;initializer for _disp_selector
   217  024D  3401               	retlw	1
   218  000B                     _INTCONbits	set	11
   219  0001                     _TMR0	set	1
   220  0009                     _PORTE	set	9
   221  0007                     _PORTC	set	7
   222  0008                     _PORTD	set	8
   223  0005                     _PORTA	set	5
   224  0006                     _PORTB	set	6
   225  001E                     _ADRESH	set	30
   226  001F                     _ADCON0bits	set	31
   227  000C                     _PIR1bits	set	12
   228  005A                     _T0IF	set	90
   229  008C                     _PIE1bits	set	140
   230  009F                     _ADCON1bits	set	159
   231  0081                     _OPTION_REGbits	set	129
   232  008F                     _OSCCONbits	set	143
   233  0089                     _TRISE	set	137
   234  0088                     _TRISD	set	136
   235  0087                     _TRISC	set	135
   236  0085                     _TRISA	set	133
   237  0189                     _ANSELH	set	393
   238  0188                     _ANSEL	set	392
   239                           
   240                           	psect	cinit
   241  0015                     start_initialization:	
   242                           ; #config settings
   243                           
   244  0015                     __initialization:
   245                           
   246                           ; Initialize objects allocated to BANK0
   247  0015  120A  118A  224D  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   248  001A  00B2               	movwf	__pdataBANK0& (0+127)
   249                           
   250                           ; Clear objects allocated to BANK0
   251  001B  01A0               	clrf	__pbssBANK0& (0+127)
   252  001C  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   253  001D  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   254  001E  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   255  001F  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   256  0020  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   257  0021  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   258  0022  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   259  0023  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   260  0024  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   261  0025                     end_of_initialization:	
   262                           ;End of C runtime variable initialization code
   263                           
   264  0025                     __end_of__initialization:
   265  0025  0183               	clrf	3
   266  0026  120A  118A  29E2   	ljmp	_main	;jump to C main() function
   267                           
   268                           	psect	bssBANK0
   269  0020                     __pbssBANK0:
   270  0020                     _dig:
   271  0020                     	ds	6
   272  0026                     _decenas:
   273  0026                     	ds	2
   274  0028                     _unidades:
   275  0028                     	ds	2
   276                           
   277                           	psect	dataBANK0
   278  0032                     __pdataBANK0:
   279  0032                     _disp_selector:
   280  0032                     	ds	1
   281                           
   282                           	psect	cstackCOMMON
   283  0070                     __pcstackCOMMON:
   284  0070                     ?_divisor_hex:
   285  0070                     ?_tmr0:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0070                     ??_tmr0:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ?_displays:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ?_setup:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ?_isr:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ?_main:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0070                     ?_tabla:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0070                     ?___awdiv:	
   307                           ; 2 bytes @ 0x0
   308                           
   309  0070                     tabla@a:	
   310                           ; 2 bytes @ 0x0
   311                           
   312  0070                     ___awdiv@divisor:	
   313                           ; 2 bytes @ 0x0
   314                           
   315                           
   316                           ; 2 bytes @ 0x0
   317  0070                     	ds	2
   318  0072                     ??_displays:
   319  0072                     ??_tabla:	
   320                           ; 1 bytes @ 0x2
   321                           
   322  0072                     ___awdiv@dividend:	
   323                           ; 1 bytes @ 0x2
   324                           
   325                           
   326                           ; 2 bytes @ 0x2
   327  0072                     	ds	2
   328  0074                     ??___awdiv:
   329                           
   330                           ; 1 bytes @ 0x4
   331  0074                     	ds	1
   332  0075                     ___awdiv@counter:
   333                           
   334                           ; 1 bytes @ 0x5
   335  0075                     	ds	1
   336  0076                     ___awdiv@sign:
   337                           
   338                           ; 1 bytes @ 0x6
   339  0076                     	ds	1
   340  0077                     ___awdiv@quotient:
   341                           
   342                           ; 2 bytes @ 0x7
   343  0077                     	ds	2
   344  0079                     ??_divisor_hex:
   345                           
   346                           ; 1 bytes @ 0x9
   347  0079                     	ds	3
   348  007C                     divisor_hex@i:
   349                           
   350                           ; 2 bytes @ 0xC
   351  007C                     	ds	2
   352                           
   353                           	psect	cstackBANK0
   354  002A                     __pcstackBANK0:
   355  002A                     ??_isr:
   356                           
   357                           ; 1 bytes @ 0x0
   358  002A                     	ds	6
   359  0030                     ??_setup:
   360                           
   361                           ; 1 bytes @ 0x6
   362  0030                     	ds	1
   363  0031                     ??_main:
   364                           
   365                           ; 1 bytes @ 0x7
   366  0031                     	ds	1
   367                           
   368                           	psect	maintext
   369  01E2                     __pmaintext:	
   370 ;;
   371 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   372 ;;
   373 ;; *************** function _main *****************
   374 ;; Defined at:
   375 ;;		line 77 in file "LAB1.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;		None
   378 ;; Auto vars:     Size  Location     Type
   379 ;;		None
   380 ;; Return value:  Size  Location     Type
   381 ;;                  1    wreg      void 
   382 ;; Registers used:
   383 ;;		wreg, status,2, status,0, pclath, cstack
   384 ;; Tracked objects:
   385 ;;		On entry : B00/0
   386 ;;		On exit  : 0/0
   387 ;;		Unchanged: 0/0
   388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   389 ;;      Params:         0       0       0       0       0
   390 ;;      Locals:         0       0       0       0       0
   391 ;;      Temps:          0       1       0       0       0
   392 ;;      Totals:         0       1       0       0       0
   393 ;;Total ram usage:        1 bytes
   394 ;; Hardware stack levels required when called: 4
   395 ;; This function calls:
   396 ;;		_setup
   397 ;; This function is called by:
   398 ;;		Startup code after reset
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402                           
   403                           ;psect for function _main
   404  01E2                     _main:
   405  01E2                     l1277:	
   406                           ;incstack = 0
   407                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   408                           
   409                           
   410                           ;LAB1.c: 78:     setup();
   411  01E2  120A  118A  2163  120A  118A  	fcall	_setup
   412  01E7                     l1279:
   413                           
   414                           ;LAB1.c: 79:     ADCON0bits.GO = 1;
   415  01E7  1283               	bcf	3,5	;RP0=0, select bank0
   416  01E8  1303               	bcf	3,6	;RP1=0, select bank0
   417  01E9  149F               	bsf	31,1	;volatile
   418  01EA                     l1281:
   419                           
   420                           ;LAB1.c: 81:         if(ADCON0bits.GO == 0){
   421  01EA  189F               	btfsc	31,1	;volatile
   422  01EB  29ED               	goto	u351
   423  01EC  29EE               	goto	u350
   424  01ED                     u351:
   425  01ED  29EA               	goto	l1281
   426  01EE                     u350:
   427  01EE                     l1283:
   428                           
   429                           ;LAB1.c: 82:             if(ADCON0bits.CHS == 6){
   430  01EE  0C1F               	rrf	31,w	;volatile
   431  01EF  00B1               	movwf	??_main
   432  01F0  0C31               	rrf	??_main,w
   433  01F1  390F               	andlw	15
   434  01F2  3A06               	xorlw	6
   435  01F3  1D03               	skipz
   436  01F4  29F6               	goto	u361
   437  01F5  29F7               	goto	u360
   438  01F6                     u361:
   439  01F6  2A03               	goto	l1289
   440  01F7                     u360:
   441  01F7                     l1285:
   442                           
   443                           ;LAB1.c: 83:                 ADCON0bits.CHS = 5;
   444  01F7  081F               	movf	31,w	;volatile
   445  01F8  39C3               	andlw	-61
   446  01F9  3814               	iorlw	20
   447  01FA  009F               	movwf	31	;volatile
   448  01FB                     l1287:
   449                           
   450                           ;LAB1.c: 84:                 _delay((unsigned long)((50)*(4000000/4000000.0)));
   451  01FB  300F               	movlw	15
   452  01FC  1283               	bcf	3,5	;RP0=0, select bank0
   453  01FD  1303               	bcf	3,6	;RP1=0, select bank0
   454  01FE  00B1               	movwf	??_main
   455  01FF                     u377:
   456  01FF  0BB1               	decfsz	??_main,f
   457  0200  29FF               	goto	u377
   458  0201  2A02               	nop2
   459                           
   460                           ;LAB1.c: 85:             }
   461  0202  2A08               	goto	l1293
   462  0203                     l1289:
   463                           
   464                           ;LAB1.c: 87:                 ADCON0bits.CHS = 6;
   465  0203  081F               	movf	31,w	;volatile
   466  0204  39C3               	andlw	-61
   467  0205  3818               	iorlw	24
   468  0206  009F               	movwf	31	;volatile
   469  0207  29FB               	goto	l1287
   470  0208                     l1293:
   471                           
   472                           ;LAB1.c: 90:             _delay((unsigned long)((50)*(4000000/4000000.0)));
   473  0208  300F               	movlw	15
   474  0209  1283               	bcf	3,5	;RP0=0, select bank0
   475  020A  1303               	bcf	3,6	;RP1=0, select bank0
   476  020B  00B1               	movwf	??_main
   477  020C                     u387:
   478  020C  0BB1               	decfsz	??_main,f
   479  020D  2A0C               	goto	u387
   480  020E  2A0F               	nop2
   481  020F                     l1295:
   482                           
   483                           ;LAB1.c: 91:             ADCON0bits.GO = 1;
   484  020F  1283               	bcf	3,5	;RP0=0, select bank0
   485  0210  1303               	bcf	3,6	;RP1=0, select bank0
   486  0211  149F               	bsf	31,1	;volatile
   487  0212  29EA               	goto	l1281
   488  0213  120A  118A  2812   	ljmp	start
   489  0216                     __end_of_main:
   490                           
   491                           	psect	text1
   492  0163                     __ptext1:	
   493 ;; *************** function _setup *****************
   494 ;; Defined at:
   495 ;;		line 97 in file "LAB1.c"
   496 ;; Parameters:    Size  Location     Type
   497 ;;		None
   498 ;; Auto vars:     Size  Location     Type
   499 ;;		None
   500 ;; Return value:  Size  Location     Type
   501 ;;                  1    wreg      void 
   502 ;; Registers used:
   503 ;;		wreg, status,2, status,0
   504 ;; Tracked objects:
   505 ;;		On entry : 0/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   509 ;;      Params:         0       0       0       0       0
   510 ;;      Locals:         0       0       0       0       0
   511 ;;      Temps:          0       1       0       0       0
   512 ;;      Totals:         0       1       0       0       0
   513 ;;Total ram usage:        1 bytes
   514 ;; Hardware stack levels used: 1
   515 ;; Hardware stack levels required when called: 3
   516 ;; This function calls:
   517 ;;		Nothing
   518 ;; This function is called by:
   519 ;;		_main
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           
   524                           ;psect for function _setup
   525  0163                     _setup:
   526  0163                     l1199:	
   527                           ;incstack = 0
   528                           ; Regs used in _setup: [wreg+status,2+status,0]
   529                           
   530                           
   531                           ;LAB1.c: 100:     ANSEL = 0b00100000;
   532  0163  3020               	movlw	32
   533  0164  1683               	bsf	3,5	;RP0=1, select bank3
   534  0165  1703               	bsf	3,6	;RP1=1, select bank3
   535  0166  0088               	movwf	8	;volatile
   536  0167                     l1201:
   537                           
   538                           ;LAB1.c: 101:     ANSELH = 0;
   539  0167  0189               	clrf	9	;volatile
   540  0168                     l1203:
   541                           
   542                           ;LAB1.c: 103:     TRISA = 0;
   543  0168  1683               	bsf	3,5	;RP0=1, select bank1
   544  0169  1303               	bcf	3,6	;RP1=0, select bank1
   545  016A  0185               	clrf	5	;volatile
   546  016B                     l1205:
   547                           
   548                           ;LAB1.c: 104:     TRISC = 0;
   549  016B  0187               	clrf	7	;volatile
   550  016C                     l1207:
   551                           
   552                           ;LAB1.c: 105:     TRISD = 0;
   553  016C  0188               	clrf	8	;volatile
   554                           
   555                           ;LAB1.c: 106:     TRISE = 0b0001;
   556  016D  3001               	movlw	1
   557  016E  0089               	movwf	9	;volatile
   558  016F                     l1209:
   559                           
   560                           ;LAB1.c: 108:     PORTA = 0;
   561  016F  1283               	bcf	3,5	;RP0=0, select bank0
   562  0170  1303               	bcf	3,6	;RP1=0, select bank0
   563  0171  0185               	clrf	5	;volatile
   564  0172                     l1211:
   565                           
   566                           ;LAB1.c: 109:     PORTD = 0;
   567  0172  0188               	clrf	8	;volatile
   568  0173                     l1213:
   569                           
   570                           ;LAB1.c: 110:     PORTC = 0;
   571  0173  0187               	clrf	7	;volatile
   572  0174                     l1215:
   573                           
   574                           ;LAB1.c: 111:     PORTE = 0;
   575  0174  0189               	clrf	9	;volatile
   576  0175                     l1217:
   577                           
   578                           ;LAB1.c: 114:     OSCCONbits.IRCF = 0b0110;
   579  0175  1683               	bsf	3,5	;RP0=1, select bank1
   580  0176  1303               	bcf	3,6	;RP1=0, select bank1
   581  0177  080F               	movf	15,w	;volatile
   582  0178  398F               	andlw	-113
   583  0179  3860               	iorlw	96
   584  017A  008F               	movwf	15	;volatile
   585  017B                     l1219:
   586                           
   587                           ;LAB1.c: 115:     OSCCONbits.SCS = 1;
   588  017B  140F               	bsf	15,0	;volatile
   589  017C                     l1221:
   590                           
   591                           ;LAB1.c: 118:     OPTION_REGbits.T0CS = 0;
   592  017C  1281               	bcf	1,5	;volatile
   593  017D                     l1223:
   594                           
   595                           ;LAB1.c: 119:     OPTION_REGbits.T0SE = 0;
   596  017D  1201               	bcf	1,4	;volatile
   597  017E                     l1225:
   598                           
   599                           ;LAB1.c: 120:     OPTION_REGbits.PSA = 0;
   600  017E  1181               	bcf	1,3	;volatile
   601  017F                     l1227:
   602                           
   603                           ;LAB1.c: 121:     OPTION_REGbits.PS2 = 1;
   604  017F  1501               	bsf	1,2	;volatile
   605  0180                     l1229:
   606                           
   607                           ;LAB1.c: 122:     OPTION_REGbits.PS1 = 1;
   608  0180  1481               	bsf	1,1	;volatile
   609  0181                     l1231:
   610                           
   611                           ;LAB1.c: 123:     OPTION_REGbits.PS0 = 1;
   612  0181  1401               	bsf	1,0	;volatile
   613  0182                     l1233:
   614                           
   615                           ;LAB1.c: 124:     TMR0 = 237;
   616  0182  30ED               	movlw	237
   617  0183  1283               	bcf	3,5	;RP0=0, select bank0
   618  0184  1303               	bcf	3,6	;RP1=0, select bank0
   619  0185  0081               	movwf	1	;volatile
   620  0186                     l1235:
   621                           
   622                           ;LAB1.c: 127:     ADCON1bits.ADFM = 0;
   623  0186  1683               	bsf	3,5	;RP0=1, select bank1
   624  0187  1303               	bcf	3,6	;RP1=0, select bank1
   625  0188  139F               	bcf	31,7	;volatile
   626  0189                     l1237:
   627                           
   628                           ;LAB1.c: 128:     ADCON1bits.VCFG0 = 0;
   629  0189  121F               	bcf	31,4	;volatile
   630  018A                     l1239:
   631                           
   632                           ;LAB1.c: 129:     ADCON1bits.VCFG1 = 0;
   633  018A  129F               	bcf	31,5	;volatile
   634                           
   635                           ;LAB1.c: 131:     ADCON0bits.ADCS = 0b01;
   636  018B  1283               	bcf	3,5	;RP0=0, select bank0
   637  018C  1303               	bcf	3,6	;RP1=0, select bank0
   638  018D  081F               	movf	31,w	;volatile
   639  018E  393F               	andlw	-193
   640  018F  3840               	iorlw	64
   641  0190  009F               	movwf	31	;volatile
   642                           
   643                           ;LAB1.c: 132:     ADCON0bits.CHS = 5;
   644  0191  081F               	movf	31,w	;volatile
   645  0192  39C3               	andlw	-61
   646  0193  3814               	iorlw	20
   647  0194  009F               	movwf	31	;volatile
   648  0195                     l1241:
   649                           
   650                           ;LAB1.c: 133:     ADCON0bits.ADON = 1;
   651  0195  141F               	bsf	31,0	;volatile
   652  0196                     l1243:
   653                           
   654                           ;LAB1.c: 134:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   655  0196  300F               	movlw	15
   656  0197  1283               	bcf	3,5	;RP0=0, select bank0
   657  0198  1303               	bcf	3,6	;RP1=0, select bank0
   658  0199  00B0               	movwf	??_setup
   659  019A                     u397:
   660  019A  0BB0               	decfsz	??_setup,f
   661  019B  299A               	goto	u397
   662  019C  299D               	nop2
   663  019D                     l1245:
   664                           
   665                           ;LAB1.c: 137:     INTCONbits.T0IF = 0;
   666  019D  110B               	bcf	11,2	;volatile
   667  019E                     l1247:
   668                           
   669                           ;LAB1.c: 138:     INTCONbits.T0IE = 1;
   670  019E  168B               	bsf	11,5	;volatile
   671  019F                     l1249:
   672                           
   673                           ;LAB1.c: 139:     INTCONbits.GIE = 1;
   674  019F  178B               	bsf	11,7	;volatile
   675  01A0                     l1251:
   676                           
   677                           ;LAB1.c: 140:     PIR1bits.ADIF = 0;
   678  01A0  1283               	bcf	3,5	;RP0=0, select bank0
   679  01A1  1303               	bcf	3,6	;RP1=0, select bank0
   680  01A2  130C               	bcf	12,6	;volatile
   681  01A3                     l1253:
   682                           
   683                           ;LAB1.c: 141:     PIE1bits.ADIE = 1;
   684  01A3  1683               	bsf	3,5	;RP0=1, select bank1
   685  01A4  1303               	bcf	3,6	;RP1=0, select bank1
   686  01A5  170C               	bsf	12,6	;volatile
   687  01A6                     l1255:
   688                           
   689                           ;LAB1.c: 142:     INTCONbits.PEIE = 1;
   690  01A6  170B               	bsf	11,6	;volatile
   691  01A7                     l85:
   692  01A7  0008               	return
   693  01A8                     __end_of_setup:
   694                           
   695                           	psect	text2
   696  01A8                     __ptext2:	
   697 ;; *************** function _isr *****************
   698 ;; Defined at:
   699 ;;		line 59 in file "LAB1.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;		None
   702 ;; Auto vars:     Size  Location     Type
   703 ;;		None
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   713 ;;      Params:         0       0       0       0       0
   714 ;;      Locals:         0       0       0       0       0
   715 ;;      Temps:          0       6       0       0       0
   716 ;;      Totals:         0       6       0       0       0
   717 ;;Total ram usage:        6 bytes
   718 ;; Hardware stack levels used: 1
   719 ;; Hardware stack levels required when called: 2
   720 ;; This function calls:
   721 ;;		_displays
   722 ;;		_divisor_hex
   723 ;;		_tmr0
   724 ;; This function is called by:
   725 ;;		Interrupt level 1
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           
   730                           ;psect for function _isr
   731  01A8                     _isr:
   732  01A8                     i1l1259:
   733                           
   734                           ;LAB1.c: 60:     if(PIR1bits.ADIF){
   735  01A8  1F0C               	btfss	12,6	;volatile
   736  01A9  29AB               	goto	u32_21
   737  01AA  29AC               	goto	u32_20
   738  01AB                     u32_21:
   739  01AB  29C7               	goto	i1l1271
   740  01AC                     u32_20:
   741  01AC                     i1l1261:
   742                           
   743                           ;LAB1.c: 61:         if(ADCON0bits.CHS == 5){
   744  01AC  0C1F               	rrf	31,w	;volatile
   745  01AD  00AA               	movwf	??_isr
   746  01AE  0C2A               	rrf	??_isr,w
   747  01AF  390F               	andlw	15
   748  01B0  3A05               	xorlw	5
   749  01B1  1D03               	skipz
   750  01B2  29B4               	goto	u33_21
   751  01B3  29B5               	goto	u33_20
   752  01B4                     u33_21:
   753  01B4  29C2               	goto	i1l1267
   754  01B5                     u33_20:
   755  01B5                     i1l1263:
   756                           
   757                           ;LAB1.c: 62:             unidades = ADRESH;
   758  01B5  081E               	movf	30,w	;volatile
   759  01B6  00AA               	movwf	??_isr
   760  01B7  01AB               	clrf	??_isr+1
   761  01B8  082A               	movf	??_isr,w
   762  01B9  00A8               	movwf	_unidades
   763  01BA  082B               	movf	??_isr+1,w
   764  01BB  00A9               	movwf	_unidades+1
   765  01BC                     i1l1265:
   766                           
   767                           ;LAB1.c: 63:             divisor_hex();
   768  01BC  120A  118A  2119  120A  118A  	fcall	_divisor_hex
   769                           
   770                           ;LAB1.c: 64:         }
   771  01C1  29C4               	goto	i1l1269
   772  01C2                     i1l1267:
   773                           
   774                           ;LAB1.c: 66:             PORTB = ADRESH;
   775  01C2  081E               	movf	30,w	;volatile
   776  01C3  0086               	movwf	6	;volatile
   777  01C4                     i1l1269:
   778                           
   779                           ;LAB1.c: 68:         PIR1bits.ADIF = 0;
   780  01C4  1283               	bcf	3,5	;RP0=0, select bank0
   781  01C5  1303               	bcf	3,6	;RP1=0, select bank0
   782  01C6  130C               	bcf	12,6	;volatile
   783  01C7                     i1l1271:
   784                           
   785                           ;LAB1.c: 70:     if(T0IF){
   786  01C7  1D0B               	btfss	11,2	;volatile
   787  01C8  29CA               	goto	u34_21
   788  01C9  29CB               	goto	u34_20
   789  01CA                     u34_21:
   790  01CA  29D5               	goto	i1l71
   791  01CB                     u34_20:
   792  01CB                     i1l1273:
   793                           
   794                           ;LAB1.c: 71:         tmr0();
   795  01CB  120A  118A  2247  120A  118A  	fcall	_tmr0
   796  01D0                     i1l1275:
   797                           
   798                           ;LAB1.c: 72:         displays();
   799  01D0  120A  118A  2216  120A  118A  	fcall	_displays
   800  01D5                     i1l71:
   801  01D5  1283               	bcf	3,5	;RP0=0, select bank0
   802  01D6  1303               	bcf	3,6	;RP1=0, select bank0
   803  01D7  082F               	movf	??_isr+5,w
   804  01D8  00FF               	movwf	btemp+1
   805  01D9  082E               	movf	??_isr+4,w
   806  01DA  008A               	movwf	10
   807  01DB  082D               	movf	??_isr+3,w
   808  01DC  0084               	movwf	4
   809  01DD  0E2C               	swapf	??_isr+2,w
   810  01DE  0083               	movwf	3
   811  01DF  0EFE               	swapf	btemp,f
   812  01E0  0E7E               	swapf	btemp,w
   813  01E1  0009               	retfie
   814  01E2                     __end_of_isr:
   815                           
   816                           	psect	intentry
   817  0004                     __pintentry:	
   818                           ;incstack = 0
   819                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   820                           
   821  0004                     interrupt_function:
   822  007E                     saved_w	set	btemp
   823  0004  00FE               	movwf	btemp
   824  0005  0E03               	swapf	3,w
   825  0006  1283               	bcf	3,5	;RP0=0, select bank0
   826  0007  1303               	bcf	3,6	;RP1=0, select bank0
   827  0008  00AC               	movwf	??_isr+2
   828  0009  0804               	movf	4,w
   829  000A  00AD               	movwf	??_isr+3
   830  000B  080A               	movf	10,w
   831  000C  00AE               	movwf	??_isr+4
   832  000D  087F               	movf	btemp+1,w
   833  000E  00AF               	movwf	??_isr+5
   834  000F  120A  118A  29A8   	ljmp	_isr
   835                           
   836                           	psect	text3
   837  0247                     __ptext3:	
   838 ;; *************** function _tmr0 *****************
   839 ;; Defined at:
   840 ;;		line 147 in file "LAB1.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;		None
   843 ;; Auto vars:     Size  Location     Type
   844 ;;		None
   845 ;; Return value:  Size  Location     Type
   846 ;;                  1    wreg      void 
   847 ;; Registers used:
   848 ;;		wreg
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   854 ;;      Params:         0       0       0       0       0
   855 ;;      Locals:         0       0       0       0       0
   856 ;;      Temps:          0       0       0       0       0
   857 ;;      Totals:         0       0       0       0       0
   858 ;;Total ram usage:        0 bytes
   859 ;; Hardware stack levels used: 1
   860 ;; This function calls:
   861 ;;		Nothing
   862 ;; This function is called by:
   863 ;;		_isr
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           
   868                           ;psect for function _tmr0
   869  0247                     _tmr0:
   870  0247                     i1l1179:	
   871                           ;incstack = 0
   872                           ; Regs used in _tmr0: [wreg]
   873                           
   874                           
   875                           ;LAB1.c: 148:     INTCONbits.T0IF = 0;
   876  0247  110B               	bcf	11,2	;volatile
   877  0248                     i1l1181:
   878                           
   879                           ;LAB1.c: 149:     TMR0 = 237;
   880  0248  30ED               	movlw	237
   881  0249  1283               	bcf	3,5	;RP0=0, select bank0
   882  024A  1303               	bcf	3,6	;RP1=0, select bank0
   883  024B  0081               	movwf	1	;volatile
   884  024C                     i1l88:
   885  024C  0008               	return
   886  024D                     __end_of_tmr0:
   887                           
   888                           	psect	text4
   889  0119                     __ptext4:	
   890 ;; *************** function _divisor_hex *****************
   891 ;; Defined at:
   892 ;;		line 153 in file "LAB1.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;  i               2   12[COMMON] int 
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   906 ;;      Params:         0       0       0       0       0
   907 ;;      Locals:         2       0       0       0       0
   908 ;;      Temps:          3       0       0       0       0
   909 ;;      Totals:         5       0       0       0       0
   910 ;;Total ram usage:        5 bytes
   911 ;; Hardware stack levels used: 1
   912 ;; Hardware stack levels required when called: 1
   913 ;; This function calls:
   914 ;;		___awdiv
   915 ;; This function is called by:
   916 ;;		_isr
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           
   921                           ;psect for function _divisor_hex
   922  0119                     _divisor_hex:
   923  0119                     i1l1165:	
   924                           ;incstack = 0
   925                           ; Regs used in _divisor_hex: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   926                           
   927                           
   928                           ;LAB1.c: 154:     for(int i = 0; i<3 ; i++){
   929  0119  01FC               	clrf	divisor_hex@i
   930  011A  01FD               	clrf	divisor_hex@i+1
   931  011B                     i1l1171:
   932                           
   933                           ;LAB1.c: 155:         dig[i] = unidades % 16;
   934  011B  300F               	movlw	15
   935  011C  1283               	bcf	3,5	;RP0=0, select bank0
   936  011D  1303               	bcf	3,6	;RP1=0, select bank0
   937  011E  0528               	andwf	_unidades,w
   938  011F  00F9               	movwf	??_divisor_hex
   939  0120  3000               	movlw	0
   940  0121  0529               	andwf	_unidades+1,w
   941  0122  00FA               	movwf	??_divisor_hex+1
   942  0123  087C               	movf	divisor_hex@i,w
   943  0124  00FB               	movwf	??_divisor_hex+2
   944  0125  077B               	addwf	??_divisor_hex+2,w
   945  0126  3E20               	addlw	(low (_dig| 0))& (0+255)
   946  0127  0084               	movwf	4
   947  0128  0879               	movf	??_divisor_hex,w
   948  0129  1383               	bcf	3,7	;select IRP bank0
   949  012A  0080               	movwf	0
   950  012B  0A84               	incf	4,f
   951  012C  087A               	movf	??_divisor_hex+1,w
   952  012D  0080               	movwf	0
   953  012E                     i1l1173:
   954                           
   955                           ;LAB1.c: 156:         unidades = (unidades - dig[i])/16;
   956  012E  3010               	movlw	16
   957  012F  00F0               	movwf	___awdiv@divisor
   958  0130  3000               	movlw	0
   959  0131  00F1               	movwf	___awdiv@divisor+1
   960  0132  087C               	movf	divisor_hex@i,w
   961  0133  00F9               	movwf	??_divisor_hex
   962  0134  0779               	addwf	??_divisor_hex,w
   963  0135  3E20               	addlw	(low (_dig| 0))& (0+255)
   964  0136  0084               	movwf	4
   965  0137  0800               	movf	0,w
   966  0138  00FA               	movwf	??_divisor_hex+1
   967  0139  0A84               	incf	4,f
   968  013A  0800               	movf	0,w
   969  013B  00FB               	movwf	??_divisor_hex+2
   970  013C  087A               	movf	??_divisor_hex+1,w
   971  013D  0228               	subwf	_unidades,w
   972  013E  00F2               	movwf	___awdiv@dividend
   973  013F  087B               	movf	??_divisor_hex+2,w
   974  0140  1C03               	skipc
   975  0141  0A7B               	incf	??_divisor_hex+2,w
   976  0142  0229               	subwf	_unidades+1,w
   977  0143  00F3               	movwf	___awdiv@dividend+1
   978  0144  120A  118A  20B2  120A  118A  	fcall	___awdiv
   979  0149  0871               	movf	?___awdiv+1,w
   980  014A  1283               	bcf	3,5	;RP0=0, select bank0
   981  014B  1303               	bcf	3,6	;RP1=0, select bank0
   982  014C  00A9               	movwf	_unidades+1
   983  014D  0870               	movf	?___awdiv,w
   984  014E  00A8               	movwf	_unidades
   985  014F                     i1l1175:
   986                           
   987                           ;LAB1.c: 157:     }
   988  014F  3001               	movlw	1
   989  0150  07FC               	addwf	divisor_hex@i,f
   990  0151  1803               	skipnc
   991  0152  0AFD               	incf	divisor_hex@i+1,f
   992  0153  3000               	movlw	0
   993  0154  07FD               	addwf	divisor_hex@i+1,f
   994  0155                     i1l1177:
   995  0155  087D               	movf	divisor_hex@i+1,w
   996  0156  3A80               	xorlw	128
   997  0157  00FF               	movwf	btemp+1
   998  0158  3080               	movlw	128
   999  0159  027F               	subwf	btemp+1,w
  1000  015A  1D03               	skipz
  1001  015B  295E               	goto	u29_25
  1002  015C  3003               	movlw	3
  1003  015D  027C               	subwf	divisor_hex@i,w
  1004  015E                     u29_25:
  1005  015E  1C03               	skipc
  1006  015F  2961               	goto	u29_21
  1007  0160  2962               	goto	u29_20
  1008  0161                     u29_21:
  1009  0161  291B               	goto	i1l1171
  1010  0162                     u29_20:
  1011  0162                     i1l93:
  1012  0162  0008               	return
  1013  0163                     __end_of_divisor_hex:
  1014                           
  1015                           	psect	text5
  1016  00B2                     __ptext5:	
  1017 ;; *************** function ___awdiv *****************
  1018 ;; Defined at:
  1019 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  divisor         2    0[COMMON] int 
  1022 ;;  dividend        2    2[COMMON] int 
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  quotient        2    7[COMMON] int 
  1025 ;;  sign            1    6[COMMON] unsigned char 
  1026 ;;  counter         1    5[COMMON] unsigned char 
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  2    0[COMMON] int 
  1029 ;; Registers used:
  1030 ;;		wreg, status,2, status,0
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1036 ;;      Params:         4       0       0       0       0
  1037 ;;      Locals:         4       0       0       0       0
  1038 ;;      Temps:          1       0       0       0       0
  1039 ;;      Totals:         9       0       0       0       0
  1040 ;;Total ram usage:        9 bytes
  1041 ;; Hardware stack levels used: 1
  1042 ;; This function calls:
  1043 ;;		Nothing
  1044 ;; This function is called by:
  1045 ;;		_divisor_hex
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           
  1050                           ;psect for function ___awdiv
  1051  00B2                     ___awdiv:
  1052  00B2                     i1l1121:	
  1053                           ;incstack = 0
  1054                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1055                           
  1056  00B2  01F6               	clrf	___awdiv@sign
  1057  00B3                     i1l1123:
  1058  00B3  1FF1               	btfss	___awdiv@divisor+1,7
  1059  00B4  28B6               	goto	u19_21
  1060  00B5  28B7               	goto	u19_20
  1061  00B6                     u19_21:
  1062  00B6  28BE               	goto	i1l1129
  1063  00B7                     u19_20:
  1064  00B7                     i1l1125:
  1065  00B7  09F0               	comf	___awdiv@divisor,f
  1066  00B8  09F1               	comf	___awdiv@divisor+1,f
  1067  00B9  0AF0               	incf	___awdiv@divisor,f
  1068  00BA  1903               	skipnz
  1069  00BB  0AF1               	incf	___awdiv@divisor+1,f
  1070  00BC                     i1l1127:
  1071  00BC  01F6               	clrf	___awdiv@sign
  1072  00BD  0AF6               	incf	___awdiv@sign,f
  1073  00BE                     i1l1129:
  1074  00BE  1FF3               	btfss	___awdiv@dividend+1,7
  1075  00BF  28C1               	goto	u20_21
  1076  00C0  28C2               	goto	u20_20
  1077  00C1                     u20_21:
  1078  00C1  28CB               	goto	i1l1135
  1079  00C2                     u20_20:
  1080  00C2                     i1l1131:
  1081  00C2  09F2               	comf	___awdiv@dividend,f
  1082  00C3  09F3               	comf	___awdiv@dividend+1,f
  1083  00C4  0AF2               	incf	___awdiv@dividend,f
  1084  00C5  1903               	skipnz
  1085  00C6  0AF3               	incf	___awdiv@dividend+1,f
  1086  00C7                     i1l1133:
  1087  00C7  3001               	movlw	1
  1088  00C8  00F4               	movwf	??___awdiv
  1089  00C9  0874               	movf	??___awdiv,w
  1090  00CA  06F6               	xorwf	___awdiv@sign,f
  1091  00CB                     i1l1135:
  1092  00CB  01F7               	clrf	___awdiv@quotient
  1093  00CC  01F8               	clrf	___awdiv@quotient+1
  1094  00CD                     i1l1137:
  1095  00CD  0870               	movf	___awdiv@divisor,w
  1096  00CE  0471               	iorwf	___awdiv@divisor+1,w
  1097  00CF  1903               	btfsc	3,2
  1098  00D0  28D2               	goto	u21_21
  1099  00D1  28D3               	goto	u21_20
  1100  00D2                     u21_21:
  1101  00D2  290A               	goto	i1l1157
  1102  00D3                     u21_20:
  1103  00D3                     i1l1139:
  1104  00D3  01F5               	clrf	___awdiv@counter
  1105  00D4  0AF5               	incf	___awdiv@counter,f
  1106  00D5  28E1               	goto	i1l1145
  1107  00D6                     i1l1141:
  1108  00D6  3001               	movlw	1
  1109  00D7                     u22_25:
  1110  00D7  1003               	clrc
  1111  00D8  0DF0               	rlf	___awdiv@divisor,f
  1112  00D9  0DF1               	rlf	___awdiv@divisor+1,f
  1113  00DA  3EFF               	addlw	-1
  1114  00DB  1D03               	skipz
  1115  00DC  28D7               	goto	u22_25
  1116  00DD                     i1l1143:
  1117  00DD  3001               	movlw	1
  1118  00DE  00F4               	movwf	??___awdiv
  1119  00DF  0874               	movf	??___awdiv,w
  1120  00E0  07F5               	addwf	___awdiv@counter,f
  1121  00E1                     i1l1145:
  1122  00E1  1FF1               	btfss	___awdiv@divisor+1,7
  1123  00E2  28E4               	goto	u23_21
  1124  00E3  28E5               	goto	u23_20
  1125  00E4                     u23_21:
  1126  00E4  28D6               	goto	i1l1141
  1127  00E5                     u23_20:
  1128  00E5                     i1l1147:
  1129  00E5  3001               	movlw	1
  1130  00E6                     u24_25:
  1131  00E6  1003               	clrc
  1132  00E7  0DF7               	rlf	___awdiv@quotient,f
  1133  00E8  0DF8               	rlf	___awdiv@quotient+1,f
  1134  00E9  3EFF               	addlw	-1
  1135  00EA  1D03               	skipz
  1136  00EB  28E6               	goto	u24_25
  1137  00EC  0871               	movf	___awdiv@divisor+1,w
  1138  00ED  0273               	subwf	___awdiv@dividend+1,w
  1139  00EE  1D03               	skipz
  1140  00EF  28F2               	goto	u25_25
  1141  00F0  0870               	movf	___awdiv@divisor,w
  1142  00F1  0272               	subwf	___awdiv@dividend,w
  1143  00F2                     u25_25:
  1144  00F2  1C03               	skipc
  1145  00F3  28F5               	goto	u25_21
  1146  00F4  28F6               	goto	u25_20
  1147  00F5                     u25_21:
  1148  00F5  28FD               	goto	i1l1153
  1149  00F6                     u25_20:
  1150  00F6                     i1l1149:
  1151  00F6  0870               	movf	___awdiv@divisor,w
  1152  00F7  02F2               	subwf	___awdiv@dividend,f
  1153  00F8  0871               	movf	___awdiv@divisor+1,w
  1154  00F9  1C03               	skipc
  1155  00FA  03F3               	decf	___awdiv@dividend+1,f
  1156  00FB  02F3               	subwf	___awdiv@dividend+1,f
  1157  00FC                     i1l1151:
  1158  00FC  1477               	bsf	___awdiv@quotient,0
  1159  00FD                     i1l1153:
  1160  00FD  3001               	movlw	1
  1161  00FE                     u26_25:
  1162  00FE  1003               	clrc
  1163  00FF  0CF1               	rrf	___awdiv@divisor+1,f
  1164  0100  0CF0               	rrf	___awdiv@divisor,f
  1165  0101  3EFF               	addlw	-1
  1166  0102  1D03               	skipz
  1167  0103  28FE               	goto	u26_25
  1168  0104                     i1l1155:
  1169  0104  3001               	movlw	1
  1170  0105  02F5               	subwf	___awdiv@counter,f
  1171  0106  1D03               	btfss	3,2
  1172  0107  2909               	goto	u27_21
  1173  0108  290A               	goto	u27_20
  1174  0109                     u27_21:
  1175  0109  28E5               	goto	i1l1147
  1176  010A                     u27_20:
  1177  010A                     i1l1157:
  1178  010A  0876               	movf	___awdiv@sign,w
  1179  010B  1903               	btfsc	3,2
  1180  010C  290E               	goto	u28_21
  1181  010D  290F               	goto	u28_20
  1182  010E                     u28_21:
  1183  010E  2914               	goto	i1l1161
  1184  010F                     u28_20:
  1185  010F                     i1l1159:
  1186  010F  09F7               	comf	___awdiv@quotient,f
  1187  0110  09F8               	comf	___awdiv@quotient+1,f
  1188  0111  0AF7               	incf	___awdiv@quotient,f
  1189  0112  1903               	skipnz
  1190  0113  0AF8               	incf	___awdiv@quotient+1,f
  1191  0114                     i1l1161:
  1192  0114  0878               	movf	___awdiv@quotient+1,w
  1193  0115  00F1               	movwf	?___awdiv+1
  1194  0116  0877               	movf	___awdiv@quotient,w
  1195  0117  00F0               	movwf	?___awdiv
  1196  0118                     i1l360:
  1197  0118  0008               	return
  1198  0119                     __end_of___awdiv:
  1199                           
  1200                           	psect	text6
  1201  0216                     __ptext6:	
  1202 ;; *************** function _displays *****************
  1203 ;; Defined at:
  1204 ;;		line 160 in file "LAB1.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;		None
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;		None
  1209 ;; Return value:  Size  Location     Type
  1210 ;;                  1    wreg      void 
  1211 ;; Registers used:
  1212 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1218 ;;      Params:         0       0       0       0       0
  1219 ;;      Locals:         0       0       0       0       0
  1220 ;;      Temps:          1       0       0       0       0
  1221 ;;      Totals:         1       0       0       0       0
  1222 ;;Total ram usage:        1 bytes
  1223 ;; Hardware stack levels used: 1
  1224 ;; Hardware stack levels required when called: 1
  1225 ;; This function calls:
  1226 ;;		_tabla
  1227 ;; This function is called by:
  1228 ;;		_isr
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           
  1233                           ;psect for function _displays
  1234  0216                     _displays:
  1235  0216                     i1l1185:	
  1236                           ;incstack = 0
  1237                           ; Regs used in _displays: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1238                           
  1239                           
  1240                           ;LAB1.c: 161:     PORTD = disp_selector;
  1241  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1242  0217  1303               	bcf	3,6	;RP1=0, select bank0
  1243  0218  0832               	movf	_disp_selector,w
  1244  0219  0088               	movwf	8	;volatile
  1245  021A                     i1l1187:
  1246                           
  1247                           ;LAB1.c: 162:     if(disp_selector == 0b001){
  1248  021A  0332               	decf	_disp_selector,w
  1249  021B  1D03               	btfss	3,2
  1250  021C  2A1E               	goto	u30_21
  1251  021D  2A1F               	goto	u30_20
  1252  021E                     u30_21:
  1253  021E  2A31               	goto	i1l1193
  1254  021F                     u30_20:
  1255  021F                     i1l1189:
  1256                           
  1257                           ;LAB1.c: 163:         PORTC = tabla(dig[0]);
  1258  021F  0821               	movf	_dig+1,w
  1259  0220  00F1               	movwf	tabla@a+1
  1260  0221  0820               	movf	_dig,w
  1261  0222  00F0               	movwf	tabla@a
  1262  0223  120A  118A  2029  120A  118A  	fcall	_tabla
  1263  0228  0870               	movf	?_tabla,w
  1264  0229  1283               	bcf	3,5	;RP0=0, select bank0
  1265  022A  1303               	bcf	3,6	;RP1=0, select bank0
  1266  022B  0087               	movwf	7	;volatile
  1267  022C                     i1l1191:
  1268                           
  1269                           ;LAB1.c: 164:         disp_selector = 0b010;
  1270  022C  3002               	movlw	2
  1271  022D  00F2               	movwf	??_displays
  1272  022E  0872               	movf	??_displays,w
  1273  022F  00B2               	movwf	_disp_selector
  1274                           
  1275                           ;LAB1.c: 165:     }
  1276  0230  2A46               	goto	i1l99
  1277  0231                     i1l1193:
  1278  0231  3002               	movlw	2
  1279  0232  0632               	xorwf	_disp_selector,w
  1280  0233  1D03               	btfss	3,2
  1281  0234  2A36               	goto	u31_21
  1282  0235  2A37               	goto	u31_20
  1283  0236                     u31_21:
  1284  0236  2A46               	goto	i1l99
  1285  0237                     u31_20:
  1286  0237                     i1l1195:
  1287                           
  1288                           ;LAB1.c: 167:         PORTC = tabla(dig[1]);
  1289  0237  0823               	movf	_dig+3,w
  1290  0238  00F1               	movwf	tabla@a+1
  1291  0239  0822               	movf	_dig+2,w
  1292  023A  00F0               	movwf	tabla@a
  1293  023B  120A  118A  2029  120A  118A  	fcall	_tabla
  1294  0240  0870               	movf	?_tabla,w
  1295  0241  1283               	bcf	3,5	;RP0=0, select bank0
  1296  0242  1303               	bcf	3,6	;RP1=0, select bank0
  1297  0243  0087               	movwf	7	;volatile
  1298  0244                     i1l1197:
  1299                           
  1300                           ;LAB1.c: 168:         disp_selector = 0b001;
  1301  0244  01B2               	clrf	_disp_selector
  1302  0245  0AB2               	incf	_disp_selector,f
  1303  0246                     i1l99:
  1304  0246  0008               	return
  1305  0247                     __end_of_displays:
  1306                           
  1307                           	psect	text7
  1308  0029                     __ptext7:	
  1309 ;; *************** function _tabla *****************
  1310 ;; Defined at:
  1311 ;;		line 172 in file "LAB1.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  a               2    0[COMMON] int 
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;		None
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  2    0[COMMON] int 
  1318 ;; Registers used:
  1319 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1325 ;;      Params:         2       0       0       0       0
  1326 ;;      Locals:         0       0       0       0       0
  1327 ;;      Temps:          0       0       0       0       0
  1328 ;;      Totals:         2       0       0       0       0
  1329 ;;Total ram usage:        2 bytes
  1330 ;; Hardware stack levels used: 1
  1331 ;; This function calls:
  1332 ;;		Nothing
  1333 ;; This function is called by:
  1334 ;;		_displays
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           
  1339                           ;psect for function _tabla
  1340  0029                     _tabla:
  1341  0029                     i1l1015:	
  1342                           ;incstack = 0
  1343                           ; Regs used in _tabla: [wreg-fsr0h+status,2+status,0]
  1344                           
  1345                           
  1346                           ;LAB1.c: 173:     switch (a){
  1347  0029  287A               	goto	i1l1115
  1348  002A                     i1l1017:
  1349                           
  1350                           ;LAB1.c: 175:             return 0b00111111;
  1351  002A  303F               	movlw	63
  1352  002B  00F0               	movwf	?_tabla
  1353  002C  3000               	movlw	0
  1354  002D  00F1               	movwf	?_tabla+1
  1355  002E  28B1               	goto	i1l104
  1356  002F                     i1l1023:
  1357                           
  1358                           ;LAB1.c: 178:             return 0b00000110;
  1359  002F  3006               	movlw	6
  1360  0030  00F0               	movwf	?_tabla
  1361  0031  3000               	movlw	0
  1362  0032  00F1               	movwf	?_tabla+1
  1363  0033  28B1               	goto	i1l104
  1364  0034                     i1l1029:
  1365                           
  1366                           ;LAB1.c: 181:             return 0b01011011;
  1367  0034  305B               	movlw	91
  1368  0035  00F0               	movwf	?_tabla
  1369  0036  3000               	movlw	0
  1370  0037  00F1               	movwf	?_tabla+1
  1371  0038  28B1               	goto	i1l104
  1372  0039                     i1l1035:
  1373                           
  1374                           ;LAB1.c: 184:             return 0b01001111;
  1375  0039  304F               	movlw	79
  1376  003A  00F0               	movwf	?_tabla
  1377  003B  3000               	movlw	0
  1378  003C  00F1               	movwf	?_tabla+1
  1379  003D  28B1               	goto	i1l104
  1380  003E                     i1l1041:
  1381                           
  1382                           ;LAB1.c: 187:             return 0b01100110;
  1383  003E  3066               	movlw	102
  1384  003F  00F0               	movwf	?_tabla
  1385  0040  3000               	movlw	0
  1386  0041  00F1               	movwf	?_tabla+1
  1387  0042  28B1               	goto	i1l104
  1388  0043                     i1l1047:
  1389                           
  1390                           ;LAB1.c: 190:             return 0b01101101;
  1391  0043  306D               	movlw	109
  1392  0044  00F0               	movwf	?_tabla
  1393  0045  3000               	movlw	0
  1394  0046  00F1               	movwf	?_tabla+1
  1395  0047  28B1               	goto	i1l104
  1396  0048                     i1l1053:
  1397                           
  1398                           ;LAB1.c: 193:             return 0b01111101;
  1399  0048  307D               	movlw	125
  1400  0049  00F0               	movwf	?_tabla
  1401  004A  3000               	movlw	0
  1402  004B  00F1               	movwf	?_tabla+1
  1403  004C  28B1               	goto	i1l104
  1404  004D                     i1l1059:
  1405                           
  1406                           ;LAB1.c: 196:             return 0b00000111;
  1407  004D  3007               	movlw	7
  1408  004E  00F0               	movwf	?_tabla
  1409  004F  3000               	movlw	0
  1410  0050  00F1               	movwf	?_tabla+1
  1411  0051  28B1               	goto	i1l104
  1412  0052                     i1l1065:
  1413                           
  1414                           ;LAB1.c: 199:             return 0b01111111;
  1415  0052  307F               	movlw	127
  1416  0053  00F0               	movwf	?_tabla
  1417  0054  3000               	movlw	0
  1418  0055  00F1               	movwf	?_tabla+1
  1419  0056  28B1               	goto	i1l104
  1420  0057                     i1l1071:
  1421                           
  1422                           ;LAB1.c: 202:             return 0b01101111;
  1423  0057  306F               	movlw	111
  1424  0058  00F0               	movwf	?_tabla
  1425  0059  3000               	movlw	0
  1426  005A  00F1               	movwf	?_tabla+1
  1427  005B  28B1               	goto	i1l104
  1428  005C                     i1l1077:
  1429                           
  1430                           ;LAB1.c: 205:             return 0b01110111;
  1431  005C  3077               	movlw	119
  1432  005D  00F0               	movwf	?_tabla
  1433  005E  3000               	movlw	0
  1434  005F  00F1               	movwf	?_tabla+1
  1435  0060  28B1               	goto	i1l104
  1436  0061                     i1l1083:
  1437                           
  1438                           ;LAB1.c: 208:             return 0b01111100;
  1439  0061  307C               	movlw	124
  1440  0062  00F0               	movwf	?_tabla
  1441  0063  3000               	movlw	0
  1442  0064  00F1               	movwf	?_tabla+1
  1443  0065  28B1               	goto	i1l104
  1444  0066                     i1l1089:
  1445                           
  1446                           ;LAB1.c: 211:             return 0b00111001;
  1447  0066  3039               	movlw	57
  1448  0067  00F0               	movwf	?_tabla
  1449  0068  3000               	movlw	0
  1450  0069  00F1               	movwf	?_tabla+1
  1451  006A  28B1               	goto	i1l104
  1452  006B                     i1l1095:
  1453                           
  1454                           ;LAB1.c: 214:             return 0b01011110;
  1455  006B  305E               	movlw	94
  1456  006C  00F0               	movwf	?_tabla
  1457  006D  3000               	movlw	0
  1458  006E  00F1               	movwf	?_tabla+1
  1459  006F  28B1               	goto	i1l104
  1460  0070                     i1l1101:
  1461                           
  1462                           ;LAB1.c: 217:             return 0b01111001;
  1463  0070  3079               	movlw	121
  1464  0071  00F0               	movwf	?_tabla
  1465  0072  3000               	movlw	0
  1466  0073  00F1               	movwf	?_tabla+1
  1467  0074  28B1               	goto	i1l104
  1468  0075                     i1l1107:
  1469                           
  1470                           ;LAB1.c: 220:             return 0b01110001;
  1471  0075  3071               	movlw	113
  1472  0076  00F0               	movwf	?_tabla
  1473  0077  3000               	movlw	0
  1474  0078  00F1               	movwf	?_tabla+1
  1475  0079  28B1               	goto	i1l104
  1476  007A                     i1l1115:
  1477                           
  1478                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1479                           ; Switch size 1, requested type "simple"
  1480                           ; Number of cases is 1, Range of values is 0 to 0
  1481                           ; switch strategies available:
  1482                           ; Name         Instructions Cycles
  1483                           ; simple_byte            4     3 (average)
  1484                           ; direct_byte           11     8 (fixed)
  1485                           ; jumptable            260     6 (fixed)
  1486                           ;	Chosen strategy is simple_byte
  1487  007A  0871               	movf	tabla@a+1,w
  1488  007B  3A00               	xorlw	0	; case 0
  1489  007C  1903               	skipnz
  1490  007D  287F               	goto	i1l1317
  1491  007E  28B1               	goto	i1l104
  1492  007F                     i1l1317:
  1493                           
  1494                           ; Switch size 1, requested type "simple"
  1495                           ; Number of cases is 16, Range of values is 0 to 15
  1496                           ; switch strategies available:
  1497                           ; Name         Instructions Cycles
  1498                           ; simple_byte           49    25 (average)
  1499                           ; direct_byte           56     8 (fixed)
  1500                           ; jumptable            260     6 (fixed)
  1501                           ;	Chosen strategy is simple_byte
  1502  007F  0870               	movf	tabla@a,w
  1503  0080  3A00               	xorlw	0	; case 0
  1504  0081  1903               	skipnz
  1505  0082  282A               	goto	i1l1017
  1506  0083  3A01               	xorlw	1	; case 1
  1507  0084  1903               	skipnz
  1508  0085  282F               	goto	i1l1023
  1509  0086  3A03               	xorlw	3	; case 2
  1510  0087  1903               	skipnz
  1511  0088  2834               	goto	i1l1029
  1512  0089  3A01               	xorlw	1	; case 3
  1513  008A  1903               	skipnz
  1514  008B  2839               	goto	i1l1035
  1515  008C  3A07               	xorlw	7	; case 4
  1516  008D  1903               	skipnz
  1517  008E  283E               	goto	i1l1041
  1518  008F  3A01               	xorlw	1	; case 5
  1519  0090  1903               	skipnz
  1520  0091  2843               	goto	i1l1047
  1521  0092  3A03               	xorlw	3	; case 6
  1522  0093  1903               	skipnz
  1523  0094  2848               	goto	i1l1053
  1524  0095  3A01               	xorlw	1	; case 7
  1525  0096  1903               	skipnz
  1526  0097  284D               	goto	i1l1059
  1527  0098  3A0F               	xorlw	15	; case 8
  1528  0099  1903               	skipnz
  1529  009A  2852               	goto	i1l1065
  1530  009B  3A01               	xorlw	1	; case 9
  1531  009C  1903               	skipnz
  1532  009D  2857               	goto	i1l1071
  1533  009E  3A03               	xorlw	3	; case 10
  1534  009F  1903               	skipnz
  1535  00A0  285C               	goto	i1l1077
  1536  00A1  3A01               	xorlw	1	; case 11
  1537  00A2  1903               	skipnz
  1538  00A3  2861               	goto	i1l1083
  1539  00A4  3A07               	xorlw	7	; case 12
  1540  00A5  1903               	skipnz
  1541  00A6  2866               	goto	i1l1089
  1542  00A7  3A01               	xorlw	1	; case 13
  1543  00A8  1903               	skipnz
  1544  00A9  286B               	goto	i1l1095
  1545  00AA  3A03               	xorlw	3	; case 14
  1546  00AB  1903               	skipnz
  1547  00AC  2870               	goto	i1l1101
  1548  00AD  3A01               	xorlw	1	; case 15
  1549  00AE  1903               	skipnz
  1550  00AF  2875               	goto	i1l1107
  1551  00B0  28B1               	goto	i1l104
  1552  00B1                     i1l104:
  1553  00B1  0008               	return
  1554  00B2                     __end_of_tabla:
  1555  007E                     btemp	set	126	;btemp
  1556  007E                     wtemp0	set	126
  1557                           
  1558                           	psect	config
  1559                           
  1560                           ;Config register CONFIG1 @ 0x2007
  1561                           ;	Oscillator Selection bits
  1562                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1563                           ;	Watchdog Timer Enable bit
  1564                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1565                           ;	Power-up Timer Enable bit
  1566                           ;	PWRTE = OFF, PWRT disabled
  1567                           ;	RE3/MCLR pin function select bit
  1568                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1569                           ;	Code Protection bit
  1570                           ;	CP = OFF, Program memory code protection is disabled
  1571                           ;	Data Code Protection bit
  1572                           ;	CPD = OFF, Data memory code protection is disabled
  1573                           ;	Brown Out Reset Selection bits
  1574                           ;	BOREN = OFF, BOR disabled
  1575                           ;	Internal External Switchover bit
  1576                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1577                           ;	Fail-Safe Clock Monitor Enabled bit
  1578                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1579                           ;	Low Voltage Programming Enable bit
  1580                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1581                           ;	In-Circuit Debugger Mode bit
  1582                           ;	DEBUG = 0x1, unprogrammed default
  1583  2007                     	org	8199
  1584  2007  20D4               	dw	8404
  1585                           
  1586                           ;Config register CONFIG2 @ 0x2008
  1587                           ;	Brown-out Reset Selection bit
  1588                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1589                           ;	Flash Program Memory Self Write Enable bits
  1590                           ;	WRT = OFF, Write protection off
  1591  2008                     	org	8200
  1592  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      8      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_divisor_hex
    _divisor_hex->___awdiv
    _displays->_tabla

Critical Paths under _main in BANK0

    _main->_setup

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              7 BANK0      1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  6     6      0     716
                                              0 BANK0      6     6      0
                           _displays
                        _divisor_hex
                               _tmr0
 ---------------------------------------------------------------------------------
 (3) _tmr0                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _divisor_hex                                          5     5      0     542
                                              9 COMMON     5     5      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _displays                                             1     1      0     174
                                              2 COMMON     1     1      0
                              _tabla
 ---------------------------------------------------------------------------------
 (4) _tabla                                                2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)
   _displays
     _tabla
   _divisor_hex
     ___awdiv
   _tmr0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      13       5       23.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      21      12        0.0%
ABS                  0      0      21       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jan 27 05:31:47 2022

                     l85 01A7             ___awdiv@sign 0076             ?_divisor_hex 0070  
                    u350 01EE                      u351 01ED                      u360 01F7  
                    u361 01F6                      u377 01FF                      u387 020C  
                    u397 019A                      _dig 0020                      _isr 01A8  
                    fsr0 0004                      indf 0000                     l1201 0167  
                   l1211 0172                     l1203 0168                     l1221 017C  
                   l1213 0173                     l1205 016B                     l1231 0181  
                   l1223 017D                     l1215 0174                     l1207 016C  
                   l1241 0195                     l1233 0182                     l1225 017E  
                   l1217 0175                     l1209 016F                     l1251 01A0  
                   l1243 0196                     l1235 0186                     l1227 017F  
                   l1219 017B                     l1253 01A3                     l1245 019D  
                   l1237 0189                     l1229 0180                     l1255 01A6  
                   l1247 019E                     l1239 018A                     l1249 019F  
                   l1281 01EA                     l1283 01EE                     l1293 0208  
                   l1285 01F7                     l1277 01E2                     l1199 0163  
                   l1295 020F                     l1287 01FB                     l1279 01E7  
                   l1289 0203                     ?_isr 0070                     _T0IF 005A  
                   i1l71 01D5                     i1l93 0162                     i1l88 024C  
                   i1l99 0246                     _TMR0 0001                     _main 01E2  
                   _tmr0 0247                     btemp 007E                     start 0012  
                  ??_isr 002A                    ?_main 0070          __end_of___awdiv 0119  
                  ?_tmr0 0070                    _ANSEL 0188          ___awdiv@divisor 0070  
                  i1l104 00B1                    i1l360 0118          ___awdiv@counter 0075  
                  u20_20 00C2                    u20_21 00C1                    u21_20 00D3  
                  u21_21 00D2                    u30_20 021F                    u30_21 021E  
                  u22_25 00D7                    u31_20 0237                    u23_20 00E5  
                  u31_21 0236                    u23_21 00E4                    u32_20 01AC  
                  u32_21 01AB                    u24_25 00E6                    u25_20 00F6  
                  u33_20 01B5                    u25_21 00F5                    u33_21 01B4  
                  u25_25 00F2                    u34_20 01CB                    u34_21 01CA  
                  u26_25 00FE                    u27_20 010A                    u19_20 00B7  
                  u27_21 0109                    u19_21 00B6                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    u28_20 010F                    u28_21 010E  
                  u29_20 0162                    u29_21 0161                    u29_25 015E  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _tabla 0029                    _setup 0163  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0015             __end_of_main 0216             __end_of_tmr0 024D  
                 ??_main 0031                   ??_tmr0 0070             divisor_hex@i 007C  
                 ?_tabla 0070                   _ADRESH 001E         ___awdiv@dividend 0072  
                 ?_setup 0070                   _ANSELH 0189                   i1l1101 0070  
                 i1l1023 002F                   i1l1015 0029                   i1l1041 003E  
                 i1l1017 002A                   i1l1121 00B2                   i1l1107 0075  
                 i1l1035 0039                   i1l1115 007A                   i1l1131 00C2  
                 i1l1123 00B3                   i1l1053 0048                   i1l1029 0034  
                 i1l1141 00D6                   i1l1133 00C7                   i1l1125 00B7  
                 i1l1071 0057                   i1l1047 0043                   i1l1151 00FC  
                 i1l1143 00DD                   i1l1135 00CB                   i1l1127 00BC  
                 i1l1065 0052                   i1l1161 0114                   i1l1153 00FD  
                 i1l1145 00E1                   i1l1137 00CD                   i1l1129 00BE  
                 i1l1083 0061                   i1l1059 004D                   i1l1155 0104  
                 i1l1147 00E5                   i1l1139 00D3                   i1l1171 011B  
                 i1l1317 007F                   i1l1077 005C                   i1l1149 00F6  
                 i1l1157 010A                   i1l1173 012E                   i1l1165 0119  
                 i1l1181 0248                   i1l1261 01AC                   i1l1095 006B  
                 i1l1191 022C                   i1l1159 010F                   i1l1175 014F  
                 i1l1263 01B5                   i1l1271 01C7                   i1l1089 0066  
                 i1l1193 0231                   i1l1185 0216                   i1l1177 0155  
                 i1l1273 01CB                   i1l1265 01BC                   i1l1195 0237  
                 i1l1187 021A                   i1l1179 0247                   i1l1275 01D0  
                 i1l1267 01C2                   i1l1259 01A8                   i1l1197 0244  
                 i1l1189 021F                   i1l1269 01C4         __end_of_displays 0247  
              ??___awdiv 0074         ___awdiv@quotient 0077                   tabla@a 0070  
                 saved_w 007E     __size_of_divisor_hex 004A  __end_of__initialization 0025  
         __pcstackCOMMON 0070             __pidataBANK0 024D            __end_of_tabla 00B2  
          __end_of_setup 01A8           _OPTION_REGbits 0081                  ??_tabla 0072  
                ??_setup 0030               __pbssBANK0 0020               __pmaintext 01E2  
             __pintentry 0004                ?_displays 0070                  ___awdiv 00B2  
                _decenas 0026                  __ptext1 0163                  __ptext2 01A8  
                __ptext3 0247                  __ptext4 0119                  __ptext5 00B2  
                __ptext6 0216                  __ptext7 0029             __size_of_isr 003A  
             ??_displays 0072     end_of_initialization 0025            ??_divisor_hex 0079  
    start_initialization 0015              __end_of_isr 01E2              __pdataBANK0 0032  
              ___latbits 0002            __pcstackBANK0 002A      __end_of_divisor_hex 0163  
      __size_of_displays 0031                 ?___awdiv 0070           __size_of_tabla 0089  
         __size_of_setup 0045        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
            _divisor_hex 0119         __size_of___awdiv 0067                 _displays 0216  
          __size_of_main 0034            __size_of_tmr0 0006                 _unidades 0028  
             _INTCONbits 000B                 intlevel1 0000               _OSCCONbits 008F  
          _disp_selector 0032  
