

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jan 27 07:38:31 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212                           
   213                           	psect	idataBANK0
   214  0288                     __pidataBANK0:
   215                           
   216                           ;initializer for _disp_selector
   217  0288  3401               	retlw	1
   218  0001                     _TMR0	set	1
   219  0009                     _PORTE	set	9
   220  0007                     _PORTC	set	7
   221  0008                     _PORTD	set	8
   222  0009                     _PORTEbits	set	9
   223  0005                     _PORTA	set	5
   224  000B                     _INTCONbits	set	11
   225  001E                     _ADRESH	set	30
   226  001F                     _ADCON0bits	set	31
   227  000C                     _PIR1bits	set	12
   228  0031                     _RB1	set	49
   229  0030                     _RB0	set	48
   230  005A                     _T0IF	set	90
   231  008C                     _PIE1bits	set	140
   232  009F                     _ADCON1bits	set	159
   233  008F                     _OSCCONbits	set	143
   234  0096                     _IOCBbits	set	150
   235  0095                     _WPUBbits	set	149
   236  0081                     _OPTION_REGbits	set	129
   237  0089                     _TRISE	set	137
   238  0088                     _TRISD	set	136
   239  0087                     _TRISC	set	135
   240  0086                     _TRISB	set	134
   241  0085                     _TRISA	set	133
   242  0189                     _ANSELH	set	393
   243  0188                     _ANSEL	set	392
   244                           
   245                           	psect	cinit
   246  0015                     start_initialization:	
   247                           ; #config settings
   248                           
   249  0015                     __initialization:
   250                           
   251                           ; Initialize objects allocated to BANK0
   252  0015  120A  118A  2288  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   253  001A  00B3               	movwf	__pdataBANK0& (0+127)
   254                           
   255                           ; Clear objects allocated to BANK0
   256  001B  01A0               	clrf	__pbssBANK0& (0+127)
   257  001C  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   258  001D  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   259  001E  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   260  001F  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   261  0020  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   262  0021  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   263  0022  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   264  0023  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   265  0024  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   266  0025  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   267  0026                     end_of_initialization:	
   268                           ;End of C runtime variable initialization code
   269                           
   270  0026                     __end_of__initialization:
   271  0026  0183               	clrf	3
   272  0027  120A  118A  2A0B   	ljmp	_main	;jump to C main() function
   273                           
   274                           	psect	bssBANK0
   275  0020                     __pbssBANK0:
   276  0020                     _dig:
   277  0020                     	ds	6
   278  0026                     _decenas:
   279  0026                     	ds	2
   280  0028                     _unidades:
   281  0028                     	ds	2
   282  002A                     _Puerto_A:
   283  002A                     	ds	1
   284                           
   285                           	psect	dataBANK0
   286  0033                     __pdataBANK0:
   287  0033                     _disp_selector:
   288  0033                     	ds	1
   289                           
   290                           	psect	cstackCOMMON
   291  0070                     __pcstackCOMMON:
   292  0070                     ?_divisor_hex:
   293  0070                     ?_tmr0:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ??_tmr0:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ?_displays:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ?_setup:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ?_isr:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     ?_main:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     ?_tabla:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0070                     ?___awdiv:	
   315                           ; 2 bytes @ 0x0
   316                           
   317  0070                     tabla@a:	
   318                           ; 2 bytes @ 0x0
   319                           
   320  0070                     ___awdiv@divisor:	
   321                           ; 2 bytes @ 0x0
   322                           
   323                           
   324                           ; 2 bytes @ 0x0
   325  0070                     	ds	2
   326  0072                     ??_displays:
   327  0072                     ??_tabla:	
   328                           ; 1 bytes @ 0x2
   329                           
   330  0072                     ___awdiv@dividend:	
   331                           ; 1 bytes @ 0x2
   332                           
   333                           
   334                           ; 2 bytes @ 0x2
   335  0072                     	ds	2
   336  0074                     ??___awdiv:
   337                           
   338                           ; 1 bytes @ 0x4
   339  0074                     	ds	1
   340  0075                     ___awdiv@counter:
   341                           
   342                           ; 1 bytes @ 0x5
   343  0075                     	ds	1
   344  0076                     ___awdiv@sign:
   345                           
   346                           ; 1 bytes @ 0x6
   347  0076                     	ds	1
   348  0077                     ___awdiv@quotient:
   349                           
   350                           ; 2 bytes @ 0x7
   351  0077                     	ds	2
   352  0079                     ??_divisor_hex:
   353                           
   354                           ; 1 bytes @ 0x9
   355  0079                     	ds	3
   356  007C                     divisor_hex@i:
   357                           
   358                           ; 2 bytes @ 0xC
   359  007C                     	ds	2
   360                           
   361                           	psect	cstackBANK0
   362  002B                     __pcstackBANK0:
   363  002B                     ??_isr:
   364                           
   365                           ; 1 bytes @ 0x0
   366  002B                     	ds	6
   367  0031                     ??_setup:
   368                           
   369                           ; 1 bytes @ 0x6
   370  0031                     	ds	1
   371  0032                     ??_main:
   372                           
   373                           ; 1 bytes @ 0x7
   374  0032                     	ds	1
   375                           
   376                           	psect	maintext
   377  020B                     __pmaintext:	
   378 ;;
   379 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   380 ;;
   381 ;; *************** function _main *****************
   382 ;; Defined at:
   383 ;;		line 90 in file "LAB1.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;		None
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		wreg, status,2, status,0, pclath, cstack
   392 ;; Tracked objects:
   393 ;;		On entry : B00/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   397 ;;      Params:         0       0       0       0       0
   398 ;;      Locals:         0       0       0       0       0
   399 ;;      Temps:          0       1       0       0       0
   400 ;;      Totals:         0       1       0       0       0
   401 ;;Total ram usage:        1 bytes
   402 ;; Hardware stack levels required when called: 4
   403 ;; This function calls:
   404 ;;		_setup
   405 ;; This function is called by:
   406 ;;		Startup code after reset
   407 ;; This function uses a non-reentrant model
   408 ;;
   409                           
   410                           
   411                           ;psect for function _main
   412  020B                     _main:
   413  020B                     l1360:	
   414                           ;incstack = 0
   415                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   416                           
   417                           
   418                           ;LAB1.c: 91:     setup();
   419  020B  120A  118A  2172  120A  118A  	fcall	_setup
   420  0210                     l1362:
   421                           
   422                           ;LAB1.c: 92:     ADCON0bits.GO = 1;
   423  0210  1283               	bcf	3,5	;RP0=0, select bank0
   424  0211  1303               	bcf	3,6	;RP1=0, select bank0
   425  0212  149F               	bsf	31,1	;volatile
   426  0213                     l1364:
   427                           
   428                           ;LAB1.c: 94:         if(ADCON0bits.GO == 0){
   429  0213  189F               	btfsc	31,1	;volatile
   430  0214  2A16               	goto	u461
   431  0215  2A17               	goto	u460
   432  0216                     u461:
   433  0216  2A3B               	goto	l1380
   434  0217                     u460:
   435  0217                     l1366:
   436                           
   437                           ;LAB1.c: 95:             if(ADCON0bits.CHS == 6){
   438  0217  0C1F               	rrf	31,w	;volatile
   439  0218  00B2               	movwf	??_main
   440  0219  0C32               	rrf	??_main,w
   441  021A  390F               	andlw	15
   442  021B  3A06               	xorlw	6
   443  021C  1D03               	skipz
   444  021D  2A1F               	goto	u471
   445  021E  2A20               	goto	u470
   446  021F                     u471:
   447  021F  2A2C               	goto	l1372
   448  0220                     u470:
   449  0220                     l1368:
   450                           
   451                           ;LAB1.c: 96:                 ADCON0bits.CHS = 5;
   452  0220  081F               	movf	31,w	;volatile
   453  0221  39C3               	andlw	-61
   454  0222  3814               	iorlw	20
   455  0223  009F               	movwf	31	;volatile
   456  0224                     l1370:
   457                           
   458                           ;LAB1.c: 97:                 _delay((unsigned long)((50)*(4000000/4000000.0)));
   459  0224  300F               	movlw	15
   460  0225  1283               	bcf	3,5	;RP0=0, select bank0
   461  0226  1303               	bcf	3,6	;RP1=0, select bank0
   462  0227  00B2               	movwf	??_main
   463  0228                     u497:
   464  0228  0BB2               	decfsz	??_main,f
   465  0229  2A28               	goto	u497
   466  022A  2A2B               	nop2
   467                           
   468                           ;LAB1.c: 98:             }
   469  022B  2A31               	goto	l1376
   470  022C                     l1372:
   471                           
   472                           ;LAB1.c: 100:                 ADCON0bits.CHS = 6;
   473  022C  081F               	movf	31,w	;volatile
   474  022D  39C3               	andlw	-61
   475  022E  3818               	iorlw	24
   476  022F  009F               	movwf	31	;volatile
   477  0230  2A24               	goto	l1370
   478  0231                     l1376:
   479                           
   480                           ;LAB1.c: 103:             _delay((unsigned long)((50)*(4000000/4000000.0)));
   481  0231  300F               	movlw	15
   482  0232  1283               	bcf	3,5	;RP0=0, select bank0
   483  0233  1303               	bcf	3,6	;RP1=0, select bank0
   484  0234  00B2               	movwf	??_main
   485  0235                     u507:
   486  0235  0BB2               	decfsz	??_main,f
   487  0236  2A35               	goto	u507
   488  0237  2A38               	nop2
   489  0238                     l1378:
   490                           
   491                           ;LAB1.c: 104:             ADCON0bits.GO = 1;
   492  0238  1283               	bcf	3,5	;RP0=0, select bank0
   493  0239  1303               	bcf	3,6	;RP1=0, select bank0
   494  023A  149F               	bsf	31,1	;volatile
   495  023B                     l1380:
   496                           
   497                           ;LAB1.c: 106:         if(unidades > Puerto_A){
   498  023B  0829               	movf	_unidades+1,w
   499  023C  3A80               	xorlw	128
   500  023D  3C80               	sublw	128
   501  023E  1D03               	skipz
   502  023F  2A42               	goto	u485
   503  0240  0828               	movf	_unidades,w
   504  0241  022A               	subwf	_Puerto_A,w
   505  0242                     u485:
   506  0242  1803               	skipnc
   507  0243  2A45               	goto	u481
   508  0244  2A46               	goto	u480
   509  0245                     u481:
   510  0245  2A4A               	goto	l101
   511  0246                     u480:
   512  0246                     l1382:
   513                           
   514                           ;LAB1.c: 107:             PORTEbits.RE2 = 1;
   515  0246  1283               	bcf	3,5	;RP0=0, select bank0
   516  0247  1303               	bcf	3,6	;RP1=0, select bank0
   517  0248  1509               	bsf	9,2	;volatile
   518                           
   519                           ;LAB1.c: 108:         }
   520  0249  2A13               	goto	l1364
   521  024A                     l101:	
   522                           ;LAB1.c: 109:         else{
   523                           
   524                           
   525                           ;LAB1.c: 110:             PORTEbits.RE2 = 0;
   526  024A  1283               	bcf	3,5	;RP0=0, select bank0
   527  024B  1303               	bcf	3,6	;RP1=0, select bank0
   528  024C  1109               	bcf	9,2	;volatile
   529  024D  2A13               	goto	l1364
   530  024E  120A  118A  2812   	ljmp	start
   531  0251                     __end_of_main:
   532                           
   533                           	psect	text1
   534  0172                     __ptext1:	
   535 ;; *************** function _setup *****************
   536 ;; Defined at:
   537 ;;		line 116 in file "LAB1.c"
   538 ;; Parameters:    Size  Location     Type
   539 ;;		None
   540 ;; Auto vars:     Size  Location     Type
   541 ;;		None
   542 ;; Return value:  Size  Location     Type
   543 ;;                  1    wreg      void 
   544 ;; Registers used:
   545 ;;		wreg, status,2, status,0
   546 ;; Tracked objects:
   547 ;;		On entry : 0/0
   548 ;;		On exit  : 0/0
   549 ;;		Unchanged: 0/0
   550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   551 ;;      Params:         0       0       0       0       0
   552 ;;      Locals:         0       0       0       0       0
   553 ;;      Temps:          0       1       0       0       0
   554 ;;      Totals:         0       1       0       0       0
   555 ;;Total ram usage:        1 bytes
   556 ;; Hardware stack levels used: 1
   557 ;; Hardware stack levels required when called: 3
   558 ;; This function calls:
   559 ;;		Nothing
   560 ;; This function is called by:
   561 ;;		_main
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565                           
   566                           ;psect for function _setup
   567  0172                     _setup:
   568  0172                     l1254:	
   569                           ;incstack = 0
   570                           ; Regs used in _setup: [wreg+status,2+status,0]
   571                           
   572                           
   573                           ;LAB1.c: 119:     ANSEL = 0b00100000;
   574  0172  3020               	movlw	32
   575  0173  1683               	bsf	3,5	;RP0=1, select bank3
   576  0174  1703               	bsf	3,6	;RP1=1, select bank3
   577  0175  0088               	movwf	8	;volatile
   578  0176                     l1256:
   579                           
   580                           ;LAB1.c: 120:     ANSELH = 0;
   581  0176  0189               	clrf	9	;volatile
   582  0177                     l1258:
   583                           
   584                           ;LAB1.c: 122:     TRISA = 0;
   585  0177  1683               	bsf	3,5	;RP0=1, select bank1
   586  0178  1303               	bcf	3,6	;RP1=0, select bank1
   587  0179  0185               	clrf	5	;volatile
   588                           
   589                           ;LAB1.c: 123:     TRISB = 0b0011;
   590  017A  3003               	movlw	3
   591  017B  0086               	movwf	6	;volatile
   592  017C                     l1260:
   593                           
   594                           ;LAB1.c: 125:     TRISC = 0;
   595  017C  0187               	clrf	7	;volatile
   596  017D                     l1262:
   597                           
   598                           ;LAB1.c: 126:     TRISD = 0;
   599  017D  0188               	clrf	8	;volatile
   600                           
   601                           ;LAB1.c: 127:     TRISE = 0b0001;
   602  017E  3001               	movlw	1
   603  017F  0089               	movwf	9	;volatile
   604  0180                     l1264:
   605                           
   606                           ;LAB1.c: 129:     PORTA = 0;
   607  0180  1283               	bcf	3,5	;RP0=0, select bank0
   608  0181  1303               	bcf	3,6	;RP1=0, select bank0
   609  0182  0185               	clrf	5	;volatile
   610  0183                     l1266:
   611                           
   612                           ;LAB1.c: 130:     PORTD = 0;
   613  0183  0188               	clrf	8	;volatile
   614  0184                     l1268:
   615                           
   616                           ;LAB1.c: 131:     PORTC = 0;
   617  0184  0187               	clrf	7	;volatile
   618  0185                     l1270:
   619                           
   620                           ;LAB1.c: 132:     PORTE = 0;
   621  0185  0189               	clrf	9	;volatile
   622  0186                     l1272:
   623                           
   624                           ;LAB1.c: 135:     OPTION_REGbits.nRBPU = 0;
   625  0186  1683               	bsf	3,5	;RP0=1, select bank1
   626  0187  1303               	bcf	3,6	;RP1=0, select bank1
   627  0188  1381               	bcf	1,7	;volatile
   628  0189                     l1274:
   629                           
   630                           ;LAB1.c: 136:     WPUBbits.WPUB0 = 1;
   631  0189  1415               	bsf	21,0	;volatile
   632  018A                     l1276:
   633                           
   634                           ;LAB1.c: 137:     WPUBbits.WPUB1 = 1;
   635  018A  1495               	bsf	21,1	;volatile
   636  018B                     l1278:
   637                           
   638                           ;LAB1.c: 140:     IOCBbits.IOCB0 = 1;
   639  018B  1416               	bsf	22,0	;volatile
   640  018C                     l1280:
   641                           
   642                           ;LAB1.c: 141:     IOCBbits.IOCB1 = 1;
   643  018C  1496               	bsf	22,1	;volatile
   644  018D                     l1282:
   645                           
   646                           ;LAB1.c: 142:     INTCONbits.RBIF = 0;
   647  018D  100B               	bcf	11,0	;volatile
   648  018E                     l1284:
   649                           
   650                           ;LAB1.c: 146:     OSCCONbits.IRCF = 0b0110;
   651  018E  080F               	movf	15,w	;volatile
   652  018F  398F               	andlw	-113
   653  0190  3860               	iorlw	96
   654  0191  008F               	movwf	15	;volatile
   655  0192                     l1286:
   656                           
   657                           ;LAB1.c: 147:     OSCCONbits.SCS = 1;
   658  0192  140F               	bsf	15,0	;volatile
   659  0193                     l1288:
   660                           
   661                           ;LAB1.c: 150:     OPTION_REGbits.T0CS = 0;
   662  0193  1281               	bcf	1,5	;volatile
   663  0194                     l1290:
   664                           
   665                           ;LAB1.c: 151:     OPTION_REGbits.T0SE = 0;
   666  0194  1201               	bcf	1,4	;volatile
   667  0195                     l1292:
   668                           
   669                           ;LAB1.c: 152:     OPTION_REGbits.PSA = 0;
   670  0195  1181               	bcf	1,3	;volatile
   671  0196                     l1294:
   672                           
   673                           ;LAB1.c: 153:     OPTION_REGbits.PS2 = 1;
   674  0196  1501               	bsf	1,2	;volatile
   675  0197                     l1296:
   676                           
   677                           ;LAB1.c: 154:     OPTION_REGbits.PS1 = 1;
   678  0197  1481               	bsf	1,1	;volatile
   679  0198                     l1298:
   680                           
   681                           ;LAB1.c: 155:     OPTION_REGbits.PS0 = 1;
   682  0198  1401               	bsf	1,0	;volatile
   683  0199                     l1300:
   684                           
   685                           ;LAB1.c: 156:     TMR0 = 237;
   686  0199  30ED               	movlw	237
   687  019A  1283               	bcf	3,5	;RP0=0, select bank0
   688  019B  1303               	bcf	3,6	;RP1=0, select bank0
   689  019C  0081               	movwf	1	;volatile
   690  019D                     l1302:
   691                           
   692                           ;LAB1.c: 159:     ADCON1bits.ADFM = 0;
   693  019D  1683               	bsf	3,5	;RP0=1, select bank1
   694  019E  1303               	bcf	3,6	;RP1=0, select bank1
   695  019F  139F               	bcf	31,7	;volatile
   696  01A0                     l1304:
   697                           
   698                           ;LAB1.c: 160:     ADCON1bits.VCFG0 = 0;
   699  01A0  121F               	bcf	31,4	;volatile
   700  01A1                     l1306:
   701                           
   702                           ;LAB1.c: 161:     ADCON1bits.VCFG1 = 0;
   703  01A1  129F               	bcf	31,5	;volatile
   704                           
   705                           ;LAB1.c: 163:     ADCON0bits.ADCS = 0b01;
   706  01A2  1283               	bcf	3,5	;RP0=0, select bank0
   707  01A3  1303               	bcf	3,6	;RP1=0, select bank0
   708  01A4  081F               	movf	31,w	;volatile
   709  01A5  393F               	andlw	-193
   710  01A6  3840               	iorlw	64
   711  01A7  009F               	movwf	31	;volatile
   712                           
   713                           ;LAB1.c: 164:     ADCON0bits.CHS = 5;
   714  01A8  081F               	movf	31,w	;volatile
   715  01A9  39C3               	andlw	-61
   716  01AA  3814               	iorlw	20
   717  01AB  009F               	movwf	31	;volatile
   718  01AC                     l1308:
   719                           
   720                           ;LAB1.c: 165:     ADCON0bits.ADON = 1;
   721  01AC  141F               	bsf	31,0	;volatile
   722  01AD                     l1310:
   723                           
   724                           ;LAB1.c: 166:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   725  01AD  300F               	movlw	15
   726  01AE  1283               	bcf	3,5	;RP0=0, select bank0
   727  01AF  1303               	bcf	3,6	;RP1=0, select bank0
   728  01B0  00B1               	movwf	??_setup
   729  01B1                     u517:
   730  01B1  0BB1               	decfsz	??_setup,f
   731  01B2  29B1               	goto	u517
   732  01B3  29B4               	nop2
   733  01B4                     l1312:
   734                           
   735                           ;LAB1.c: 169:     INTCONbits.T0IF = 0;
   736  01B4  110B               	bcf	11,2	;volatile
   737  01B5                     l1314:
   738                           
   739                           ;LAB1.c: 170:     INTCONbits.T0IE = 1;
   740  01B5  168B               	bsf	11,5	;volatile
   741  01B6                     l1316:
   742                           
   743                           ;LAB1.c: 171:     INTCONbits.RBIF = 0;
   744  01B6  100B               	bcf	11,0	;volatile
   745  01B7                     l1318:
   746                           
   747                           ;LAB1.c: 172:     INTCONbits.RBIE = 1;
   748  01B7  158B               	bsf	11,3	;volatile
   749  01B8                     l1320:
   750                           
   751                           ;LAB1.c: 173:     INTCONbits.GIE = 1;
   752  01B8  178B               	bsf	11,7	;volatile
   753  01B9                     l1322:
   754                           
   755                           ;LAB1.c: 174:     PIR1bits.ADIF = 0;
   756  01B9  1283               	bcf	3,5	;RP0=0, select bank0
   757  01BA  1303               	bcf	3,6	;RP1=0, select bank0
   758  01BB  130C               	bcf	12,6	;volatile
   759  01BC                     l1324:
   760                           
   761                           ;LAB1.c: 175:     PIE1bits.ADIE = 1;
   762  01BC  1683               	bsf	3,5	;RP0=1, select bank1
   763  01BD  1303               	bcf	3,6	;RP1=0, select bank1
   764  01BE  170C               	bsf	12,6	;volatile
   765  01BF                     l1326:
   766                           
   767                           ;LAB1.c: 176:     INTCONbits.PEIE = 1;
   768  01BF  170B               	bsf	11,6	;volatile
   769  01C0                     l108:
   770  01C0  0008               	return
   771  01C1                     __end_of_setup:
   772                           
   773                           	psect	text2
   774  011A                     __ptext2:	
   775 ;; *************** function _isr *****************
   776 ;; Defined at:
   777 ;;		line 60 in file "LAB1.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;		None
   780 ;; Auto vars:     Size  Location     Type
   781 ;;		None
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      void 
   784 ;; Registers used:
   785 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   791 ;;      Params:         0       0       0       0       0
   792 ;;      Locals:         0       0       0       0       0
   793 ;;      Temps:          0       6       0       0       0
   794 ;;      Totals:         0       6       0       0       0
   795 ;;Total ram usage:        6 bytes
   796 ;; Hardware stack levels used: 1
   797 ;; Hardware stack levels required when called: 2
   798 ;; This function calls:
   799 ;;		_displays
   800 ;;		_divisor_hex
   801 ;;		_tmr0
   802 ;; This function is called by:
   803 ;;		Interrupt level 1
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           
   808                           ;psect for function _isr
   809  011A                     _isr:
   810  011A                     i1l1330:
   811                           
   812                           ;LAB1.c: 61:     if(PIR1bits.ADIF){
   813  011A  1F0C               	btfss	12,6	;volatile
   814  011B  291D               	goto	u38_21
   815  011C  291E               	goto	u38_20
   816  011D                     u38_21:
   817  011D  2936               	goto	i1l79
   818  011E                     u38_20:
   819  011E                     i1l1332:
   820                           
   821                           ;LAB1.c: 62:         if(ADCON0bits.CHS == 5){
   822  011E  0C1F               	rrf	31,w	;volatile
   823  011F  00AB               	movwf	??_isr
   824  0120  0C2B               	rrf	??_isr,w
   825  0121  390F               	andlw	15
   826  0122  3A05               	xorlw	5
   827  0123  1D03               	skipz
   828  0124  2926               	goto	u39_21
   829  0125  2927               	goto	u39_20
   830  0126                     u39_21:
   831  0126  2933               	goto	i1l81
   832  0127                     u39_20:
   833  0127                     i1l1334:
   834                           
   835                           ;LAB1.c: 63:             unidades = ADRESH;
   836  0127  081E               	movf	30,w	;volatile
   837  0128  00AB               	movwf	??_isr
   838  0129  01AC               	clrf	??_isr+1
   839  012A  082B               	movf	??_isr,w
   840  012B  00A8               	movwf	_unidades
   841  012C  082C               	movf	??_isr+1,w
   842  012D  00A9               	movwf	_unidades+1
   843  012E                     i1l1336:
   844                           
   845                           ;LAB1.c: 64:             divisor_hex();
   846  012E  120A  118A  21C1  120A  118A  	fcall	_divisor_hex
   847  0133                     i1l81:	
   848                           ;LAB1.c: 68:         }
   849                           
   850                           
   851                           ;LAB1.c: 69:         PIR1bits.ADIF = 0;
   852  0133  1283               	bcf	3,5	;RP0=0, select bank0
   853  0134  1303               	bcf	3,6	;RP1=0, select bank0
   854  0135  130C               	bcf	12,6	;volatile
   855  0136                     i1l79:	
   856                           ;LAB1.c: 70:     }
   857                           
   858                           
   859                           ;LAB1.c: 71:     if(T0IF){
   860  0136  1D0B               	btfss	11,2	;volatile
   861  0137  2939               	goto	u40_21
   862  0138  293A               	goto	u40_20
   863  0139                     u40_21:
   864  0139  2944               	goto	i1l1342
   865  013A                     u40_20:
   866  013A                     i1l1338:
   867                           
   868                           ;LAB1.c: 72:         tmr0();
   869  013A  120A  118A  2282  120A  118A  	fcall	_tmr0
   870  013F                     i1l1340:
   871                           
   872                           ;LAB1.c: 73:         displays();
   873  013F  120A  118A  2251  120A  118A  	fcall	_displays
   874  0144                     i1l1342:
   875                           
   876                           ;LAB1.c: 75:     if(INTCONbits.RBIF){
   877  0144  1C0B               	btfss	11,0	;volatile
   878  0145  2947               	goto	u41_21
   879  0146  2948               	goto	u41_20
   880  0147                     u41_21:
   881  0147  2965               	goto	i1l92
   882  0148                     u41_20:
   883  0148                     i1l1344:
   884                           
   885                           ;LAB1.c: 76:         if(RB0 == 0){
   886  0148  1283               	bcf	3,5	;RP0=0, select bank0
   887  0149  1303               	bcf	3,6	;RP1=0, select bank0
   888  014A  1806               	btfsc	6,0	;volatile
   889  014B  294D               	goto	u42_21
   890  014C  294E               	goto	u42_20
   891  014D                     u42_21:
   892  014D  2956               	goto	i1l1350
   893  014E                     u42_20:
   894  014E                     i1l85:
   895  014E  1C06               	btfss	6,0	;volatile
   896  014F  2951               	goto	u43_21
   897  0150  2952               	goto	u43_20
   898  0151                     u43_21:
   899  0151  294E               	goto	i1l85
   900  0152                     u43_20:
   901  0152                     i1l1348:
   902                           
   903                           ;LAB1.c: 78:             PORTA += 1;
   904  0152  3001               	movlw	1
   905  0153  00AB               	movwf	??_isr
   906  0154  082B               	movf	??_isr,w
   907  0155  0785               	addwf	5,f	;volatile
   908  0156                     i1l1350:
   909                           
   910                           ;LAB1.c: 80:         if(RB1 == 0){
   911  0156  1886               	btfsc	6,1	;volatile
   912  0157  2959               	goto	u44_21
   913  0158  295A               	goto	u44_20
   914  0159                     u44_21:
   915  0159  2960               	goto	i1l1356
   916  015A                     u44_20:
   917  015A                     i1l89:
   918  015A  1C86               	btfss	6,1	;volatile
   919  015B  295D               	goto	u45_21
   920  015C  295E               	goto	u45_20
   921  015D                     u45_21:
   922  015D  295A               	goto	i1l89
   923  015E                     u45_20:
   924  015E                     i1l1354:
   925                           
   926                           ;LAB1.c: 82:             PORTA -= 1;
   927  015E  3001               	movlw	1
   928  015F  0285               	subwf	5,f	;volatile
   929  0160                     i1l1356:
   930                           
   931                           ;LAB1.c: 84:         INTCONbits.RBIF = 0;
   932  0160  100B               	bcf	11,0	;volatile
   933  0161                     i1l1358:
   934                           
   935                           ;LAB1.c: 85:         Puerto_A = PORTA;
   936  0161  0805               	movf	5,w	;volatile
   937  0162  00AB               	movwf	??_isr
   938  0163  082B               	movf	??_isr,w
   939  0164  00AA               	movwf	_Puerto_A
   940  0165                     i1l92:
   941  0165  1283               	bcf	3,5	;RP0=0, select bank0
   942  0166  1303               	bcf	3,6	;RP1=0, select bank0
   943  0167  0830               	movf	??_isr+5,w
   944  0168  00FF               	movwf	btemp+1
   945  0169  082F               	movf	??_isr+4,w
   946  016A  008A               	movwf	10
   947  016B  082E               	movf	??_isr+3,w
   948  016C  0084               	movwf	4
   949  016D  0E2D               	swapf	??_isr+2,w
   950  016E  0083               	movwf	3
   951  016F  0EFE               	swapf	btemp,f
   952  0170  0E7E               	swapf	btemp,w
   953  0171  0009               	retfie
   954  0172                     __end_of_isr:
   955                           
   956                           	psect	intentry
   957  0004                     __pintentry:	
   958                           ;incstack = 0
   959                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   960                           
   961  0004                     interrupt_function:
   962  007E                     saved_w	set	btemp
   963  0004  00FE               	movwf	btemp
   964  0005  0E03               	swapf	3,w
   965  0006  1283               	bcf	3,5	;RP0=0, select bank0
   966  0007  1303               	bcf	3,6	;RP1=0, select bank0
   967  0008  00AD               	movwf	??_isr+2
   968  0009  0804               	movf	4,w
   969  000A  00AE               	movwf	??_isr+3
   970  000B  080A               	movf	10,w
   971  000C  00AF               	movwf	??_isr+4
   972  000D  087F               	movf	btemp+1,w
   973  000E  00B0               	movwf	??_isr+5
   974  000F  120A  118A  291A   	ljmp	_isr
   975                           
   976                           	psect	text3
   977  0282                     __ptext3:	
   978 ;; *************** function _tmr0 *****************
   979 ;; Defined at:
   980 ;;		line 181 in file "LAB1.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;		None
   983 ;; Auto vars:     Size  Location     Type
   984 ;;		None
   985 ;; Return value:  Size  Location     Type
   986 ;;                  1    wreg      void 
   987 ;; Registers used:
   988 ;;		wreg
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   994 ;;      Params:         0       0       0       0       0
   995 ;;      Locals:         0       0       0       0       0
   996 ;;      Temps:          0       0       0       0       0
   997 ;;      Totals:         0       0       0       0       0
   998 ;;Total ram usage:        0 bytes
   999 ;; Hardware stack levels used: 1
  1000 ;; This function calls:
  1001 ;;		Nothing
  1002 ;; This function is called by:
  1003 ;;		_isr
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           
  1008                           ;psect for function _tmr0
  1009  0282                     _tmr0:
  1010  0282                     i1l1234:	
  1011                           ;incstack = 0
  1012                           ; Regs used in _tmr0: [wreg]
  1013                           
  1014                           
  1015                           ;LAB1.c: 182:     INTCONbits.T0IF = 0;
  1016  0282  110B               	bcf	11,2	;volatile
  1017  0283                     i1l1236:
  1018                           
  1019                           ;LAB1.c: 183:     TMR0 = 237;
  1020  0283  30ED               	movlw	237
  1021  0284  1283               	bcf	3,5	;RP0=0, select bank0
  1022  0285  1303               	bcf	3,6	;RP1=0, select bank0
  1023  0286  0081               	movwf	1	;volatile
  1024  0287                     i1l111:
  1025  0287  0008               	return
  1026  0288                     __end_of_tmr0:
  1027                           
  1028                           	psect	text4
  1029  01C1                     __ptext4:	
  1030 ;; *************** function _divisor_hex *****************
  1031 ;; Defined at:
  1032 ;;		line 187 in file "LAB1.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;  i               2   12[COMMON] int 
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      void 
  1039 ;; Registers used:
  1040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1046 ;;      Params:         0       0       0       0       0
  1047 ;;      Locals:         2       0       0       0       0
  1048 ;;      Temps:          3       0       0       0       0
  1049 ;;      Totals:         5       0       0       0       0
  1050 ;;Total ram usage:        5 bytes
  1051 ;; Hardware stack levels used: 1
  1052 ;; Hardware stack levels required when called: 1
  1053 ;; This function calls:
  1054 ;;		___awdiv
  1055 ;; This function is called by:
  1056 ;;		_isr
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           
  1061                           ;psect for function _divisor_hex
  1062  01C1                     _divisor_hex:
  1063  01C1                     i1l1220:	
  1064                           ;incstack = 0
  1065                           ; Regs used in _divisor_hex: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1066                           
  1067                           
  1068                           ;LAB1.c: 188:     for(int i = 0; i<3 ; i++){
  1069  01C1  01FC               	clrf	divisor_hex@i
  1070  01C2  01FD               	clrf	divisor_hex@i+1
  1071  01C3                     i1l1226:
  1072                           
  1073                           ;LAB1.c: 189:         dig[i] = unidades % 16;
  1074  01C3  300F               	movlw	15
  1075  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  1076  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  1077  01C6  0528               	andwf	_unidades,w
  1078  01C7  00F9               	movwf	??_divisor_hex
  1079  01C8  3000               	movlw	0
  1080  01C9  0529               	andwf	_unidades+1,w
  1081  01CA  00FA               	movwf	??_divisor_hex+1
  1082  01CB  087C               	movf	divisor_hex@i,w
  1083  01CC  00FB               	movwf	??_divisor_hex+2
  1084  01CD  077B               	addwf	??_divisor_hex+2,w
  1085  01CE  3E20               	addlw	(low (_dig| 0))& (0+255)
  1086  01CF  0084               	movwf	4
  1087  01D0  0879               	movf	??_divisor_hex,w
  1088  01D1  1383               	bcf	3,7	;select IRP bank0
  1089  01D2  0080               	movwf	0
  1090  01D3  0A84               	incf	4,f
  1091  01D4  087A               	movf	??_divisor_hex+1,w
  1092  01D5  0080               	movwf	0
  1093  01D6                     i1l1228:
  1094                           
  1095                           ;LAB1.c: 190:         unidades = (unidades - dig[i])/16;
  1096  01D6  3010               	movlw	16
  1097  01D7  00F0               	movwf	___awdiv@divisor
  1098  01D8  3000               	movlw	0
  1099  01D9  00F1               	movwf	___awdiv@divisor+1
  1100  01DA  087C               	movf	divisor_hex@i,w
  1101  01DB  00F9               	movwf	??_divisor_hex
  1102  01DC  0779               	addwf	??_divisor_hex,w
  1103  01DD  3E20               	addlw	(low (_dig| 0))& (0+255)
  1104  01DE  0084               	movwf	4
  1105  01DF  0800               	movf	0,w
  1106  01E0  00FA               	movwf	??_divisor_hex+1
  1107  01E1  0A84               	incf	4,f
  1108  01E2  0800               	movf	0,w
  1109  01E3  00FB               	movwf	??_divisor_hex+2
  1110  01E4  087A               	movf	??_divisor_hex+1,w
  1111  01E5  0228               	subwf	_unidades,w
  1112  01E6  00F2               	movwf	___awdiv@dividend
  1113  01E7  087B               	movf	??_divisor_hex+2,w
  1114  01E8  1C03               	skipc
  1115  01E9  0A7B               	incf	??_divisor_hex+2,w
  1116  01EA  0229               	subwf	_unidades+1,w
  1117  01EB  00F3               	movwf	___awdiv@dividend+1
  1118  01EC  120A  118A  20B3  120A  118A  	fcall	___awdiv
  1119  01F1  0871               	movf	?___awdiv+1,w
  1120  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1121  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1122  01F4  00A9               	movwf	_unidades+1
  1123  01F5  0870               	movf	?___awdiv,w
  1124  01F6  00A8               	movwf	_unidades
  1125  01F7                     i1l1230:
  1126                           
  1127                           ;LAB1.c: 191:     }
  1128  01F7  3001               	movlw	1
  1129  01F8  07FC               	addwf	divisor_hex@i,f
  1130  01F9  1803               	skipnc
  1131  01FA  0AFD               	incf	divisor_hex@i+1,f
  1132  01FB  3000               	movlw	0
  1133  01FC  07FD               	addwf	divisor_hex@i+1,f
  1134  01FD                     i1l1232:
  1135  01FD  087D               	movf	divisor_hex@i+1,w
  1136  01FE  3A80               	xorlw	128
  1137  01FF  00FF               	movwf	btemp+1
  1138  0200  3080               	movlw	128
  1139  0201  027F               	subwf	btemp+1,w
  1140  0202  1D03               	skipz
  1141  0203  2A06               	goto	u35_25
  1142  0204  3003               	movlw	3
  1143  0205  027C               	subwf	divisor_hex@i,w
  1144  0206                     u35_25:
  1145  0206  1C03               	skipc
  1146  0207  2A09               	goto	u35_21
  1147  0208  2A0A               	goto	u35_20
  1148  0209                     u35_21:
  1149  0209  29C3               	goto	i1l1226
  1150  020A                     u35_20:
  1151  020A                     i1l116:
  1152  020A  0008               	return
  1153  020B                     __end_of_divisor_hex:
  1154                           
  1155                           	psect	text5
  1156  00B3                     __ptext5:	
  1157 ;; *************** function ___awdiv *****************
  1158 ;; Defined at:
  1159 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;  divisor         2    0[COMMON] int 
  1162 ;;  dividend        2    2[COMMON] int 
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;  quotient        2    7[COMMON] int 
  1165 ;;  sign            1    6[COMMON] unsigned char 
  1166 ;;  counter         1    5[COMMON] unsigned char 
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  2    0[COMMON] int 
  1169 ;; Registers used:
  1170 ;;		wreg, status,2, status,0
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1176 ;;      Params:         4       0       0       0       0
  1177 ;;      Locals:         4       0       0       0       0
  1178 ;;      Temps:          1       0       0       0       0
  1179 ;;      Totals:         9       0       0       0       0
  1180 ;;Total ram usage:        9 bytes
  1181 ;; Hardware stack levels used: 1
  1182 ;; This function calls:
  1183 ;;		Nothing
  1184 ;; This function is called by:
  1185 ;;		_divisor_hex
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           
  1190                           ;psect for function ___awdiv
  1191  00B3                     ___awdiv:
  1192  00B3                     i1l1176:	
  1193                           ;incstack = 0
  1194                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1195                           
  1196  00B3  01F6               	clrf	___awdiv@sign
  1197  00B4                     i1l1178:
  1198  00B4  1FF1               	btfss	___awdiv@divisor+1,7
  1199  00B5  28B7               	goto	u25_21
  1200  00B6  28B8               	goto	u25_20
  1201  00B7                     u25_21:
  1202  00B7  28BF               	goto	i1l1184
  1203  00B8                     u25_20:
  1204  00B8                     i1l1180:
  1205  00B8  09F0               	comf	___awdiv@divisor,f
  1206  00B9  09F1               	comf	___awdiv@divisor+1,f
  1207  00BA  0AF0               	incf	___awdiv@divisor,f
  1208  00BB  1903               	skipnz
  1209  00BC  0AF1               	incf	___awdiv@divisor+1,f
  1210  00BD                     i1l1182:
  1211  00BD  01F6               	clrf	___awdiv@sign
  1212  00BE  0AF6               	incf	___awdiv@sign,f
  1213  00BF                     i1l1184:
  1214  00BF  1FF3               	btfss	___awdiv@dividend+1,7
  1215  00C0  28C2               	goto	u26_21
  1216  00C1  28C3               	goto	u26_20
  1217  00C2                     u26_21:
  1218  00C2  28CC               	goto	i1l1190
  1219  00C3                     u26_20:
  1220  00C3                     i1l1186:
  1221  00C3  09F2               	comf	___awdiv@dividend,f
  1222  00C4  09F3               	comf	___awdiv@dividend+1,f
  1223  00C5  0AF2               	incf	___awdiv@dividend,f
  1224  00C6  1903               	skipnz
  1225  00C7  0AF3               	incf	___awdiv@dividend+1,f
  1226  00C8                     i1l1188:
  1227  00C8  3001               	movlw	1
  1228  00C9  00F4               	movwf	??___awdiv
  1229  00CA  0874               	movf	??___awdiv,w
  1230  00CB  06F6               	xorwf	___awdiv@sign,f
  1231  00CC                     i1l1190:
  1232  00CC  01F7               	clrf	___awdiv@quotient
  1233  00CD  01F8               	clrf	___awdiv@quotient+1
  1234  00CE                     i1l1192:
  1235  00CE  0870               	movf	___awdiv@divisor,w
  1236  00CF  0471               	iorwf	___awdiv@divisor+1,w
  1237  00D0  1903               	btfsc	3,2
  1238  00D1  28D3               	goto	u27_21
  1239  00D2  28D4               	goto	u27_20
  1240  00D3                     u27_21:
  1241  00D3  290B               	goto	i1l1212
  1242  00D4                     u27_20:
  1243  00D4                     i1l1194:
  1244  00D4  01F5               	clrf	___awdiv@counter
  1245  00D5  0AF5               	incf	___awdiv@counter,f
  1246  00D6  28E2               	goto	i1l1200
  1247  00D7                     i1l1196:
  1248  00D7  3001               	movlw	1
  1249  00D8                     u28_25:
  1250  00D8  1003               	clrc
  1251  00D9  0DF0               	rlf	___awdiv@divisor,f
  1252  00DA  0DF1               	rlf	___awdiv@divisor+1,f
  1253  00DB  3EFF               	addlw	-1
  1254  00DC  1D03               	skipz
  1255  00DD  28D8               	goto	u28_25
  1256  00DE                     i1l1198:
  1257  00DE  3001               	movlw	1
  1258  00DF  00F4               	movwf	??___awdiv
  1259  00E0  0874               	movf	??___awdiv,w
  1260  00E1  07F5               	addwf	___awdiv@counter,f
  1261  00E2                     i1l1200:
  1262  00E2  1FF1               	btfss	___awdiv@divisor+1,7
  1263  00E3  28E5               	goto	u29_21
  1264  00E4  28E6               	goto	u29_20
  1265  00E5                     u29_21:
  1266  00E5  28D7               	goto	i1l1196
  1267  00E6                     u29_20:
  1268  00E6                     i1l1202:
  1269  00E6  3001               	movlw	1
  1270  00E7                     u30_25:
  1271  00E7  1003               	clrc
  1272  00E8  0DF7               	rlf	___awdiv@quotient,f
  1273  00E9  0DF8               	rlf	___awdiv@quotient+1,f
  1274  00EA  3EFF               	addlw	-1
  1275  00EB  1D03               	skipz
  1276  00EC  28E7               	goto	u30_25
  1277  00ED  0871               	movf	___awdiv@divisor+1,w
  1278  00EE  0273               	subwf	___awdiv@dividend+1,w
  1279  00EF  1D03               	skipz
  1280  00F0  28F3               	goto	u31_25
  1281  00F1  0870               	movf	___awdiv@divisor,w
  1282  00F2  0272               	subwf	___awdiv@dividend,w
  1283  00F3                     u31_25:
  1284  00F3  1C03               	skipc
  1285  00F4  28F6               	goto	u31_21
  1286  00F5  28F7               	goto	u31_20
  1287  00F6                     u31_21:
  1288  00F6  28FE               	goto	i1l1208
  1289  00F7                     u31_20:
  1290  00F7                     i1l1204:
  1291  00F7  0870               	movf	___awdiv@divisor,w
  1292  00F8  02F2               	subwf	___awdiv@dividend,f
  1293  00F9  0871               	movf	___awdiv@divisor+1,w
  1294  00FA  1C03               	skipc
  1295  00FB  03F3               	decf	___awdiv@dividend+1,f
  1296  00FC  02F3               	subwf	___awdiv@dividend+1,f
  1297  00FD                     i1l1206:
  1298  00FD  1477               	bsf	___awdiv@quotient,0
  1299  00FE                     i1l1208:
  1300  00FE  3001               	movlw	1
  1301  00FF                     u32_25:
  1302  00FF  1003               	clrc
  1303  0100  0CF1               	rrf	___awdiv@divisor+1,f
  1304  0101  0CF0               	rrf	___awdiv@divisor,f
  1305  0102  3EFF               	addlw	-1
  1306  0103  1D03               	skipz
  1307  0104  28FF               	goto	u32_25
  1308  0105                     i1l1210:
  1309  0105  3001               	movlw	1
  1310  0106  02F5               	subwf	___awdiv@counter,f
  1311  0107  1D03               	btfss	3,2
  1312  0108  290A               	goto	u33_21
  1313  0109  290B               	goto	u33_20
  1314  010A                     u33_21:
  1315  010A  28E6               	goto	i1l1202
  1316  010B                     u33_20:
  1317  010B                     i1l1212:
  1318  010B  0876               	movf	___awdiv@sign,w
  1319  010C  1903               	btfsc	3,2
  1320  010D  290F               	goto	u34_21
  1321  010E  2910               	goto	u34_20
  1322  010F                     u34_21:
  1323  010F  2915               	goto	i1l1216
  1324  0110                     u34_20:
  1325  0110                     i1l1214:
  1326  0110  09F7               	comf	___awdiv@quotient,f
  1327  0111  09F8               	comf	___awdiv@quotient+1,f
  1328  0112  0AF7               	incf	___awdiv@quotient,f
  1329  0113  1903               	skipnz
  1330  0114  0AF8               	incf	___awdiv@quotient+1,f
  1331  0115                     i1l1216:
  1332  0115  0878               	movf	___awdiv@quotient+1,w
  1333  0116  00F1               	movwf	?___awdiv+1
  1334  0117  0877               	movf	___awdiv@quotient,w
  1335  0118  00F0               	movwf	?___awdiv
  1336  0119                     i1l383:
  1337  0119  0008               	return
  1338  011A                     __end_of___awdiv:
  1339                           
  1340                           	psect	text6
  1341  0251                     __ptext6:	
  1342 ;; *************** function _displays *****************
  1343 ;; Defined at:
  1344 ;;		line 194 in file "LAB1.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;		None
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;		None
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  1    wreg      void 
  1351 ;; Registers used:
  1352 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1358 ;;      Params:         0       0       0       0       0
  1359 ;;      Locals:         0       0       0       0       0
  1360 ;;      Temps:          1       0       0       0       0
  1361 ;;      Totals:         1       0       0       0       0
  1362 ;;Total ram usage:        1 bytes
  1363 ;; Hardware stack levels used: 1
  1364 ;; Hardware stack levels required when called: 1
  1365 ;; This function calls:
  1366 ;;		_tabla
  1367 ;; This function is called by:
  1368 ;;		_isr
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372                           
  1373                           ;psect for function _displays
  1374  0251                     _displays:
  1375  0251                     i1l1240:	
  1376                           ;incstack = 0
  1377                           ; Regs used in _displays: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1378                           
  1379                           
  1380                           ;LAB1.c: 195:     PORTD = disp_selector;
  1381  0251  1283               	bcf	3,5	;RP0=0, select bank0
  1382  0252  1303               	bcf	3,6	;RP1=0, select bank0
  1383  0253  0833               	movf	_disp_selector,w
  1384  0254  0088               	movwf	8	;volatile
  1385  0255                     i1l1242:
  1386                           
  1387                           ;LAB1.c: 196:     if(disp_selector == 0b001){
  1388  0255  0333               	decf	_disp_selector,w
  1389  0256  1D03               	btfss	3,2
  1390  0257  2A59               	goto	u36_21
  1391  0258  2A5A               	goto	u36_20
  1392  0259                     u36_21:
  1393  0259  2A6C               	goto	i1l1248
  1394  025A                     u36_20:
  1395  025A                     i1l1244:
  1396                           
  1397                           ;LAB1.c: 197:         PORTC = tabla(dig[0]);
  1398  025A  0821               	movf	_dig+1,w
  1399  025B  00F1               	movwf	tabla@a+1
  1400  025C  0820               	movf	_dig,w
  1401  025D  00F0               	movwf	tabla@a
  1402  025E  120A  118A  202A  120A  118A  	fcall	_tabla
  1403  0263  0870               	movf	?_tabla,w
  1404  0264  1283               	bcf	3,5	;RP0=0, select bank0
  1405  0265  1303               	bcf	3,6	;RP1=0, select bank0
  1406  0266  0087               	movwf	7	;volatile
  1407  0267                     i1l1246:
  1408                           
  1409                           ;LAB1.c: 198:         disp_selector = 0b010;
  1410  0267  3002               	movlw	2
  1411  0268  00F2               	movwf	??_displays
  1412  0269  0872               	movf	??_displays,w
  1413  026A  00B3               	movwf	_disp_selector
  1414                           
  1415                           ;LAB1.c: 199:     }
  1416  026B  2A81               	goto	i1l122
  1417  026C                     i1l1248:
  1418  026C  3002               	movlw	2
  1419  026D  0633               	xorwf	_disp_selector,w
  1420  026E  1D03               	btfss	3,2
  1421  026F  2A71               	goto	u37_21
  1422  0270  2A72               	goto	u37_20
  1423  0271                     u37_21:
  1424  0271  2A81               	goto	i1l122
  1425  0272                     u37_20:
  1426  0272                     i1l1250:
  1427                           
  1428                           ;LAB1.c: 201:         PORTC = tabla(dig[1]);
  1429  0272  0823               	movf	_dig+3,w
  1430  0273  00F1               	movwf	tabla@a+1
  1431  0274  0822               	movf	_dig+2,w
  1432  0275  00F0               	movwf	tabla@a
  1433  0276  120A  118A  202A  120A  118A  	fcall	_tabla
  1434  027B  0870               	movf	?_tabla,w
  1435  027C  1283               	bcf	3,5	;RP0=0, select bank0
  1436  027D  1303               	bcf	3,6	;RP1=0, select bank0
  1437  027E  0087               	movwf	7	;volatile
  1438  027F                     i1l1252:
  1439                           
  1440                           ;LAB1.c: 202:         disp_selector = 0b001;
  1441  027F  01B3               	clrf	_disp_selector
  1442  0280  0AB3               	incf	_disp_selector,f
  1443  0281                     i1l122:
  1444  0281  0008               	return
  1445  0282                     __end_of_displays:
  1446                           
  1447                           	psect	text7
  1448  002A                     __ptext7:	
  1449 ;; *************** function _tabla *****************
  1450 ;; Defined at:
  1451 ;;		line 206 in file "LAB1.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;  a               2    0[COMMON] int 
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;		None
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  2    0[COMMON] int 
  1458 ;; Registers used:
  1459 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1465 ;;      Params:         2       0       0       0       0
  1466 ;;      Locals:         0       0       0       0       0
  1467 ;;      Temps:          0       0       0       0       0
  1468 ;;      Totals:         2       0       0       0       0
  1469 ;;Total ram usage:        2 bytes
  1470 ;; Hardware stack levels used: 1
  1471 ;; This function calls:
  1472 ;;		Nothing
  1473 ;; This function is called by:
  1474 ;;		_displays
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478                           
  1479                           ;psect for function _tabla
  1480  002A                     _tabla:
  1481  002A                     i1l1070:	
  1482                           ;incstack = 0
  1483                           ; Regs used in _tabla: [wreg-fsr0h+status,2+status,0]
  1484                           
  1485                           
  1486                           ;LAB1.c: 207:     switch (a){
  1487  002A  287B               	goto	i1l1170
  1488  002B                     i1l1072:
  1489                           
  1490                           ;LAB1.c: 209:             return 0b00111111;
  1491  002B  303F               	movlw	63
  1492  002C  00F0               	movwf	?_tabla
  1493  002D  3000               	movlw	0
  1494  002E  00F1               	movwf	?_tabla+1
  1495  002F  28B2               	goto	i1l127
  1496  0030                     i1l1078:
  1497                           
  1498                           ;LAB1.c: 212:             return 0b00000110;
  1499  0030  3006               	movlw	6
  1500  0031  00F0               	movwf	?_tabla
  1501  0032  3000               	movlw	0
  1502  0033  00F1               	movwf	?_tabla+1
  1503  0034  28B2               	goto	i1l127
  1504  0035                     i1l1084:
  1505                           
  1506                           ;LAB1.c: 215:             return 0b01011011;
  1507  0035  305B               	movlw	91
  1508  0036  00F0               	movwf	?_tabla
  1509  0037  3000               	movlw	0
  1510  0038  00F1               	movwf	?_tabla+1
  1511  0039  28B2               	goto	i1l127
  1512  003A                     i1l1090:
  1513                           
  1514                           ;LAB1.c: 218:             return 0b01001111;
  1515  003A  304F               	movlw	79
  1516  003B  00F0               	movwf	?_tabla
  1517  003C  3000               	movlw	0
  1518  003D  00F1               	movwf	?_tabla+1
  1519  003E  28B2               	goto	i1l127
  1520  003F                     i1l1096:
  1521                           
  1522                           ;LAB1.c: 221:             return 0b01100110;
  1523  003F  3066               	movlw	102
  1524  0040  00F0               	movwf	?_tabla
  1525  0041  3000               	movlw	0
  1526  0042  00F1               	movwf	?_tabla+1
  1527  0043  28B2               	goto	i1l127
  1528  0044                     i1l1102:
  1529                           
  1530                           ;LAB1.c: 224:             return 0b01101101;
  1531  0044  306D               	movlw	109
  1532  0045  00F0               	movwf	?_tabla
  1533  0046  3000               	movlw	0
  1534  0047  00F1               	movwf	?_tabla+1
  1535  0048  28B2               	goto	i1l127
  1536  0049                     i1l1108:
  1537                           
  1538                           ;LAB1.c: 227:             return 0b01111101;
  1539  0049  307D               	movlw	125
  1540  004A  00F0               	movwf	?_tabla
  1541  004B  3000               	movlw	0
  1542  004C  00F1               	movwf	?_tabla+1
  1543  004D  28B2               	goto	i1l127
  1544  004E                     i1l1114:
  1545                           
  1546                           ;LAB1.c: 230:             return 0b00000111;
  1547  004E  3007               	movlw	7
  1548  004F  00F0               	movwf	?_tabla
  1549  0050  3000               	movlw	0
  1550  0051  00F1               	movwf	?_tabla+1
  1551  0052  28B2               	goto	i1l127
  1552  0053                     i1l1120:
  1553                           
  1554                           ;LAB1.c: 233:             return 0b01111111;
  1555  0053  307F               	movlw	127
  1556  0054  00F0               	movwf	?_tabla
  1557  0055  3000               	movlw	0
  1558  0056  00F1               	movwf	?_tabla+1
  1559  0057  28B2               	goto	i1l127
  1560  0058                     i1l1126:
  1561                           
  1562                           ;LAB1.c: 236:             return 0b01101111;
  1563  0058  306F               	movlw	111
  1564  0059  00F0               	movwf	?_tabla
  1565  005A  3000               	movlw	0
  1566  005B  00F1               	movwf	?_tabla+1
  1567  005C  28B2               	goto	i1l127
  1568  005D                     i1l1132:
  1569                           
  1570                           ;LAB1.c: 239:             return 0b01110111;
  1571  005D  3077               	movlw	119
  1572  005E  00F0               	movwf	?_tabla
  1573  005F  3000               	movlw	0
  1574  0060  00F1               	movwf	?_tabla+1
  1575  0061  28B2               	goto	i1l127
  1576  0062                     i1l1138:
  1577                           
  1578                           ;LAB1.c: 242:             return 0b01111100;
  1579  0062  307C               	movlw	124
  1580  0063  00F0               	movwf	?_tabla
  1581  0064  3000               	movlw	0
  1582  0065  00F1               	movwf	?_tabla+1
  1583  0066  28B2               	goto	i1l127
  1584  0067                     i1l1144:
  1585                           
  1586                           ;LAB1.c: 245:             return 0b00111001;
  1587  0067  3039               	movlw	57
  1588  0068  00F0               	movwf	?_tabla
  1589  0069  3000               	movlw	0
  1590  006A  00F1               	movwf	?_tabla+1
  1591  006B  28B2               	goto	i1l127
  1592  006C                     i1l1150:
  1593                           
  1594                           ;LAB1.c: 248:             return 0b01011110;
  1595  006C  305E               	movlw	94
  1596  006D  00F0               	movwf	?_tabla
  1597  006E  3000               	movlw	0
  1598  006F  00F1               	movwf	?_tabla+1
  1599  0070  28B2               	goto	i1l127
  1600  0071                     i1l1156:
  1601                           
  1602                           ;LAB1.c: 251:             return 0b01111001;
  1603  0071  3079               	movlw	121
  1604  0072  00F0               	movwf	?_tabla
  1605  0073  3000               	movlw	0
  1606  0074  00F1               	movwf	?_tabla+1
  1607  0075  28B2               	goto	i1l127
  1608  0076                     i1l1162:
  1609                           
  1610                           ;LAB1.c: 254:             return 0b01110001;
  1611  0076  3071               	movlw	113
  1612  0077  00F0               	movwf	?_tabla
  1613  0078  3000               	movlw	0
  1614  0079  00F1               	movwf	?_tabla+1
  1615  007A  28B2               	goto	i1l127
  1616  007B                     i1l1170:
  1617                           
  1618                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1619                           ; Switch size 1, requested type "simple"
  1620                           ; Number of cases is 1, Range of values is 0 to 0
  1621                           ; switch strategies available:
  1622                           ; Name         Instructions Cycles
  1623                           ; simple_byte            4     3 (average)
  1624                           ; direct_byte           11     8 (fixed)
  1625                           ; jumptable            260     6 (fixed)
  1626                           ;	Chosen strategy is simple_byte
  1627  007B  0871               	movf	tabla@a+1,w
  1628  007C  3A00               	xorlw	0	; case 0
  1629  007D  1903               	skipnz
  1630  007E  2880               	goto	i1l1404
  1631  007F  28B2               	goto	i1l127
  1632  0080                     i1l1404:
  1633                           
  1634                           ; Switch size 1, requested type "simple"
  1635                           ; Number of cases is 16, Range of values is 0 to 15
  1636                           ; switch strategies available:
  1637                           ; Name         Instructions Cycles
  1638                           ; simple_byte           49    25 (average)
  1639                           ; direct_byte           56     8 (fixed)
  1640                           ; jumptable            260     6 (fixed)
  1641                           ;	Chosen strategy is simple_byte
  1642  0080  0870               	movf	tabla@a,w
  1643  0081  3A00               	xorlw	0	; case 0
  1644  0082  1903               	skipnz
  1645  0083  282B               	goto	i1l1072
  1646  0084  3A01               	xorlw	1	; case 1
  1647  0085  1903               	skipnz
  1648  0086  2830               	goto	i1l1078
  1649  0087  3A03               	xorlw	3	; case 2
  1650  0088  1903               	skipnz
  1651  0089  2835               	goto	i1l1084
  1652  008A  3A01               	xorlw	1	; case 3
  1653  008B  1903               	skipnz
  1654  008C  283A               	goto	i1l1090
  1655  008D  3A07               	xorlw	7	; case 4
  1656  008E  1903               	skipnz
  1657  008F  283F               	goto	i1l1096
  1658  0090  3A01               	xorlw	1	; case 5
  1659  0091  1903               	skipnz
  1660  0092  2844               	goto	i1l1102
  1661  0093  3A03               	xorlw	3	; case 6
  1662  0094  1903               	skipnz
  1663  0095  2849               	goto	i1l1108
  1664  0096  3A01               	xorlw	1	; case 7
  1665  0097  1903               	skipnz
  1666  0098  284E               	goto	i1l1114
  1667  0099  3A0F               	xorlw	15	; case 8
  1668  009A  1903               	skipnz
  1669  009B  2853               	goto	i1l1120
  1670  009C  3A01               	xorlw	1	; case 9
  1671  009D  1903               	skipnz
  1672  009E  2858               	goto	i1l1126
  1673  009F  3A03               	xorlw	3	; case 10
  1674  00A0  1903               	skipnz
  1675  00A1  285D               	goto	i1l1132
  1676  00A2  3A01               	xorlw	1	; case 11
  1677  00A3  1903               	skipnz
  1678  00A4  2862               	goto	i1l1138
  1679  00A5  3A07               	xorlw	7	; case 12
  1680  00A6  1903               	skipnz
  1681  00A7  2867               	goto	i1l1144
  1682  00A8  3A01               	xorlw	1	; case 13
  1683  00A9  1903               	skipnz
  1684  00AA  286C               	goto	i1l1150
  1685  00AB  3A03               	xorlw	3	; case 14
  1686  00AC  1903               	skipnz
  1687  00AD  2871               	goto	i1l1156
  1688  00AE  3A01               	xorlw	1	; case 15
  1689  00AF  1903               	skipnz
  1690  00B0  2876               	goto	i1l1162
  1691  00B1  28B2               	goto	i1l127
  1692  00B2                     i1l127:
  1693  00B2  0008               	return
  1694  00B3                     __end_of_tabla:
  1695  007E                     btemp	set	126	;btemp
  1696  007E                     wtemp0	set	126
  1697                           
  1698                           	psect	config
  1699                           
  1700                           ;Config register CONFIG1 @ 0x2007
  1701                           ;	Oscillator Selection bits
  1702                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1703                           ;	Watchdog Timer Enable bit
  1704                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1705                           ;	Power-up Timer Enable bit
  1706                           ;	PWRTE = OFF, PWRT disabled
  1707                           ;	RE3/MCLR pin function select bit
  1708                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1709                           ;	Code Protection bit
  1710                           ;	CP = OFF, Program memory code protection is disabled
  1711                           ;	Data Code Protection bit
  1712                           ;	CPD = OFF, Data memory code protection is disabled
  1713                           ;	Brown Out Reset Selection bits
  1714                           ;	BOREN = OFF, BOR disabled
  1715                           ;	Internal External Switchover bit
  1716                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1717                           ;	Fail-Safe Clock Monitor Enabled bit
  1718                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1719                           ;	Low Voltage Programming Enable bit
  1720                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1721                           ;	In-Circuit Debugger Mode bit
  1722                           ;	DEBUG = 0x1, unprogrammed default
  1723  2007                     	org	8199
  1724  2007  20D4               	dw	8404
  1725                           
  1726                           ;Config register CONFIG2 @ 0x2008
  1727                           ;	Brown-out Reset Selection bit
  1728                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1729                           ;	Flash Program Memory Self Write Enable bits
  1730                           ;	WRT = OFF, Write protection off
  1731  2008                     	org	8200
  1732  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      8      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_divisor_hex
    _divisor_hex->___awdiv
    _displays->_tabla

Critical Paths under _main in BANK0

    _main->_setup

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              7 BANK0      1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  6     6      0     716
                                              0 BANK0      6     6      0
                           _displays
                        _divisor_hex
                               _tmr0
 ---------------------------------------------------------------------------------
 (3) _tmr0                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _divisor_hex                                          5     5      0     542
                                              9 COMMON     5     5      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _displays                                             1     1      0     174
                                              2 COMMON     1     1      0
                              _tabla
 ---------------------------------------------------------------------------------
 (4) _tabla                                                2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)
   _displays
     _tabla
   _divisor_hex
     ___awdiv
   _tmr0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      14       5       25.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      22      12        0.0%
ABS                  0      0      22       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jan 27 07:38:31 2022

           ___awdiv@sign 0076                      l101 024A                      l108 01C0  
           ?_divisor_hex 0070                      _RB0 0030                      _RB1 0031  
                    u507 0235                      u460 0217                      u517 01B1  
                    u461 0216                      u470 0220                      u471 021F  
                    u480 0246                      u481 0245                      u485 0242  
                    u497 0228                      _dig 0020                      _isr 011A  
                    fsr0 0004                      indf 0000                     l1300 0199  
                   l1310 01AD                     l1302 019D                     l1320 01B8  
                   l1312 01B4                     l1304 01A0                     l1322 01B9  
                   l1314 01B5                     l1306 01A1                     l1324 01BC  
                   l1316 01B6                     l1308 01AC                     l1260 017C  
                   l1326 01BF                     l1318 01B7                     l1270 0185  
                   l1262 017D                     l1254 0172                     l1280 018C  
                   l1272 0186                     l1264 0180                     l1256 0176  
                   l1360 020B                     l1290 0194                     l1282 018D  
                   l1274 0189                     l1266 0183                     l1258 0177  
                   l1370 0224                     l1362 0210                     l1292 0195  
                   l1284 018E                     l1276 018A                     l1268 0184  
                   l1372 022C                     l1380 023B                     l1364 0213  
                   l1294 0196                     l1286 0192                     l1278 018B  
                   l1382 0246                     l1366 0217                     l1296 0197  
                   l1288 0193                     l1376 0231                     l1368 0220  
                   l1298 0198                     l1378 0238                     ?_isr 0070  
                   _T0IF 005A                     i1l81 0133                     i1l92 0165  
                   i1l85 014E                     i1l79 0136                     i1l89 015A  
                   _TMR0 0001                     _main 020B                     _tmr0 0282  
                   btemp 007E                     start 0012                    ??_isr 002B  
                  ?_main 0070          __end_of___awdiv 011A                    ?_tmr0 0070  
                  _ANSEL 0188          ___awdiv@divisor 0070                    i1l111 0287  
                  i1l122 0281                    i1l116 020A                    i1l127 00B2  
                  i1l383 0119          ___awdiv@counter 0075                    u30_25 00E7  
                  u31_20 00F7                    u31_21 00F6                    u31_25 00F3  
                  u40_20 013A                    u40_21 0139                    u32_25 00FF  
                  u33_20 010B                    u25_20 00B8                    u41_20 0148  
                  u33_21 010A                    u25_21 00B7                    u41_21 0147  
                  u34_20 0110                    u26_20 00C3                    u42_20 014E  
                  u34_21 010F                    u26_21 00C2                    u42_21 014D  
                  u27_20 00D4                    u35_20 020A                    u43_20 0152  
                  u27_21 00D3                    u35_21 0209                    u43_21 0151  
                  _PORTA 0005                    _PORTC 0007                    _PORTD 0008  
                  u35_25 0206                    _PORTE 0009                    u36_20 025A  
                  u44_20 015A                    u36_21 0259                    u44_21 0159  
                  u28_25 00D8                    u37_20 0272                    u29_20 00E6  
                  u45_20 015E                    u37_21 0271                    u29_21 00E5  
                  u45_21 015D                    u38_20 011E                    u38_21 011D  
                  u39_20 0127                    u39_21 0126                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _tabla 002A                    _setup 0172  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0015             __end_of_main 0251             __end_of_tmr0 0288  
                 ??_main 0032                   ??_tmr0 0070             divisor_hex@i 007C  
                 ?_tabla 0070                   _ADRESH 001E         ___awdiv@dividend 0072  
                 ?_setup 0070                   _ANSELH 0189                   i1l1102 0044  
                 i1l1120 0053                   i1l1200 00E2                   i1l1114 004E  
                 i1l1210 0105                   i1l1202 00E6                   i1l1132 005D  
                 i1l1108 0049                   i1l1204 00F7                   i1l1212 010B  
                 i1l1220 01C1                   i1l1150 006C                   i1l1126 0058  
                 i1l1070 002A                   i1l1214 0110                   i1l1206 00FD  
                 i1l1230 01F7                   i1l1144 0067                   i1l1072 002B  
                 i1l1240 0251                   i1l1216 0115                   i1l1208 00FE  
                 i1l1232 01FD                   i1l1162 0076                   i1l1138 0062  
                 i1l1090 003A                   i1l1170 007B                   i1l1250 0272  
                 i1l1242 0255                   i1l1226 01C3                   i1l1234 0282  
                 i1l1330 011A                   i1l1404 0080                   i1l1156 0071  
                 i1l1084 0035                   i1l1252 027F                   i1l1244 025A  
                 i1l1180 00B8                   i1l1228 01D6                   i1l1236 0283  
                 i1l1340 013F                   i1l1332 011E                   i1l1078 0030  
                 i1l1246 0267                   i1l1190 00CC                   i1l1182 00BD  
                 i1l1350 0156                   i1l1342 0144                   i1l1334 0127  
                 i1l1096 003F                   i1l1248 026C                   i1l1192 00CE  
                 i1l1184 00BF                   i1l1176 00B3                   i1l1344 0148  
                 i1l1336 012E                   i1l1194 00D4                   i1l1186 00C3  
                 i1l1178 00B4                   i1l1354 015E                   i1l1338 013A  
                 i1l1196 00D7                   i1l1188 00C8                   i1l1356 0160  
                 i1l1348 0152                   i1l1198 00DE                   i1l1358 0161  
       __end_of_displays 0282                ??___awdiv 0074         ___awdiv@quotient 0077  
                 tabla@a 0070                   saved_w 007E     __size_of_divisor_hex 004A  
__end_of__initialization 0026           __pcstackCOMMON 0070             __pidataBANK0 0288  
          __end_of_tabla 00B3            __end_of_setup 01C1           _OPTION_REGbits 0081  
                ??_tabla 0072                  ??_setup 0031               __pbssBANK0 0020  
             __pmaintext 020B               __pintentry 0004                ?_displays 0070  
                ___awdiv 00B3                  _decenas 0026                  __ptext1 0172  
                __ptext2 011A                  __ptext3 0282                  __ptext4 01C1  
                __ptext5 00B3                  __ptext6 0251                  __ptext7 002A  
           __size_of_isr 0058               ??_displays 0072     end_of_initialization 0026  
              _PORTEbits 0009            ??_divisor_hex 0079      start_initialization 0015  
            __end_of_isr 0172              __pdataBANK0 0033                ___latbits 0002  
          __pcstackBANK0 002B      __end_of_divisor_hex 020B        __size_of_displays 0031  
               ?___awdiv 0070           __size_of_tabla 0089           __size_of_setup 004F  
      interrupt_function 0004                 _IOCBbits 0096                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
            _divisor_hex 01C1                 _WPUBbits 0095                 _Puerto_A 002A  
       __size_of___awdiv 0067                 _displays 0251            __size_of_main 0046  
          __size_of_tmr0 0006                 _unidades 0028               _INTCONbits 000B  
               intlevel1 0000               _OSCCONbits 008F            _disp_selector 0033  
