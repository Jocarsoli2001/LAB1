

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jan 27 03:56:26 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214                           
   215                           	psect	idataBANK0
   216  02F4                     __pidataBANK0:
   217                           
   218                           ;initializer for _disp_selector
   219  02F4  3401               	retlw	1
   220  000B                     _INTCONbits	set	11
   221  0001                     _TMR0	set	1
   222  0009                     _PORTE	set	9
   223  0007                     _PORTC	set	7
   224  0008                     _PORTD	set	8
   225  0005                     _PORTA	set	5
   226  0006                     _PORTB	set	6
   227  001F                     _ADCON0bits	set	31
   228  000C                     _PIR1bits	set	12
   229  001E                     _ADRESH	set	30
   230  005A                     _T0IF	set	90
   231  008C                     _PIE1bits	set	140
   232  009F                     _ADCON1bits	set	159
   233  0081                     _OPTION_REGbits	set	129
   234  008F                     _OSCCONbits	set	143
   235  0089                     _TRISE	set	137
   236  0088                     _TRISD	set	136
   237  0087                     _TRISC	set	135
   238  0085                     _TRISA	set	133
   239  0189                     _ANSELH	set	393
   240  0188                     _ANSEL	set	392
   241                           
   242                           	psect	cinit
   243  0015                     start_initialization:	
   244                           ; #config settings
   245                           
   246  0015                     __initialization:
   247                           
   248                           ; Initialize objects allocated to BANK0
   249  0015  120A  118A  22F4  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   250  001A  00B7               	movwf	__pdataBANK0& (0+127)
   251                           
   252                           ; Clear objects allocated to BANK0
   253  001B  01A0               	clrf	__pbssBANK0& (0+127)
   254  001C  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   255  001D  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   256  001E  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   257  001F  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   258  0020  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   259  0021  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   260  0022  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   261  0023  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   262  0024  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   263  0025  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   264  0026  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   265  0027  01AC               	clrf	(__pbssBANK0+12)& (0+127)
   266  0028  01AD               	clrf	(__pbssBANK0+13)& (0+127)
   267  0029  01AE               	clrf	(__pbssBANK0+14)& (0+127)
   268  002A                     end_of_initialization:	
   269                           ;End of C runtime variable initialization code
   270                           
   271  002A                     __end_of__initialization:
   272  002A  0183               	clrf	3
   273  002B  120A  118A  2ABC   	ljmp	_main	;jump to C main() function
   274                           
   275                           	psect	bssBANK0
   276  0020                     __pbssBANK0:
   277  0020                     _dig:
   278  0020                     	ds	6
   279  0026                     _decenas:
   280  0026                     	ds	2
   281  0028                     _unidades:
   282  0028                     	ds	2
   283  002A                     _cont_vol:
   284  002A                     	ds	2
   285  002C                     _cont2:
   286  002C                     	ds	2
   287  002E                     _digi:
   288  002E                     	ds	1
   289                           
   290                           	psect	dataBANK0
   291  0037                     __pdataBANK0:
   292  0037                     _disp_selector:
   293  0037                     	ds	1
   294                           
   295                           	psect	cstackCOMMON
   296  0070                     __pcstackCOMMON:
   297  0070                     ?_divisor:
   298  0070                     ?_tmr0:	
   299                           ; 1 bytes @ 0x0
   300                           
   301  0070                     ??_tmr0:	
   302                           ; 1 bytes @ 0x0
   303                           
   304  0070                     ?_displays:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0070                     ?_setup:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ?_isr:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ?_main:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ?_tabla:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     ?_tabla_p:	
   320                           ; 2 bytes @ 0x0
   321                           
   322  0070                     ?___awdiv:	
   323                           ; 2 bytes @ 0x0
   324                           
   325  0070                     ?___awmod:	
   326                           ; 2 bytes @ 0x0
   327                           
   328  0070                     tabla@a:	
   329                           ; 2 bytes @ 0x0
   330                           
   331  0070                     tabla_p@a:	
   332                           ; 2 bytes @ 0x0
   333                           
   334  0070                     ___awdiv@divisor:	
   335                           ; 2 bytes @ 0x0
   336                           
   337  0070                     ___awmod@divisor:	
   338                           ; 2 bytes @ 0x0
   339                           
   340                           
   341                           ; 2 bytes @ 0x0
   342  0070                     	ds	2
   343  0072                     ??_displays:
   344  0072                     ??_tabla:	
   345                           ; 1 bytes @ 0x2
   346                           
   347  0072                     ??_tabla_p:	
   348                           ; 1 bytes @ 0x2
   349                           
   350  0072                     ___awdiv@dividend:	
   351                           ; 1 bytes @ 0x2
   352                           
   353  0072                     ___awmod@dividend:	
   354                           ; 2 bytes @ 0x2
   355                           
   356                           
   357                           ; 2 bytes @ 0x2
   358  0072                     	ds	2
   359  0074                     ??___awdiv:
   360  0074                     ??___awmod:	
   361                           ; 1 bytes @ 0x4
   362                           
   363                           
   364                           ; 1 bytes @ 0x4
   365  0074                     	ds	1
   366  0075                     ___awdiv@counter:
   367  0075                     ___awmod@counter:	
   368                           ; 1 bytes @ 0x5
   369                           
   370                           
   371                           ; 1 bytes @ 0x5
   372  0075                     	ds	1
   373  0076                     ___awdiv@sign:
   374  0076                     ___awmod@sign:	
   375                           ; 1 bytes @ 0x6
   376                           
   377                           
   378                           ; 1 bytes @ 0x6
   379  0076                     	ds	1
   380  0077                     ___awdiv@quotient:
   381                           
   382                           ; 2 bytes @ 0x7
   383  0077                     	ds	2
   384  0079                     ??_divisor:
   385                           
   386                           ; 1 bytes @ 0x9
   387  0079                     	ds	3
   388  007C                     divisor@i:
   389                           
   390                           ; 2 bytes @ 0xC
   391  007C                     	ds	2
   392                           
   393                           	psect	cstackBANK0
   394  002F                     __pcstackBANK0:
   395  002F                     ??_isr:
   396                           
   397                           ; 1 bytes @ 0x0
   398  002F                     	ds	6
   399  0035                     ??_setup:
   400                           
   401                           ; 1 bytes @ 0x6
   402  0035                     	ds	1
   403  0036                     ??_main:
   404                           
   405                           ; 1 bytes @ 0x7
   406  0036                     	ds	1
   407                           
   408                           	psect	maintext
   409  02BC                     __pmaintext:	
   410 ;;
   411 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   412 ;;
   413 ;; *************** function _main *****************
   414 ;; Defined at:
   415 ;;		line 81 in file "LAB1.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;		None
   418 ;; Auto vars:     Size  Location     Type
   419 ;;		None
   420 ;; Return value:  Size  Location     Type
   421 ;;                  1    wreg      void 
   422 ;; Registers used:
   423 ;;		wreg, status,2, status,0, pclath, cstack
   424 ;; Tracked objects:
   425 ;;		On entry : B00/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   429 ;;      Params:         0       0       0       0       0
   430 ;;      Locals:         0       0       0       0       0
   431 ;;      Temps:          0       1       0       0       0
   432 ;;      Totals:         0       1       0       0       0
   433 ;;Total ram usage:        1 bytes
   434 ;; Hardware stack levels required when called: 4
   435 ;; This function calls:
   436 ;;		_setup
   437 ;; This function is called by:
   438 ;;		Startup code after reset
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442                           
   443                           ;psect for function _main
   444  02BC                     _main:
   445  02BC                     l1453:	
   446                           ;incstack = 0
   447                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   448                           
   449                           
   450                           ;LAB1.c: 82:     setup();
   451  02BC  120A  118A  223C  120A  118A  	fcall	_setup
   452  02C1                     l1455:
   453                           
   454                           ;LAB1.c: 83:     ADCON0bits.GO = 1;
   455  02C1  1283               	bcf	3,5	;RP0=0, select bank0
   456  02C2  1303               	bcf	3,6	;RP1=0, select bank0
   457  02C3  149F               	bsf	31,1	;volatile
   458  02C4                     l1457:
   459                           
   460                           ;LAB1.c: 85:         if(ADCON0bits.GO == 0){
   461  02C4  189F               	btfsc	31,1	;volatile
   462  02C5  2AC7               	goto	u551
   463  02C6  2AC8               	goto	u550
   464  02C7                     u551:
   465  02C7  2AC4               	goto	l1457
   466  02C8                     u550:
   467  02C8                     l1459:
   468                           
   469                           ;LAB1.c: 86:             if(ADCON0bits.CHS == 1){
   470  02C8  0C1F               	rrf	31,w	;volatile
   471  02C9  00B6               	movwf	??_main
   472  02CA  0C36               	rrf	??_main,w
   473  02CB  390F               	andlw	15
   474  02CC  3A01               	xorlw	1
   475  02CD  1D03               	skipz
   476  02CE  2AD0               	goto	u561
   477  02CF  2AD1               	goto	u560
   478  02D0                     u561:
   479  02D0  2ADB               	goto	l1465
   480  02D1                     u560:
   481  02D1                     l1461:
   482                           
   483                           ;LAB1.c: 87:                 ADCON0bits.CHS = 0;
   484  02D1  30C3               	movlw	-61
   485  02D2  059F               	andwf	31,f	;volatile
   486  02D3                     l1463:
   487                           
   488                           ;LAB1.c: 88:                 _delay((unsigned long)((50)*(4000000/4000000.0)));
   489  02D3  300F               	movlw	15
   490  02D4  1283               	bcf	3,5	;RP0=0, select bank0
   491  02D5  1303               	bcf	3,6	;RP1=0, select bank0
   492  02D6  00B6               	movwf	??_main
   493  02D7                     u577:
   494  02D7  0BB6               	decfsz	??_main,f
   495  02D8  2AD7               	goto	u577
   496  02D9  2ADA               	nop2
   497                           
   498                           ;LAB1.c: 89:             }
   499  02DA  2AE0               	goto	l1469
   500  02DB                     l1465:
   501                           
   502                           ;LAB1.c: 91:                 ADCON0bits.CHS = 1;
   503  02DB  081F               	movf	31,w	;volatile
   504  02DC  39C3               	andlw	-61
   505  02DD  3804               	iorlw	4
   506  02DE  009F               	movwf	31	;volatile
   507  02DF  2AD3               	goto	l1463
   508  02E0                     l1469:
   509                           
   510                           ;LAB1.c: 94:             _delay((unsigned long)((50)*(4000000/4000000.0)));
   511  02E0  300F               	movlw	15
   512  02E1  1283               	bcf	3,5	;RP0=0, select bank0
   513  02E2  1303               	bcf	3,6	;RP1=0, select bank0
   514  02E3  00B6               	movwf	??_main
   515  02E4                     u587:
   516  02E4  0BB6               	decfsz	??_main,f
   517  02E5  2AE4               	goto	u587
   518  02E6  2AE7               	nop2
   519  02E7                     l1471:
   520                           
   521                           ;LAB1.c: 95:             ADCON0bits.GO = 1;
   522  02E7  1283               	bcf	3,5	;RP0=0, select bank0
   523  02E8  1303               	bcf	3,6	;RP1=0, select bank0
   524  02E9  149F               	bsf	31,1	;volatile
   525  02EA  2AC4               	goto	l1457
   526  02EB  120A  118A  2812   	ljmp	start
   527  02EE                     __end_of_main:
   528                           
   529                           	psect	text1
   530  023C                     __ptext1:	
   531 ;; *************** function _setup *****************
   532 ;; Defined at:
   533 ;;		line 101 in file "LAB1.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;		None
   536 ;; Auto vars:     Size  Location     Type
   537 ;;		None
   538 ;; Return value:  Size  Location     Type
   539 ;;                  1    wreg      void 
   540 ;; Registers used:
   541 ;;		wreg, status,2, status,0
   542 ;; Tracked objects:
   543 ;;		On entry : 0/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   547 ;;      Params:         0       0       0       0       0
   548 ;;      Locals:         0       0       0       0       0
   549 ;;      Temps:          0       1       0       0       0
   550 ;;      Totals:         0       1       0       0       0
   551 ;;Total ram usage:        1 bytes
   552 ;; Hardware stack levels used: 1
   553 ;; Hardware stack levels required when called: 3
   554 ;; This function calls:
   555 ;;		Nothing
   556 ;; This function is called by:
   557 ;;		_main
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561                           
   562                           ;psect for function _setup
   563  023C                     _setup:
   564  023C                     l1383:	
   565                           ;incstack = 0
   566                           ; Regs used in _setup: [wreg+status,2+status,0]
   567                           
   568                           
   569                           ;LAB1.c: 104:     ANSEL = 0b00000011;
   570  023C  3003               	movlw	3
   571  023D  1683               	bsf	3,5	;RP0=1, select bank3
   572  023E  1703               	bsf	3,6	;RP1=1, select bank3
   573  023F  0088               	movwf	8	;volatile
   574  0240                     l1385:
   575                           
   576                           ;LAB1.c: 105:     ANSELH = 0;
   577  0240  0189               	clrf	9	;volatile
   578  0241                     l1387:
   579                           
   580                           ;LAB1.c: 107:     TRISA = 0b00000011;
   581  0241  3003               	movlw	3
   582  0242  1683               	bsf	3,5	;RP0=1, select bank1
   583  0243  1303               	bcf	3,6	;RP1=0, select bank1
   584  0244  0085               	movwf	5	;volatile
   585                           
   586                           ;LAB1.c: 108:     TRISC = 0;
   587  0245  0187               	clrf	7	;volatile
   588                           
   589                           ;LAB1.c: 109:     TRISD = 0;
   590  0246  0188               	clrf	8	;volatile
   591                           
   592                           ;LAB1.c: 110:     TRISE = 0;
   593  0247  0189               	clrf	9	;volatile
   594                           
   595                           ;LAB1.c: 112:     PORTA = 0;
   596  0248  1283               	bcf	3,5	;RP0=0, select bank0
   597  0249  1303               	bcf	3,6	;RP1=0, select bank0
   598  024A  0185               	clrf	5	;volatile
   599                           
   600                           ;LAB1.c: 113:     PORTD = 0;
   601  024B  0188               	clrf	8	;volatile
   602                           
   603                           ;LAB1.c: 114:     PORTC = 0;
   604  024C  0187               	clrf	7	;volatile
   605                           
   606                           ;LAB1.c: 115:     PORTE = 0;
   607  024D  0189               	clrf	9	;volatile
   608  024E                     l1389:
   609                           
   610                           ;LAB1.c: 118:     OSCCONbits.IRCF = 0b0110;
   611  024E  1683               	bsf	3,5	;RP0=1, select bank1
   612  024F  1303               	bcf	3,6	;RP1=0, select bank1
   613  0250  080F               	movf	15,w	;volatile
   614  0251  398F               	andlw	-113
   615  0252  3860               	iorlw	96
   616  0253  008F               	movwf	15	;volatile
   617  0254                     l1391:
   618                           
   619                           ;LAB1.c: 119:     OSCCONbits.SCS = 1;
   620  0254  140F               	bsf	15,0	;volatile
   621  0255                     l1393:
   622                           
   623                           ;LAB1.c: 122:     OPTION_REGbits.T0CS = 0;
   624  0255  1281               	bcf	1,5	;volatile
   625  0256                     l1395:
   626                           
   627                           ;LAB1.c: 123:     OPTION_REGbits.T0SE = 0;
   628  0256  1201               	bcf	1,4	;volatile
   629  0257                     l1397:
   630                           
   631                           ;LAB1.c: 124:     OPTION_REGbits.PSA = 0;
   632  0257  1181               	bcf	1,3	;volatile
   633  0258                     l1399:
   634                           
   635                           ;LAB1.c: 125:     OPTION_REGbits.PS2 = 1;
   636  0258  1501               	bsf	1,2	;volatile
   637  0259                     l1401:
   638                           
   639                           ;LAB1.c: 126:     OPTION_REGbits.PS1 = 1;
   640  0259  1481               	bsf	1,1	;volatile
   641  025A                     l1403:
   642                           
   643                           ;LAB1.c: 127:     OPTION_REGbits.PS0 = 1;
   644  025A  1401               	bsf	1,0	;volatile
   645  025B                     l1405:
   646                           
   647                           ;LAB1.c: 128:     TMR0 = 237;
   648  025B  30ED               	movlw	237
   649  025C  1283               	bcf	3,5	;RP0=0, select bank0
   650  025D  1303               	bcf	3,6	;RP1=0, select bank0
   651  025E  0081               	movwf	1	;volatile
   652  025F                     l1407:
   653                           
   654                           ;LAB1.c: 131:     ADCON1bits.ADFM = 0;
   655  025F  1683               	bsf	3,5	;RP0=1, select bank1
   656  0260  1303               	bcf	3,6	;RP1=0, select bank1
   657  0261  139F               	bcf	31,7	;volatile
   658  0262                     l1409:
   659                           
   660                           ;LAB1.c: 132:     ADCON1bits.VCFG0 = 0;
   661  0262  121F               	bcf	31,4	;volatile
   662  0263                     l1411:
   663                           
   664                           ;LAB1.c: 133:     ADCON1bits.VCFG1 = 0;
   665  0263  129F               	bcf	31,5	;volatile
   666  0264                     l1413:
   667                           
   668                           ;LAB1.c: 135:     ADCON0bits.ADCS = 0b01;
   669  0264  1283               	bcf	3,5	;RP0=0, select bank0
   670  0265  1303               	bcf	3,6	;RP1=0, select bank0
   671  0266  081F               	movf	31,w	;volatile
   672  0267  393F               	andlw	-193
   673  0268  3840               	iorlw	64
   674  0269  009F               	movwf	31	;volatile
   675  026A                     l1415:
   676                           
   677                           ;LAB1.c: 136:     ADCON0bits.CHS = 0;
   678  026A  30C3               	movlw	-61
   679  026B  059F               	andwf	31,f	;volatile
   680  026C                     l1417:
   681                           
   682                           ;LAB1.c: 137:     ADCON0bits.ADON = 1;
   683  026C  141F               	bsf	31,0	;volatile
   684  026D                     l1419:
   685                           
   686                           ;LAB1.c: 138:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   687  026D  300F               	movlw	15
   688  026E  1283               	bcf	3,5	;RP0=0, select bank0
   689  026F  1303               	bcf	3,6	;RP1=0, select bank0
   690  0270  00B5               	movwf	??_setup
   691  0271                     u597:
   692  0271  0BB5               	decfsz	??_setup,f
   693  0272  2A71               	goto	u597
   694  0273  2A74               	nop2
   695  0274                     l1421:
   696                           
   697                           ;LAB1.c: 141:     INTCONbits.T0IF = 0;
   698  0274  110B               	bcf	11,2	;volatile
   699  0275                     l1423:
   700                           
   701                           ;LAB1.c: 142:     INTCONbits.T0IE = 1;
   702  0275  168B               	bsf	11,5	;volatile
   703  0276                     l1425:
   704                           
   705                           ;LAB1.c: 143:     INTCONbits.GIE = 1;
   706  0276  178B               	bsf	11,7	;volatile
   707  0277                     l1427:
   708                           
   709                           ;LAB1.c: 144:     PIR1bits.ADIF = 0;
   710  0277  1283               	bcf	3,5	;RP0=0, select bank0
   711  0278  1303               	bcf	3,6	;RP1=0, select bank0
   712  0279  130C               	bcf	12,6	;volatile
   713  027A                     l1429:
   714                           
   715                           ;LAB1.c: 145:     PIE1bits.ADIE = 1;
   716  027A  1683               	bsf	3,5	;RP0=1, select bank1
   717  027B  1303               	bcf	3,6	;RP1=0, select bank1
   718  027C  170C               	bsf	12,6	;volatile
   719  027D                     l1431:
   720                           
   721                           ;LAB1.c: 146:     INTCONbits.PEIE = 1;
   722  027D  170B               	bsf	11,6	;volatile
   723  027E                     l93:
   724  027E  0008               	return
   725  027F                     __end_of_setup:
   726                           
   727                           	psect	text2
   728  027F                     __ptext2:	
   729 ;; *************** function _isr *****************
   730 ;; Defined at:
   731 ;;		line 63 in file "LAB1.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;		None
   734 ;; Auto vars:     Size  Location     Type
   735 ;;		None
   736 ;; Return value:  Size  Location     Type
   737 ;;                  1    wreg      void 
   738 ;; Registers used:
   739 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   745 ;;      Params:         0       0       0       0       0
   746 ;;      Locals:         0       0       0       0       0
   747 ;;      Temps:          0       6       0       0       0
   748 ;;      Totals:         0       6       0       0       0
   749 ;;Total ram usage:        6 bytes
   750 ;; Hardware stack levels used: 1
   751 ;; Hardware stack levels required when called: 2
   752 ;; This function calls:
   753 ;;		_displays
   754 ;;		_divisor
   755 ;;		_tmr0
   756 ;; This function is called by:
   757 ;;		Interrupt level 1
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761                           
   762                           ;psect for function _isr
   763  027F                     _isr:
   764  027F                     i1l1435:
   765                           
   766                           ;LAB1.c: 64:     if(PIR1bits.ADIF){
   767  027F  1F0C               	btfss	12,6	;volatile
   768  0280  2A82               	goto	u52_21
   769  0281  2A83               	goto	u52_20
   770  0282                     u52_21:
   771  0282  2AA1               	goto	i1l1447
   772  0283                     u52_20:
   773  0283                     i1l1437:
   774                           
   775                           ;LAB1.c: 65:         if(ADCON0bits.CHS == 1){
   776  0283  0C1F               	rrf	31,w	;volatile
   777  0284  00AF               	movwf	??_isr
   778  0285  0C2F               	rrf	??_isr,w
   779  0286  390F               	andlw	15
   780  0287  3A01               	xorlw	1
   781  0288  1D03               	skipz
   782  0289  2A8B               	goto	u53_21
   783  028A  2A8C               	goto	u53_20
   784  028B                     u53_21:
   785  028B  2A9C               	goto	i1l1443
   786  028C                     u53_20:
   787  028C                     i1l1439:
   788                           
   789                           ;LAB1.c: 66:             cont_vol = 2*ADRESH;
   790  028C  081E               	movf	30,w	;volatile
   791  028D  00AF               	movwf	??_isr
   792  028E  01B0               	clrf	??_isr+1
   793  028F  1003               	clrc
   794  0290  0DAF               	rlf	??_isr,f
   795  0291  0DB0               	rlf	??_isr+1,f
   796  0292  082F               	movf	??_isr,w
   797  0293  00AA               	movwf	_cont_vol
   798  0294  0830               	movf	??_isr+1,w
   799  0295  00AB               	movwf	_cont_vol+1
   800  0296                     i1l1441:
   801                           
   802                           ;LAB1.c: 67:             divisor();
   803  0296  120A  118A  21A0  120A  118A  	fcall	_divisor
   804                           
   805                           ;LAB1.c: 68:         }
   806  029B  2A9E               	goto	i1l1445
   807  029C                     i1l1443:
   808                           
   809                           ;LAB1.c: 70:             PORTB = ADRESH;
   810  029C  081E               	movf	30,w	;volatile
   811  029D  0086               	movwf	6	;volatile
   812  029E                     i1l1445:
   813                           
   814                           ;LAB1.c: 72:         PIR1bits.ADIF = 0;
   815  029E  1283               	bcf	3,5	;RP0=0, select bank0
   816  029F  1303               	bcf	3,6	;RP1=0, select bank0
   817  02A0  130C               	bcf	12,6	;volatile
   818  02A1                     i1l1447:
   819                           
   820                           ;LAB1.c: 74:     if(T0IF){
   821  02A1  1D0B               	btfss	11,2	;volatile
   822  02A2  2AA4               	goto	u54_21
   823  02A3  2AA5               	goto	u54_20
   824  02A4                     u54_21:
   825  02A4  2AAF               	goto	i1l79
   826  02A5                     u54_20:
   827  02A5                     i1l1449:
   828                           
   829                           ;LAB1.c: 75:         tmr0();
   830  02A5  120A  118A  22EE  120A  118A  	fcall	_tmr0
   831  02AA                     i1l1451:
   832                           
   833                           ;LAB1.c: 76:         displays();
   834  02AA  120A  118A  21F3  120A  118A  	fcall	_displays
   835  02AF                     i1l79:
   836  02AF  1283               	bcf	3,5	;RP0=0, select bank0
   837  02B0  1303               	bcf	3,6	;RP1=0, select bank0
   838  02B1  0834               	movf	??_isr+5,w
   839  02B2  00FF               	movwf	btemp+1
   840  02B3  0833               	movf	??_isr+4,w
   841  02B4  008A               	movwf	10
   842  02B5  0832               	movf	??_isr+3,w
   843  02B6  0084               	movwf	4
   844  02B7  0E31               	swapf	??_isr+2,w
   845  02B8  0083               	movwf	3
   846  02B9  0EFE               	swapf	btemp,f
   847  02BA  0E7E               	swapf	btemp,w
   848  02BB  0009               	retfie
   849  02BC                     __end_of_isr:
   850                           
   851                           	psect	intentry
   852  0004                     __pintentry:	
   853                           ;incstack = 0
   854                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   855                           
   856  0004                     interrupt_function:
   857  007E                     saved_w	set	btemp
   858  0004  00FE               	movwf	btemp
   859  0005  0E03               	swapf	3,w
   860  0006  1283               	bcf	3,5	;RP0=0, select bank0
   861  0007  1303               	bcf	3,6	;RP1=0, select bank0
   862  0008  00B1               	movwf	??_isr+2
   863  0009  0804               	movf	4,w
   864  000A  00B2               	movwf	??_isr+3
   865  000B  080A               	movf	10,w
   866  000C  00B3               	movwf	??_isr+4
   867  000D  087F               	movf	btemp+1,w
   868  000E  00B4               	movwf	??_isr+5
   869  000F  120A  118A  2A7F   	ljmp	_isr
   870                           
   871                           	psect	text3
   872  02EE                     __ptext3:	
   873 ;; *************** function _tmr0 *****************
   874 ;; Defined at:
   875 ;;		line 151 in file "LAB1.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;		None
   878 ;; Auto vars:     Size  Location     Type
   879 ;;		None
   880 ;; Return value:  Size  Location     Type
   881 ;;                  1    wreg      void 
   882 ;; Registers used:
   883 ;;		wreg
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   889 ;;      Params:         0       0       0       0       0
   890 ;;      Locals:         0       0       0       0       0
   891 ;;      Temps:          0       0       0       0       0
   892 ;;      Totals:         0       0       0       0       0
   893 ;;Total ram usage:        0 bytes
   894 ;; Hardware stack levels used: 1
   895 ;; This function calls:
   896 ;;		Nothing
   897 ;; This function is called by:
   898 ;;		_isr
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           
   903                           ;psect for function _tmr0
   904  02EE                     _tmr0:
   905  02EE                     i1l1357:	
   906                           ;incstack = 0
   907                           ; Regs used in _tmr0: [wreg]
   908                           
   909                           
   910                           ;LAB1.c: 152:     INTCONbits.T0IF = 0;
   911  02EE  110B               	bcf	11,2	;volatile
   912  02EF                     i1l1359:
   913                           
   914                           ;LAB1.c: 153:     TMR0 = 237;
   915  02EF  30ED               	movlw	237
   916  02F0  1283               	bcf	3,5	;RP0=0, select bank0
   917  02F1  1303               	bcf	3,6	;RP1=0, select bank0
   918  02F2  0081               	movwf	1	;volatile
   919  02F3                     i1l96:
   920  02F3  0008               	return
   921  02F4                     __end_of_tmr0:
   922                           
   923                           	psect	text4
   924  01A0                     __ptext4:	
   925 ;; *************** function _divisor *****************
   926 ;; Defined at:
   927 ;;		line 157 in file "LAB1.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;		None
   930 ;; Auto vars:     Size  Location     Type
   931 ;;  i               2   12[COMMON] int 
   932 ;; Return value:  Size  Location     Type
   933 ;;                  1    wreg      void 
   934 ;; Registers used:
   935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   941 ;;      Params:         0       0       0       0       0
   942 ;;      Locals:         2       0       0       0       0
   943 ;;      Temps:          3       0       0       0       0
   944 ;;      Totals:         5       0       0       0       0
   945 ;;Total ram usage:        5 bytes
   946 ;; Hardware stack levels used: 1
   947 ;; Hardware stack levels required when called: 1
   948 ;; This function calls:
   949 ;;		___awdiv
   950 ;;		___awmod
   951 ;; This function is called by:
   952 ;;		_isr
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           
   957                           ;psect for function _divisor
   958  01A0                     _divisor:
   959  01A0                     i1l1345:	
   960                           ;incstack = 0
   961                           ; Regs used in _divisor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   962                           
   963                           
   964                           ;LAB1.c: 158:     for(int i = 0; i<3 ; i++){
   965  01A0  01FC               	clrf	divisor@i
   966  01A1  01FD               	clrf	divisor@i+1
   967  01A2                     i1l1351:
   968                           
   969                           ;LAB1.c: 159:         dig[i] = cont_vol % 10;
   970  01A2  300A               	movlw	10
   971  01A3  00F0               	movwf	___awmod@divisor
   972  01A4  3000               	movlw	0
   973  01A5  00F1               	movwf	___awmod@divisor+1
   974  01A6  1283               	bcf	3,5	;RP0=0, select bank0
   975  01A7  1303               	bcf	3,6	;RP1=0, select bank0
   976  01A8  082B               	movf	_cont_vol+1,w
   977  01A9  00F3               	movwf	___awmod@dividend+1
   978  01AA  082A               	movf	_cont_vol,w
   979  01AB  00F2               	movwf	___awmod@dividend
   980  01AC  120A  118A  2095  120A  118A  	fcall	___awmod
   981  01B1  087C               	movf	divisor@i,w
   982  01B2  00F9               	movwf	??_divisor
   983  01B3  0779               	addwf	??_divisor,w
   984  01B4  3E20               	addlw	(low (_dig| 0))& (0+255)
   985  01B5  0084               	movwf	4
   986  01B6  0870               	movf	?___awmod,w
   987  01B7  1383               	bcf	3,7	;select IRP bank0
   988  01B8  0080               	movwf	0
   989  01B9  0A84               	incf	4,f
   990  01BA  0871               	movf	?___awmod+1,w
   991  01BB  0080               	movwf	0
   992                           
   993                           ;LAB1.c: 160:         cont_vol = (cont_vol - dig[i])/10;
   994  01BC  300A               	movlw	10
   995  01BD  00F0               	movwf	___awdiv@divisor
   996  01BE  3000               	movlw	0
   997  01BF  00F1               	movwf	___awdiv@divisor+1
   998  01C0  087C               	movf	divisor@i,w
   999  01C1  00F9               	movwf	??_divisor
  1000  01C2  0779               	addwf	??_divisor,w
  1001  01C3  3E20               	addlw	(low (_dig| 0))& (0+255)
  1002  01C4  0084               	movwf	4
  1003  01C5  0800               	movf	0,w
  1004  01C6  00FA               	movwf	??_divisor+1
  1005  01C7  0A84               	incf	4,f
  1006  01C8  0800               	movf	0,w
  1007  01C9  00FB               	movwf	??_divisor+2
  1008  01CA  087A               	movf	??_divisor+1,w
  1009  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  1010  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  1011  01CD  022A               	subwf	_cont_vol,w
  1012  01CE  00F2               	movwf	___awdiv@dividend
  1013  01CF  087B               	movf	??_divisor+2,w
  1014  01D0  1C03               	skipc
  1015  01D1  0A7B               	incf	??_divisor+2,w
  1016  01D2  022B               	subwf	_cont_vol+1,w
  1017  01D3  00F3               	movwf	___awdiv@dividend+1
  1018  01D4  120A  118A  202E  120A  118A  	fcall	___awdiv
  1019  01D9  0871               	movf	?___awdiv+1,w
  1020  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  1021  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  1022  01DC  00AB               	movwf	_cont_vol+1
  1023  01DD  0870               	movf	?___awdiv,w
  1024  01DE  00AA               	movwf	_cont_vol
  1025  01DF                     i1l1353:
  1026                           
  1027                           ;LAB1.c: 161:     }
  1028  01DF  3001               	movlw	1
  1029  01E0  07FC               	addwf	divisor@i,f
  1030  01E1  1803               	skipnc
  1031  01E2  0AFD               	incf	divisor@i+1,f
  1032  01E3  3000               	movlw	0
  1033  01E4  07FD               	addwf	divisor@i+1,f
  1034  01E5                     i1l1355:
  1035  01E5  087D               	movf	divisor@i+1,w
  1036  01E6  3A80               	xorlw	128
  1037  01E7  00FF               	movwf	btemp+1
  1038  01E8  3080               	movlw	128
  1039  01E9  027F               	subwf	btemp+1,w
  1040  01EA  1D03               	skipz
  1041  01EB  29EE               	goto	u48_25
  1042  01EC  3003               	movlw	3
  1043  01ED  027C               	subwf	divisor@i,w
  1044  01EE                     u48_25:
  1045  01EE  1C03               	skipc
  1046  01EF  29F1               	goto	u48_21
  1047  01F0  29F2               	goto	u48_20
  1048  01F1                     u48_21:
  1049  01F1  29A2               	goto	i1l1351
  1050  01F2                     u48_20:
  1051  01F2                     i1l101:
  1052  01F2  0008               	return
  1053  01F3                     __end_of_divisor:
  1054                           
  1055                           	psect	text5
  1056  0095                     __ptext5:	
  1057 ;; *************** function ___awmod *****************
  1058 ;; Defined at:
  1059 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  1060 ;; Parameters:    Size  Location     Type
  1061 ;;  divisor         2    0[COMMON] int 
  1062 ;;  dividend        2    2[COMMON] int 
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;  sign            1    6[COMMON] unsigned char 
  1065 ;;  counter         1    5[COMMON] unsigned char 
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  2    0[COMMON] int 
  1068 ;; Registers used:
  1069 ;;		wreg, status,2, status,0
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1075 ;;      Params:         4       0       0       0       0
  1076 ;;      Locals:         2       0       0       0       0
  1077 ;;      Temps:          1       0       0       0       0
  1078 ;;      Totals:         7       0       0       0       0
  1079 ;;Total ram usage:        7 bytes
  1080 ;; Hardware stack levels used: 1
  1081 ;; This function calls:
  1082 ;;		Nothing
  1083 ;; This function is called by:
  1084 ;;		_divisor
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           
  1089                           ;psect for function ___awmod
  1090  0095                     ___awmod:
  1091  0095                     i1l1307:	
  1092                           ;incstack = 0
  1093                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1094                           
  1095  0095  01F6               	clrf	___awmod@sign
  1096  0096                     i1l1309:
  1097  0096  1FF3               	btfss	___awmod@dividend+1,7
  1098  0097  2899               	goto	u39_21
  1099  0098  289A               	goto	u39_20
  1100  0099                     u39_21:
  1101  0099  28A1               	goto	i1l1315
  1102  009A                     u39_20:
  1103  009A                     i1l1311:
  1104  009A  09F2               	comf	___awmod@dividend,f
  1105  009B  09F3               	comf	___awmod@dividend+1,f
  1106  009C  0AF2               	incf	___awmod@dividend,f
  1107  009D  1903               	skipnz
  1108  009E  0AF3               	incf	___awmod@dividend+1,f
  1109  009F                     i1l1313:
  1110  009F  01F6               	clrf	___awmod@sign
  1111  00A0  0AF6               	incf	___awmod@sign,f
  1112  00A1                     i1l1315:
  1113  00A1  1FF1               	btfss	___awmod@divisor+1,7
  1114  00A2  28A4               	goto	u40_21
  1115  00A3  28A5               	goto	u40_20
  1116  00A4                     u40_21:
  1117  00A4  28AA               	goto	i1l1319
  1118  00A5                     u40_20:
  1119  00A5                     i1l1317:
  1120  00A5  09F0               	comf	___awmod@divisor,f
  1121  00A6  09F1               	comf	___awmod@divisor+1,f
  1122  00A7  0AF0               	incf	___awmod@divisor,f
  1123  00A8  1903               	skipnz
  1124  00A9  0AF1               	incf	___awmod@divisor+1,f
  1125  00AA                     i1l1319:
  1126  00AA  0870               	movf	___awmod@divisor,w
  1127  00AB  0471               	iorwf	___awmod@divisor+1,w
  1128  00AC  1903               	btfsc	3,2
  1129  00AD  28AF               	goto	u41_21
  1130  00AE  28B0               	goto	u41_20
  1131  00AF                     u41_21:
  1132  00AF  28DF               	goto	i1l1337
  1133  00B0                     u41_20:
  1134  00B0                     i1l1321:
  1135  00B0  01F5               	clrf	___awmod@counter
  1136  00B1  0AF5               	incf	___awmod@counter,f
  1137  00B2  28BE               	goto	i1l1327
  1138  00B3                     i1l1323:
  1139  00B3  3001               	movlw	1
  1140  00B4                     u42_25:
  1141  00B4  1003               	clrc
  1142  00B5  0DF0               	rlf	___awmod@divisor,f
  1143  00B6  0DF1               	rlf	___awmod@divisor+1,f
  1144  00B7  3EFF               	addlw	-1
  1145  00B8  1D03               	skipz
  1146  00B9  28B4               	goto	u42_25
  1147  00BA                     i1l1325:
  1148  00BA  3001               	movlw	1
  1149  00BB  00F4               	movwf	??___awmod
  1150  00BC  0874               	movf	??___awmod,w
  1151  00BD  07F5               	addwf	___awmod@counter,f
  1152  00BE                     i1l1327:
  1153  00BE  1FF1               	btfss	___awmod@divisor+1,7
  1154  00BF  28C1               	goto	u43_21
  1155  00C0  28C2               	goto	u43_20
  1156  00C1                     u43_21:
  1157  00C1  28B3               	goto	i1l1323
  1158  00C2                     u43_20:
  1159  00C2                     i1l1329:
  1160  00C2  0871               	movf	___awmod@divisor+1,w
  1161  00C3  0273               	subwf	___awmod@dividend+1,w
  1162  00C4  1D03               	skipz
  1163  00C5  28C8               	goto	u44_25
  1164  00C6  0870               	movf	___awmod@divisor,w
  1165  00C7  0272               	subwf	___awmod@dividend,w
  1166  00C8                     u44_25:
  1167  00C8  1C03               	skipc
  1168  00C9  28CB               	goto	u44_21
  1169  00CA  28CC               	goto	u44_20
  1170  00CB                     u44_21:
  1171  00CB  28D2               	goto	i1l1333
  1172  00CC                     u44_20:
  1173  00CC                     i1l1331:
  1174  00CC  0870               	movf	___awmod@divisor,w
  1175  00CD  02F2               	subwf	___awmod@dividend,f
  1176  00CE  0871               	movf	___awmod@divisor+1,w
  1177  00CF  1C03               	skipc
  1178  00D0  03F3               	decf	___awmod@dividend+1,f
  1179  00D1  02F3               	subwf	___awmod@dividend+1,f
  1180  00D2                     i1l1333:
  1181  00D2  3001               	movlw	1
  1182  00D3                     u45_25:
  1183  00D3  1003               	clrc
  1184  00D4  0CF1               	rrf	___awmod@divisor+1,f
  1185  00D5  0CF0               	rrf	___awmod@divisor,f
  1186  00D6  3EFF               	addlw	-1
  1187  00D7  1D03               	skipz
  1188  00D8  28D3               	goto	u45_25
  1189  00D9                     i1l1335:
  1190  00D9  3001               	movlw	1
  1191  00DA  02F5               	subwf	___awmod@counter,f
  1192  00DB  1D03               	btfss	3,2
  1193  00DC  28DE               	goto	u46_21
  1194  00DD  28DF               	goto	u46_20
  1195  00DE                     u46_21:
  1196  00DE  28C2               	goto	i1l1329
  1197  00DF                     u46_20:
  1198  00DF                     i1l1337:
  1199  00DF  0876               	movf	___awmod@sign,w
  1200  00E0  1903               	btfsc	3,2
  1201  00E1  28E3               	goto	u47_21
  1202  00E2  28E4               	goto	u47_20
  1203  00E3                     u47_21:
  1204  00E3  28E9               	goto	i1l1341
  1205  00E4                     u47_20:
  1206  00E4                     i1l1339:
  1207  00E4  09F2               	comf	___awmod@dividend,f
  1208  00E5  09F3               	comf	___awmod@dividend+1,f
  1209  00E6  0AF2               	incf	___awmod@dividend,f
  1210  00E7  1903               	skipnz
  1211  00E8  0AF3               	incf	___awmod@dividend+1,f
  1212  00E9                     i1l1341:
  1213  00E9  0873               	movf	___awmod@dividend+1,w
  1214  00EA  00F1               	movwf	?___awmod+1
  1215  00EB  0872               	movf	___awmod@dividend,w
  1216  00EC  00F0               	movwf	?___awmod
  1217  00ED                     i1l393:
  1218  00ED  0008               	return
  1219  00EE                     __end_of___awmod:
  1220                           
  1221                           	psect	text6
  1222  002E                     __ptext6:	
  1223 ;; *************** function ___awdiv *****************
  1224 ;; Defined at:
  1225 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;  divisor         2    0[COMMON] int 
  1228 ;;  dividend        2    2[COMMON] int 
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;  quotient        2    7[COMMON] int 
  1231 ;;  sign            1    6[COMMON] unsigned char 
  1232 ;;  counter         1    5[COMMON] unsigned char 
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  2    0[COMMON] int 
  1235 ;; Registers used:
  1236 ;;		wreg, status,2, status,0
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1242 ;;      Params:         4       0       0       0       0
  1243 ;;      Locals:         4       0       0       0       0
  1244 ;;      Temps:          1       0       0       0       0
  1245 ;;      Totals:         9       0       0       0       0
  1246 ;;Total ram usage:        9 bytes
  1247 ;; Hardware stack levels used: 1
  1248 ;; This function calls:
  1249 ;;		Nothing
  1250 ;; This function is called by:
  1251 ;;		_divisor
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           
  1256                           ;psect for function ___awdiv
  1257  002E                     ___awdiv:
  1258  002E                     i1l1263:	
  1259                           ;incstack = 0
  1260                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1261                           
  1262  002E  01F6               	clrf	___awdiv@sign
  1263  002F                     i1l1265:
  1264  002F  1FF1               	btfss	___awdiv@divisor+1,7
  1265  0030  2832               	goto	u29_21
  1266  0031  2833               	goto	u29_20
  1267  0032                     u29_21:
  1268  0032  283A               	goto	i1l1271
  1269  0033                     u29_20:
  1270  0033                     i1l1267:
  1271  0033  09F0               	comf	___awdiv@divisor,f
  1272  0034  09F1               	comf	___awdiv@divisor+1,f
  1273  0035  0AF0               	incf	___awdiv@divisor,f
  1274  0036  1903               	skipnz
  1275  0037  0AF1               	incf	___awdiv@divisor+1,f
  1276  0038                     i1l1269:
  1277  0038  01F6               	clrf	___awdiv@sign
  1278  0039  0AF6               	incf	___awdiv@sign,f
  1279  003A                     i1l1271:
  1280  003A  1FF3               	btfss	___awdiv@dividend+1,7
  1281  003B  283D               	goto	u30_21
  1282  003C  283E               	goto	u30_20
  1283  003D                     u30_21:
  1284  003D  2847               	goto	i1l1277
  1285  003E                     u30_20:
  1286  003E                     i1l1273:
  1287  003E  09F2               	comf	___awdiv@dividend,f
  1288  003F  09F3               	comf	___awdiv@dividend+1,f
  1289  0040  0AF2               	incf	___awdiv@dividend,f
  1290  0041  1903               	skipnz
  1291  0042  0AF3               	incf	___awdiv@dividend+1,f
  1292  0043                     i1l1275:
  1293  0043  3001               	movlw	1
  1294  0044  00F4               	movwf	??___awdiv
  1295  0045  0874               	movf	??___awdiv,w
  1296  0046  06F6               	xorwf	___awdiv@sign,f
  1297  0047                     i1l1277:
  1298  0047  01F7               	clrf	___awdiv@quotient
  1299  0048  01F8               	clrf	___awdiv@quotient+1
  1300  0049                     i1l1279:
  1301  0049  0870               	movf	___awdiv@divisor,w
  1302  004A  0471               	iorwf	___awdiv@divisor+1,w
  1303  004B  1903               	btfsc	3,2
  1304  004C  284E               	goto	u31_21
  1305  004D  284F               	goto	u31_20
  1306  004E                     u31_21:
  1307  004E  2886               	goto	i1l1299
  1308  004F                     u31_20:
  1309  004F                     i1l1281:
  1310  004F  01F5               	clrf	___awdiv@counter
  1311  0050  0AF5               	incf	___awdiv@counter,f
  1312  0051  285D               	goto	i1l1287
  1313  0052                     i1l1283:
  1314  0052  3001               	movlw	1
  1315  0053                     u32_25:
  1316  0053  1003               	clrc
  1317  0054  0DF0               	rlf	___awdiv@divisor,f
  1318  0055  0DF1               	rlf	___awdiv@divisor+1,f
  1319  0056  3EFF               	addlw	-1
  1320  0057  1D03               	skipz
  1321  0058  2853               	goto	u32_25
  1322  0059                     i1l1285:
  1323  0059  3001               	movlw	1
  1324  005A  00F4               	movwf	??___awdiv
  1325  005B  0874               	movf	??___awdiv,w
  1326  005C  07F5               	addwf	___awdiv@counter,f
  1327  005D                     i1l1287:
  1328  005D  1FF1               	btfss	___awdiv@divisor+1,7
  1329  005E  2860               	goto	u33_21
  1330  005F  2861               	goto	u33_20
  1331  0060                     u33_21:
  1332  0060  2852               	goto	i1l1283
  1333  0061                     u33_20:
  1334  0061                     i1l1289:
  1335  0061  3001               	movlw	1
  1336  0062                     u34_25:
  1337  0062  1003               	clrc
  1338  0063  0DF7               	rlf	___awdiv@quotient,f
  1339  0064  0DF8               	rlf	___awdiv@quotient+1,f
  1340  0065  3EFF               	addlw	-1
  1341  0066  1D03               	skipz
  1342  0067  2862               	goto	u34_25
  1343  0068  0871               	movf	___awdiv@divisor+1,w
  1344  0069  0273               	subwf	___awdiv@dividend+1,w
  1345  006A  1D03               	skipz
  1346  006B  286E               	goto	u35_25
  1347  006C  0870               	movf	___awdiv@divisor,w
  1348  006D  0272               	subwf	___awdiv@dividend,w
  1349  006E                     u35_25:
  1350  006E  1C03               	skipc
  1351  006F  2871               	goto	u35_21
  1352  0070  2872               	goto	u35_20
  1353  0071                     u35_21:
  1354  0071  2879               	goto	i1l1295
  1355  0072                     u35_20:
  1356  0072                     i1l1291:
  1357  0072  0870               	movf	___awdiv@divisor,w
  1358  0073  02F2               	subwf	___awdiv@dividend,f
  1359  0074  0871               	movf	___awdiv@divisor+1,w
  1360  0075  1C03               	skipc
  1361  0076  03F3               	decf	___awdiv@dividend+1,f
  1362  0077  02F3               	subwf	___awdiv@dividend+1,f
  1363  0078                     i1l1293:
  1364  0078  1477               	bsf	___awdiv@quotient,0
  1365  0079                     i1l1295:
  1366  0079  3001               	movlw	1
  1367  007A                     u36_25:
  1368  007A  1003               	clrc
  1369  007B  0CF1               	rrf	___awdiv@divisor+1,f
  1370  007C  0CF0               	rrf	___awdiv@divisor,f
  1371  007D  3EFF               	addlw	-1
  1372  007E  1D03               	skipz
  1373  007F  287A               	goto	u36_25
  1374  0080                     i1l1297:
  1375  0080  3001               	movlw	1
  1376  0081  02F5               	subwf	___awdiv@counter,f
  1377  0082  1D03               	btfss	3,2
  1378  0083  2885               	goto	u37_21
  1379  0084  2886               	goto	u37_20
  1380  0085                     u37_21:
  1381  0085  2861               	goto	i1l1289
  1382  0086                     u37_20:
  1383  0086                     i1l1299:
  1384  0086  0876               	movf	___awdiv@sign,w
  1385  0087  1903               	btfsc	3,2
  1386  0088  288A               	goto	u38_21
  1387  0089  288B               	goto	u38_20
  1388  008A                     u38_21:
  1389  008A  2890               	goto	i1l1303
  1390  008B                     u38_20:
  1391  008B                     i1l1301:
  1392  008B  09F7               	comf	___awdiv@quotient,f
  1393  008C  09F8               	comf	___awdiv@quotient+1,f
  1394  008D  0AF7               	incf	___awdiv@quotient,f
  1395  008E  1903               	skipnz
  1396  008F  0AF8               	incf	___awdiv@quotient+1,f
  1397  0090                     i1l1303:
  1398  0090  0878               	movf	___awdiv@quotient+1,w
  1399  0091  00F1               	movwf	?___awdiv+1
  1400  0092  0877               	movf	___awdiv@quotient,w
  1401  0093  00F0               	movwf	?___awdiv
  1402  0094                     i1l380:
  1403  0094  0008               	return
  1404  0095                     __end_of___awdiv:
  1405                           
  1406                           	psect	text7
  1407  01F3                     __ptext7:	
  1408 ;; *************** function _displays *****************
  1409 ;; Defined at:
  1410 ;;		line 164 in file "LAB1.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;		None
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;		None
  1415 ;; Return value:  Size  Location     Type
  1416 ;;                  1    wreg      void 
  1417 ;; Registers used:
  1418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1424 ;;      Params:         0       0       0       0       0
  1425 ;;      Locals:         0       0       0       0       0
  1426 ;;      Temps:          1       0       0       0       0
  1427 ;;      Totals:         1       0       0       0       0
  1428 ;;Total ram usage:        1 bytes
  1429 ;; Hardware stack levels used: 1
  1430 ;; Hardware stack levels required when called: 1
  1431 ;; This function calls:
  1432 ;;		_tabla
  1433 ;;		_tabla_p
  1434 ;; This function is called by:
  1435 ;;		_isr
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           
  1440                           ;psect for function _displays
  1441  01F3                     _displays:
  1442  01F3                     i1l1363:	
  1443                           ;incstack = 0
  1444                           ; Regs used in _displays: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1445                           
  1446                           
  1447                           ;LAB1.c: 165:     PORTD = disp_selector;
  1448  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1449  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  1450  01F5  0837               	movf	_disp_selector,w
  1451  01F6  0088               	movwf	8	;volatile
  1452  01F7                     i1l1365:
  1453                           
  1454                           ;LAB1.c: 166:     if(disp_selector == 0b001){
  1455  01F7  0337               	decf	_disp_selector,w
  1456  01F8  1D03               	btfss	3,2
  1457  01F9  29FB               	goto	u49_21
  1458  01FA  29FC               	goto	u49_20
  1459  01FB                     u49_21:
  1460  01FB  2A0E               	goto	i1l1371
  1461  01FC                     u49_20:
  1462  01FC                     i1l1367:
  1463                           
  1464                           ;LAB1.c: 167:         PORTC = tabla(dig[0]);
  1465  01FC  0821               	movf	_dig+1,w
  1466  01FD  00F1               	movwf	tabla@a+1
  1467  01FE  0820               	movf	_dig,w
  1468  01FF  00F0               	movwf	tabla@a
  1469  0200  120A  118A  2147  120A  118A  	fcall	_tabla
  1470  0205  0870               	movf	?_tabla,w
  1471  0206  1283               	bcf	3,5	;RP0=0, select bank0
  1472  0207  1303               	bcf	3,6	;RP1=0, select bank0
  1473  0208  0087               	movwf	7	;volatile
  1474  0209                     i1l1369:
  1475                           
  1476                           ;LAB1.c: 168:         disp_selector = 0b010;
  1477  0209  3002               	movlw	2
  1478  020A  00F2               	movwf	??_displays
  1479  020B  0872               	movf	??_displays,w
  1480  020C  00B7               	movwf	_disp_selector
  1481                           
  1482                           ;LAB1.c: 169:     }
  1483  020D  2A3B               	goto	i1l109
  1484  020E                     i1l1371:
  1485  020E  3002               	movlw	2
  1486  020F  0637               	xorwf	_disp_selector,w
  1487  0210  1D03               	btfss	3,2
  1488  0211  2A13               	goto	u50_21
  1489  0212  2A14               	goto	u50_20
  1490  0213                     u50_21:
  1491  0213  2A26               	goto	i1l1377
  1492  0214                     u50_20:
  1493  0214                     i1l1373:
  1494                           
  1495                           ;LAB1.c: 171:         PORTC = tabla(dig[1]);
  1496  0214  0823               	movf	_dig+3,w
  1497  0215  00F1               	movwf	tabla@a+1
  1498  0216  0822               	movf	_dig+2,w
  1499  0217  00F0               	movwf	tabla@a
  1500  0218  120A  118A  2147  120A  118A  	fcall	_tabla
  1501  021D  0870               	movf	?_tabla,w
  1502  021E  1283               	bcf	3,5	;RP0=0, select bank0
  1503  021F  1303               	bcf	3,6	;RP1=0, select bank0
  1504  0220  0087               	movwf	7	;volatile
  1505  0221                     i1l1375:
  1506                           
  1507                           ;LAB1.c: 172:         disp_selector = 0b100;
  1508  0221  3004               	movlw	4
  1509  0222  00F2               	movwf	??_displays
  1510  0223  0872               	movf	??_displays,w
  1511  0224  00B7               	movwf	_disp_selector
  1512                           
  1513                           ;LAB1.c: 173:     }
  1514  0225  2A3B               	goto	i1l109
  1515  0226                     i1l1377:
  1516  0226  3004               	movlw	4
  1517  0227  0637               	xorwf	_disp_selector,w
  1518  0228  1D03               	btfss	3,2
  1519  0229  2A2B               	goto	u51_21
  1520  022A  2A2C               	goto	u51_20
  1521  022B                     u51_21:
  1522  022B  2A3B               	goto	i1l109
  1523  022C                     u51_20:
  1524  022C                     i1l1379:
  1525                           
  1526                           ;LAB1.c: 175:         PORTC = tabla_p(dig[2]);
  1527  022C  0825               	movf	_dig+5,w
  1528  022D  00F1               	movwf	tabla_p@a+1
  1529  022E  0824               	movf	_dig+4,w
  1530  022F  00F0               	movwf	tabla_p@a
  1531  0230  120A  118A  20EE  120A  118A  	fcall	_tabla_p
  1532  0235  0870               	movf	?_tabla_p,w
  1533  0236  1283               	bcf	3,5	;RP0=0, select bank0
  1534  0237  1303               	bcf	3,6	;RP1=0, select bank0
  1535  0238  0087               	movwf	7	;volatile
  1536  0239                     i1l1381:
  1537                           
  1538                           ;LAB1.c: 176:         disp_selector = 0b001;
  1539  0239  01B7               	clrf	_disp_selector
  1540  023A  0AB7               	incf	_disp_selector,f
  1541  023B                     i1l109:
  1542  023B  0008               	return
  1543  023C                     __end_of_displays:
  1544                           
  1545                           	psect	text8
  1546  00EE                     __ptext8:	
  1547 ;; *************** function _tabla_p *****************
  1548 ;; Defined at:
  1549 ;;		line 218 in file "LAB1.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;  a               2    0[COMMON] int 
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;		None
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  2    0[COMMON] int 
  1556 ;; Registers used:
  1557 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1563 ;;      Params:         2       0       0       0       0
  1564 ;;      Locals:         0       0       0       0       0
  1565 ;;      Temps:          0       0       0       0       0
  1566 ;;      Totals:         2       0       0       0       0
  1567 ;;Total ram usage:        2 bytes
  1568 ;; Hardware stack levels used: 1
  1569 ;; This function calls:
  1570 ;;		Nothing
  1571 ;; This function is called by:
  1572 ;;		_displays
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           
  1577                           ;psect for function _tabla_p
  1578  00EE                     _tabla_p:
  1579  00EE                     i1l1193:	
  1580                           ;incstack = 0
  1581                           ; Regs used in _tabla_p: [wreg-fsr0h+status,2+status,0]
  1582                           
  1583                           
  1584                           ;LAB1.c: 219:     switch (a){
  1585  00EE  2921               	goto	i1l1257
  1586  00EF                     i1l1195:
  1587                           
  1588                           ;LAB1.c: 221:             return 0b10111111;
  1589  00EF  30BF               	movlw	191
  1590  00F0  00F0               	movwf	?_tabla_p
  1591  00F1  3000               	movlw	0
  1592  00F2  00F1               	movwf	?_tabla_p+1
  1593  00F3  2946               	goto	i1l130
  1594  00F4                     i1l1201:
  1595                           
  1596                           ;LAB1.c: 224:             return 0b10000110;
  1597  00F4  3086               	movlw	134
  1598  00F5  00F0               	movwf	?_tabla_p
  1599  00F6  3000               	movlw	0
  1600  00F7  00F1               	movwf	?_tabla_p+1
  1601  00F8  2946               	goto	i1l130
  1602  00F9                     i1l1207:
  1603                           
  1604                           ;LAB1.c: 227:             return 0b11011011;
  1605  00F9  30DB               	movlw	219
  1606  00FA  00F0               	movwf	?_tabla_p
  1607  00FB  3000               	movlw	0
  1608  00FC  00F1               	movwf	?_tabla_p+1
  1609  00FD  2946               	goto	i1l130
  1610  00FE                     i1l1213:
  1611                           
  1612                           ;LAB1.c: 230:             return 0b11001111;
  1613  00FE  30CF               	movlw	207
  1614  00FF  00F0               	movwf	?_tabla_p
  1615  0100  3000               	movlw	0
  1616  0101  00F1               	movwf	?_tabla_p+1
  1617  0102  2946               	goto	i1l130
  1618  0103                     i1l1219:
  1619                           
  1620                           ;LAB1.c: 233:             return 0b11100110;
  1621  0103  30E6               	movlw	230
  1622  0104  00F0               	movwf	?_tabla_p
  1623  0105  3000               	movlw	0
  1624  0106  00F1               	movwf	?_tabla_p+1
  1625  0107  2946               	goto	i1l130
  1626  0108                     i1l1225:
  1627                           
  1628                           ;LAB1.c: 236:             return 0b11101101;
  1629  0108  30ED               	movlw	237
  1630  0109  00F0               	movwf	?_tabla_p
  1631  010A  3000               	movlw	0
  1632  010B  00F1               	movwf	?_tabla_p+1
  1633  010C  2946               	goto	i1l130
  1634  010D                     i1l1231:
  1635                           
  1636                           ;LAB1.c: 239:             return 0b11111101;
  1637  010D  30FD               	movlw	253
  1638  010E  00F0               	movwf	?_tabla_p
  1639  010F  3000               	movlw	0
  1640  0110  00F1               	movwf	?_tabla_p+1
  1641  0111  2946               	goto	i1l130
  1642  0112                     i1l1237:
  1643                           
  1644                           ;LAB1.c: 242:             return 0b10000111;
  1645  0112  3087               	movlw	135
  1646  0113  00F0               	movwf	?_tabla_p
  1647  0114  3000               	movlw	0
  1648  0115  00F1               	movwf	?_tabla_p+1
  1649  0116  2946               	goto	i1l130
  1650  0117                     i1l1243:
  1651                           
  1652                           ;LAB1.c: 245:             return 0b11111111;
  1653  0117  30FF               	movlw	255
  1654  0118  00F0               	movwf	?_tabla_p
  1655  0119  3000               	movlw	0
  1656  011A  00F1               	movwf	?_tabla_p+1
  1657  011B  2946               	goto	i1l130
  1658  011C                     i1l1249:
  1659                           
  1660                           ;LAB1.c: 248:             return 0b11101111;
  1661  011C  30EF               	movlw	239
  1662  011D  00F0               	movwf	?_tabla_p
  1663  011E  3000               	movlw	0
  1664  011F  00F1               	movwf	?_tabla_p+1
  1665  0120  2946               	goto	i1l130
  1666  0121                     i1l1257:
  1667                           
  1668                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1669                           ; Switch size 1, requested type "simple"
  1670                           ; Number of cases is 1, Range of values is 0 to 0
  1671                           ; switch strategies available:
  1672                           ; Name         Instructions Cycles
  1673                           ; simple_byte            4     3 (average)
  1674                           ; direct_byte           11     8 (fixed)
  1675                           ; jumptable            260     6 (fixed)
  1676                           ;	Chosen strategy is simple_byte
  1677  0121  0871               	movf	tabla_p@a+1,w
  1678  0122  3A00               	xorlw	0	; case 0
  1679  0123  1903               	skipnz
  1680  0124  2926               	goto	i1l1513
  1681  0125  2946               	goto	i1l130
  1682  0126                     i1l1513:
  1683                           
  1684                           ; Switch size 1, requested type "simple"
  1685                           ; Number of cases is 10, Range of values is 0 to 9
  1686                           ; switch strategies available:
  1687                           ; Name         Instructions Cycles
  1688                           ; simple_byte           31    16 (average)
  1689                           ; direct_byte           38     8 (fixed)
  1690                           ; jumptable            260     6 (fixed)
  1691                           ;	Chosen strategy is simple_byte
  1692  0126  0870               	movf	tabla_p@a,w
  1693  0127  3A00               	xorlw	0	; case 0
  1694  0128  1903               	skipnz
  1695  0129  28EF               	goto	i1l1195
  1696  012A  3A01               	xorlw	1	; case 1
  1697  012B  1903               	skipnz
  1698  012C  28F4               	goto	i1l1201
  1699  012D  3A03               	xorlw	3	; case 2
  1700  012E  1903               	skipnz
  1701  012F  28F9               	goto	i1l1207
  1702  0130  3A01               	xorlw	1	; case 3
  1703  0131  1903               	skipnz
  1704  0132  28FE               	goto	i1l1213
  1705  0133  3A07               	xorlw	7	; case 4
  1706  0134  1903               	skipnz
  1707  0135  2903               	goto	i1l1219
  1708  0136  3A01               	xorlw	1	; case 5
  1709  0137  1903               	skipnz
  1710  0138  2908               	goto	i1l1225
  1711  0139  3A03               	xorlw	3	; case 6
  1712  013A  1903               	skipnz
  1713  013B  290D               	goto	i1l1231
  1714  013C  3A01               	xorlw	1	; case 7
  1715  013D  1903               	skipnz
  1716  013E  2912               	goto	i1l1237
  1717  013F  3A0F               	xorlw	15	; case 8
  1718  0140  1903               	skipnz
  1719  0141  2917               	goto	i1l1243
  1720  0142  3A01               	xorlw	1	; case 9
  1721  0143  1903               	skipnz
  1722  0144  291C               	goto	i1l1249
  1723  0145  2946               	goto	i1l130
  1724  0146                     i1l130:
  1725  0146  0008               	return
  1726  0147                     __end_of_tabla_p:
  1727                           
  1728                           	psect	text9
  1729  0147                     __ptext9:	
  1730 ;; *************** function _tabla *****************
  1731 ;; Defined at:
  1732 ;;		line 180 in file "LAB1.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  a               2    0[COMMON] int 
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;		None
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  2    0[COMMON] int 
  1739 ;; Registers used:
  1740 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1746 ;;      Params:         2       0       0       0       0
  1747 ;;      Locals:         0       0       0       0       0
  1748 ;;      Temps:          0       0       0       0       0
  1749 ;;      Totals:         2       0       0       0       0
  1750 ;;Total ram usage:        2 bytes
  1751 ;; Hardware stack levels used: 1
  1752 ;; This function calls:
  1753 ;;		Nothing
  1754 ;; This function is called by:
  1755 ;;		_displays
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           
  1760                           ;psect for function _tabla
  1761  0147                     _tabla:
  1762  0147                     i1l1123:	
  1763                           ;incstack = 0
  1764                           ; Regs used in _tabla: [wreg-fsr0h+status,2+status,0]
  1765                           
  1766                           
  1767                           ;LAB1.c: 181:     switch (a){
  1768  0147  297A               	goto	i1l1187
  1769  0148                     i1l1125:
  1770                           
  1771                           ;LAB1.c: 183:             return 0b00111111;
  1772  0148  303F               	movlw	63
  1773  0149  00F0               	movwf	?_tabla
  1774  014A  3000               	movlw	0
  1775  014B  00F1               	movwf	?_tabla+1
  1776  014C  299F               	goto	i1l114
  1777  014D                     i1l1131:
  1778                           
  1779                           ;LAB1.c: 186:             return 0b00000110;
  1780  014D  3006               	movlw	6
  1781  014E  00F0               	movwf	?_tabla
  1782  014F  3000               	movlw	0
  1783  0150  00F1               	movwf	?_tabla+1
  1784  0151  299F               	goto	i1l114
  1785  0152                     i1l1137:
  1786                           
  1787                           ;LAB1.c: 189:             return 0b01011011;
  1788  0152  305B               	movlw	91
  1789  0153  00F0               	movwf	?_tabla
  1790  0154  3000               	movlw	0
  1791  0155  00F1               	movwf	?_tabla+1
  1792  0156  299F               	goto	i1l114
  1793  0157                     i1l1143:
  1794                           
  1795                           ;LAB1.c: 192:             return 0b01001111;
  1796  0157  304F               	movlw	79
  1797  0158  00F0               	movwf	?_tabla
  1798  0159  3000               	movlw	0
  1799  015A  00F1               	movwf	?_tabla+1
  1800  015B  299F               	goto	i1l114
  1801  015C                     i1l1149:
  1802                           
  1803                           ;LAB1.c: 195:             return 0b01100110;
  1804  015C  3066               	movlw	102
  1805  015D  00F0               	movwf	?_tabla
  1806  015E  3000               	movlw	0
  1807  015F  00F1               	movwf	?_tabla+1
  1808  0160  299F               	goto	i1l114
  1809  0161                     i1l1155:
  1810                           
  1811                           ;LAB1.c: 198:             return 0b01101101;
  1812  0161  306D               	movlw	109
  1813  0162  00F0               	movwf	?_tabla
  1814  0163  3000               	movlw	0
  1815  0164  00F1               	movwf	?_tabla+1
  1816  0165  299F               	goto	i1l114
  1817  0166                     i1l1161:
  1818                           
  1819                           ;LAB1.c: 201:             return 0b01111101;
  1820  0166  307D               	movlw	125
  1821  0167  00F0               	movwf	?_tabla
  1822  0168  3000               	movlw	0
  1823  0169  00F1               	movwf	?_tabla+1
  1824  016A  299F               	goto	i1l114
  1825  016B                     i1l1167:
  1826                           
  1827                           ;LAB1.c: 204:             return 0b00000111;
  1828  016B  3007               	movlw	7
  1829  016C  00F0               	movwf	?_tabla
  1830  016D  3000               	movlw	0
  1831  016E  00F1               	movwf	?_tabla+1
  1832  016F  299F               	goto	i1l114
  1833  0170                     i1l1173:
  1834                           
  1835                           ;LAB1.c: 207:             return 0b01111111;
  1836  0170  307F               	movlw	127
  1837  0171  00F0               	movwf	?_tabla
  1838  0172  3000               	movlw	0
  1839  0173  00F1               	movwf	?_tabla+1
  1840  0174  299F               	goto	i1l114
  1841  0175                     i1l1179:
  1842                           
  1843                           ;LAB1.c: 210:             return 0b01101111;
  1844  0175  306F               	movlw	111
  1845  0176  00F0               	movwf	?_tabla
  1846  0177  3000               	movlw	0
  1847  0178  00F1               	movwf	?_tabla+1
  1848  0179  299F               	goto	i1l114
  1849  017A                     i1l1187:
  1850                           
  1851                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1852                           ; Switch size 1, requested type "simple"
  1853                           ; Number of cases is 1, Range of values is 0 to 0
  1854                           ; switch strategies available:
  1855                           ; Name         Instructions Cycles
  1856                           ; simple_byte            4     3 (average)
  1857                           ; direct_byte           11     8 (fixed)
  1858                           ; jumptable            260     6 (fixed)
  1859                           ;	Chosen strategy is simple_byte
  1860  017A  0871               	movf	tabla@a+1,w
  1861  017B  3A00               	xorlw	0	; case 0
  1862  017C  1903               	skipnz
  1863  017D  297F               	goto	i1l1515
  1864  017E  299F               	goto	i1l114
  1865  017F                     i1l1515:
  1866                           
  1867                           ; Switch size 1, requested type "simple"
  1868                           ; Number of cases is 10, Range of values is 0 to 9
  1869                           ; switch strategies available:
  1870                           ; Name         Instructions Cycles
  1871                           ; simple_byte           31    16 (average)
  1872                           ; direct_byte           38     8 (fixed)
  1873                           ; jumptable            260     6 (fixed)
  1874                           ;	Chosen strategy is simple_byte
  1875  017F  0870               	movf	tabla@a,w
  1876  0180  3A00               	xorlw	0	; case 0
  1877  0181  1903               	skipnz
  1878  0182  2948               	goto	i1l1125
  1879  0183  3A01               	xorlw	1	; case 1
  1880  0184  1903               	skipnz
  1881  0185  294D               	goto	i1l1131
  1882  0186  3A03               	xorlw	3	; case 2
  1883  0187  1903               	skipnz
  1884  0188  2952               	goto	i1l1137
  1885  0189  3A01               	xorlw	1	; case 3
  1886  018A  1903               	skipnz
  1887  018B  2957               	goto	i1l1143
  1888  018C  3A07               	xorlw	7	; case 4
  1889  018D  1903               	skipnz
  1890  018E  295C               	goto	i1l1149
  1891  018F  3A01               	xorlw	1	; case 5
  1892  0190  1903               	skipnz
  1893  0191  2961               	goto	i1l1155
  1894  0192  3A03               	xorlw	3	; case 6
  1895  0193  1903               	skipnz
  1896  0194  2966               	goto	i1l1161
  1897  0195  3A01               	xorlw	1	; case 7
  1898  0196  1903               	skipnz
  1899  0197  296B               	goto	i1l1167
  1900  0198  3A0F               	xorlw	15	; case 8
  1901  0199  1903               	skipnz
  1902  019A  2970               	goto	i1l1173
  1903  019B  3A01               	xorlw	1	; case 9
  1904  019C  1903               	skipnz
  1905  019D  2975               	goto	i1l1179
  1906  019E  299F               	goto	i1l114
  1907  019F                     i1l114:
  1908  019F  0008               	return
  1909  01A0                     __end_of_tabla:
  1910  007E                     btemp	set	126	;btemp
  1911  007E                     wtemp0	set	126
  1912                           
  1913                           	psect	config
  1914                           
  1915                           ;Config register CONFIG1 @ 0x2007
  1916                           ;	Oscillator Selection bits
  1917                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1918                           ;	Watchdog Timer Enable bit
  1919                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1920                           ;	Power-up Timer Enable bit
  1921                           ;	PWRTE = OFF, PWRT disabled
  1922                           ;	RE3/MCLR pin function select bit
  1923                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1924                           ;	Code Protection bit
  1925                           ;	CP = OFF, Program memory code protection is disabled
  1926                           ;	Data Code Protection bit
  1927                           ;	CPD = OFF, Data memory code protection is disabled
  1928                           ;	Brown Out Reset Selection bits
  1929                           ;	BOREN = OFF, BOR disabled
  1930                           ;	Internal External Switchover bit
  1931                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1932                           ;	Fail-Safe Clock Monitor Enabled bit
  1933                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1934                           ;	Low Voltage Programming Enable bit
  1935                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1936                           ;	In-Circuit Debugger Mode bit
  1937                           ;	DEBUG = 0x1, unprogrammed default
  1938  2007                     	org	8199
  1939  2007  20D4               	dw	8404
  1940                           
  1941                           ;Config register CONFIG2 @ 0x2008
  1942                           ;	Brown-out Reset Selection bit
  1943                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1944                           ;	Flash Program Memory Self Write Enable bits
  1945                           ;	WRT = OFF, Write protection off
  1946  2008                     	org	8200
  1947  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      8      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_divisor
    _divisor->___awdiv
    _displays->_tabla
    _displays->_tabla_p

Critical Paths under _main in BANK0

    _main->_setup

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              7 BANK0      1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  6     6      0    1262
                                              0 BANK0      6     6      0
                           _displays
                            _divisor
                               _tmr0
 ---------------------------------------------------------------------------------
 (3) _tmr0                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _divisor                                              5     5      0     990
                                              9 COMMON     5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _displays                                             1     1      0     272
                                              2 COMMON     1     1      0
                              _tabla
                            _tabla_p
 ---------------------------------------------------------------------------------
 (4) _tabla_p                                              2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _tabla                                                2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)
   _displays
     _tabla
     _tabla_p
   _divisor
     ___awdiv
     ___awmod
   _tmr0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      18       5       30.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      26      12        0.0%
ABS                  0      0      26       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jan 27 03:56:26 2022

                     l93 027E             ___awdiv@sign 0076                      u550 02C8  
                    u551 02C7                      u560 02D1                      u561 02D0  
                    u577 02D7                      u587 02E4                      u597 0271  
                    _dig 0020                      _isr 027F                      fsr0 0004  
                    indf 0000             ___awmod@sign 0076                     l1401 0259  
                   l1411 0263                     l1403 025A                     l1421 0274  
                   l1413 0264                     l1405 025B                     l1431 027D  
                   l1423 0275                     l1415 026A                     l1407 025F  
                   l1425 0276                     l1417 026C                     l1409 0262  
                   l1427 0277                     l1419 026D                     l1429 027A  
                   l1461 02D1                     l1453 02BC                     l1391 0254  
                   l1383 023C                     l1471 02E7                     l1463 02D3  
                   l1455 02C1                     l1393 0255                     l1385 0240  
                   l1465 02DB                     l1457 02C4                     l1395 0256  
                   l1387 0241                     l1459 02C8                     l1397 0257  
                   l1389 024E                     l1469 02E0                     l1399 0258  
                   ?_isr 0070                     _T0IF 005A                     i1l79 02AF  
                   i1l96 02F3                     _TMR0 0001                     _digi 002E  
                   _main 02BC                     _tmr0 02EE                     btemp 007E  
                   start 0012                    ??_isr 002F                    ?_main 0070  
        __end_of___awdiv 0095                    ?_tmr0 0070          __end_of___awmod 00EE  
                  _ANSEL 0188          ___awdiv@divisor 0070                    i1l101 01F2  
                  i1l114 019F                    i1l130 0146                    i1l109 023B  
                  i1l380 0094                    i1l393 00ED          ___awdiv@counter 0075  
                  u30_20 003E                    u30_21 003D                    u31_20 004F  
                  u31_21 004E                    u40_20 00A5                    u40_21 00A4  
                  u32_25 0053                    u33_20 0061                    u41_20 00B0  
                  u33_21 0060                    u41_21 00AF                    u50_20 0214  
                  u50_21 0213                    u34_25 0062                    u42_25 00B4  
                  u51_20 022C                    u35_20 0072                    u43_20 00C2  
                  u51_21 022B                    u35_21 0071                    u43_21 00C1  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    u35_25 006E                    _PORTE 0009  
                  u44_20 00CC                    u52_20 0283                    u44_21 00CB  
                  u52_21 0282                    u36_25 007A                    u44_25 00C8  
                  u37_20 0086                    u29_20 0033                    u53_20 028C  
                  u37_21 0085                    u29_21 0032                    u53_21 028B  
                  u45_25 00D3                    u38_20 008B                    u46_20 00DF  
                  u54_20 02A5                    u38_21 008A                    u46_21 00DE  
                  u54_21 02A4                    u47_20 00E4                    u39_20 009A  
                  u47_21 00E3                    u39_21 0099                    u48_20 01F2  
                  u48_21 01F1                    u48_25 01EE                    u49_20 01FC  
                  u49_21 01FB                    _TRISA 0085                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089          __end_of_divisor 01F3  
                  _cont2 002C                    _tabla 0147          __end_of_tabla_p 0147  
                  _setup 023C                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0015             __end_of_main 02EE  
           __end_of_tmr0 02F4                   ??_main 0036                   ??_tmr0 0070  
                 ?_tabla 0070                   _ADRESH 001E         ___awdiv@dividend 0072  
                 ?_setup 0070                   _ANSELH 0189                   i1l1201 00F4  
                 i1l1131 014D                   i1l1123 0147                   i1l1125 0148  
                 i1l1213 00FE                   i1l1301 008B                   i1l1143 0157  
                 i1l1231 010D                   i1l1207 00F9                   i1l1303 0090  
                 i1l1311 009A                   i1l1161 0166                   i1l1137 0152  
                 i1l1225 0108                   i1l1321 00B0                   i1l1313 009F  
                 i1l1155 0161                   i1l1243 0117                   i1l1219 0103  
                 i1l1331 00CC                   i1l1323 00B3                   i1l1315 00A1  
                 i1l1307 0095                   i1l1173 0170                   i1l1149 015C  
                 i1l1237 0112                   i1l1341 00E9                   i1l1333 00D2  
                 i1l1325 00BA                   i1l1317 00A5                   i1l1309 0096  
                 i1l1167 016B                   i1l1271 003A                   i1l1263 002E  
                 i1l1335 00D9                   i1l1327 00BE                   i1l1319 00AA  
                 i1l1351 01A2                   i1l1513 0126                   i1l1249 011C  
                 i1l1257 0121                   i1l1193 00EE                   i1l1281 004F  
                 i1l1273 003E                   i1l1265 002F                   i1l1329 00C2  
                 i1l1337 00DF                   i1l1353 01DF                   i1l1345 01A0  
                 i1l1441 0296                   i1l1515 017F                   i1l1179 0175  
                 i1l1187 017A                   i1l1195 00EF                   i1l1371 020E  
                 i1l1363 01F3                   i1l1291 0072                   i1l1283 0052  
                 i1l1275 0043                   i1l1267 0033                   i1l1339 00E4  
                 i1l1355 01E5                   i1l1451 02AA                   i1l1443 029C  
                 i1l1435 027F                   i1l1381 0239                   i1l1373 0214  
                 i1l1365 01F7                   i1l1293 0078                   i1l1285 0059  
                 i1l1277 0047                   i1l1269 0038                   i1l1357 02EE  
                 i1l1445 029E                   i1l1437 0283                   i1l1375 0221  
                 i1l1367 01FC                   i1l1295 0079                   i1l1287 005D  
                 i1l1279 0049                   i1l1359 02EF                   i1l1439 028C  
                 i1l1447 02A1                   i1l1377 0226                   i1l1369 0209  
                 i1l1297 0080                   i1l1289 0061                   i1l1449 02A5  
                 i1l1379 022C                   i1l1299 0086         __end_of_displays 023C  
              ??___awdiv 0074                ??___awmod 0074         ___awdiv@quotient 0077  
        ___awmod@divisor 0070          ___awmod@counter 0075                ??_divisor 0079  
                 tabla@a 0070                ??_tabla_p 0072                   saved_w 007E  
__end_of__initialization 002A           __pcstackCOMMON 0070             __pidataBANK0 02F4  
          __end_of_tabla 01A0            __end_of_setup 027F           _OPTION_REGbits 0081  
                ??_tabla 0072                  ??_setup 0035               __pbssBANK0 0020  
             __pmaintext 02BC               __pintentry 0004                ?_displays 0070  
                ___awdiv 002E                  ___awmod 0095                  _decenas 0026  
                __ptext1 023C                  __ptext2 027F                  __ptext3 02EE  
                __ptext4 01A0                  __ptext5 0095                  __ptext6 002E  
                __ptext7 01F3                  __ptext8 00EE                  __ptext9 0147  
                _divisor 01A0             __size_of_isr 003D                  _tabla_p 00EE  
       ___awmod@dividend 0072               ??_displays 0072     end_of_initialization 002A  
    start_initialization 0015              __end_of_isr 02BC              __pdataBANK0 0037  
              ___latbits 0002            __pcstackBANK0 002F        __size_of_displays 0049  
               ?___awdiv 0070                 ?___awmod 0070                 ?_divisor 0070  
               ?_tabla_p 0070           __size_of_tabla 0059           __size_of_setup 0043  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F         __size_of___awdiv 0067  
       __size_of___awmod 0059         __size_of_divisor 0053         __size_of_tabla_p 0059  
               _displays 01F3                 _cont_vol 002A            __size_of_main 0032  
          __size_of_tmr0 0006                 _unidades 0028                 divisor@i 007C  
             _INTCONbits 000B                 tabla_p@a 0070                 intlevel1 0000  
             _OSCCONbits 008F            _disp_selector 0037  
