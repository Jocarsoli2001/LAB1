

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jan 27 03:43:24 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  000B                     _INTCONbits	set	11
   210  0001                     _TMR0	set	1
   211  0009                     _PORTE	set	9
   212  0007                     _PORTC	set	7
   213  0008                     _PORTD	set	8
   214  0006                     _PORTB	set	6
   215  0005                     _PORTA	set	5
   216  001E                     _ADRESH	set	30
   217  001F                     _ADCON0bits	set	31
   218  000C                     _PIR1bits	set	12
   219  005A                     _T0IF	set	90
   220  008C                     _PIE1bits	set	140
   221  009F                     _ADCON1bits	set	159
   222  0081                     _OPTION_REGbits	set	129
   223  008F                     _OSCCONbits	set	143
   224  0089                     _TRISE	set	137
   225  0088                     _TRISD	set	136
   226  0087                     _TRISC	set	135
   227  0085                     _TRISA	set	133
   228  0086                     _TRISB	set	134
   229  0189                     _ANSELH	set	393
   230  0188                     _ANSEL	set	392
   231                           
   232                           	psect	cinit
   233  0011                     start_initialization:	
   234                           ; #config settings
   235                           
   236  0011                     __initialization:
   237                           
   238                           ; Clear objects allocated to COMMON
   239  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   240  0012  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   241  0013  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   242  0014  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   243  0015  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   244  0016                     end_of_initialization:	
   245                           ;End of C runtime variable initialization code
   246                           
   247  0016                     __end_of__initialization:
   248  0016  0183               	clrf	3
   249  0017  120A  118A  292D   	ljmp	_main	;jump to C main() function
   250                           
   251                           	psect	bssCOMMON
   252  0078                     __pbssCOMMON:
   253  0078                     _decenas:
   254  0078                     	ds	2
   255  007A                     _unidades:
   256  007A                     	ds	2
   257  007C                     _disp_selector:
   258  007C                     	ds	1
   259                           
   260                           	psect	cstackCOMMON
   261  0070                     __pcstackCOMMON:
   262  0070                     ?_tmr0:
   263  0070                     ??_tmr0:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0070                     ?_displays:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0070                     ?_setup:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0070                     ?_limite:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0070                     ?_isr:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0070                     ?_main:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0070                     ?_tabla:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0070                     tabla@a:	
   285                           ; 2 bytes @ 0x0
   286                           
   287                           
   288                           ; 2 bytes @ 0x0
   289  0070                     	ds	2
   290  0072                     ??_displays:
   291  0072                     ??_tabla:	
   292                           ; 1 bytes @ 0x2
   293                           
   294                           
   295                           ; 1 bytes @ 0x2
   296  0072                     	ds	1
   297  0073                     ??_isr:
   298                           
   299                           ; 1 bytes @ 0x3
   300  0073                     	ds	5
   301                           
   302                           	psect	cstackBANK0
   303  0020                     __pcstackBANK0:
   304  0020                     ??_setup:
   305  0020                     ??_limite:	
   306                           ; 1 bytes @ 0x0
   307                           
   308                           
   309                           ; 1 bytes @ 0x0
   310  0020                     	ds	1
   311  0021                     ??_main:
   312                           
   313                           ; 1 bytes @ 0x1
   314  0021                     	ds	1
   315                           
   316                           	psect	maintext
   317  012D                     __pmaintext:	
   318 ;;
   319 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   320 ;;
   321 ;; *************** function _main *****************
   322 ;; Defined at:
   323 ;;		line 74 in file "LAB1.c"
   324 ;; Parameters:    Size  Location     Type
   325 ;;		None
   326 ;; Auto vars:     Size  Location     Type
   327 ;;		None
   328 ;; Return value:  Size  Location     Type
   329 ;;                  1    wreg      void 
   330 ;; Registers used:
   331 ;;		wreg, status,2, status,0, pclath, cstack
   332 ;; Tracked objects:
   333 ;;		On entry : B00/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   337 ;;      Params:         0       0       0       0       0
   338 ;;      Locals:         0       0       0       0       0
   339 ;;      Temps:          0       1       0       0       0
   340 ;;      Totals:         0       1       0       0       0
   341 ;;Total ram usage:        1 bytes
   342 ;; Hardware stack levels required when called: 4
   343 ;; This function calls:
   344 ;;		_limite
   345 ;;		_setup
   346 ;; This function is called by:
   347 ;;		Startup code after reset
   348 ;; This function uses a non-reentrant model
   349 ;;
   350                           
   351                           
   352                           ;psect for function _main
   353  012D                     _main:
   354  012D                     l1183:	
   355                           ;incstack = 0
   356                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   357                           
   358                           
   359                           ;LAB1.c: 75:     setup();
   360  012D  120A  118A  20A3  120A  118A  	fcall	_setup
   361  0132                     l1185:
   362                           
   363                           ;LAB1.c: 76:     ADCON0bits.GO = 1;
   364  0132  1283               	bcf	3,5	;RP0=0, select bank0
   365  0133  1303               	bcf	3,6	;RP1=0, select bank0
   366  0134  149F               	bsf	31,1	;volatile
   367  0135                     l1187:
   368                           
   369                           ;LAB1.c: 78:         if(ADCON0bits.GO == 0){
   370  0135  1283               	bcf	3,5	;RP0=0, select bank0
   371  0136  1303               	bcf	3,6	;RP1=0, select bank0
   372  0137  189F               	btfsc	31,1	;volatile
   373  0138  293A               	goto	u231
   374  0139  293B               	goto	u230
   375  013A                     u231:
   376  013A  295F               	goto	l1203
   377  013B                     u230:
   378  013B                     l1189:
   379                           
   380                           ;LAB1.c: 79:             if(ADCON0bits.CHS == 6){
   381  013B  0C1F               	rrf	31,w	;volatile
   382  013C  00A1               	movwf	??_main
   383  013D  0C21               	rrf	??_main,w
   384  013E  390F               	andlw	15
   385  013F  3A06               	xorlw	6
   386  0140  1D03               	skipz
   387  0141  2943               	goto	u241
   388  0142  2944               	goto	u240
   389  0143                     u241:
   390  0143  2950               	goto	l1195
   391  0144                     u240:
   392  0144                     l1191:
   393                           
   394                           ;LAB1.c: 80:                 ADCON0bits.CHS = 5;
   395  0144  081F               	movf	31,w	;volatile
   396  0145  39C3               	andlw	-61
   397  0146  3814               	iorlw	20
   398  0147  009F               	movwf	31	;volatile
   399  0148                     l1193:
   400                           
   401                           ;LAB1.c: 81:                 _delay((unsigned long)((50)*(8000000/4000000.0)));
   402  0148  3020               	movlw	32
   403  0149  1283               	bcf	3,5	;RP0=0, select bank0
   404  014A  1303               	bcf	3,6	;RP1=0, select bank0
   405  014B  00A1               	movwf	??_main
   406  014C                     u257:
   407  014C  0BA1               	decfsz	??_main,f
   408  014D  294C               	goto	u257
   409  014E  0000               	nop
   410                           
   411                           ;LAB1.c: 82:             }
   412  014F  2955               	goto	l1199
   413  0150                     l1195:
   414                           
   415                           ;LAB1.c: 84:                 ADCON0bits.CHS = 6;
   416  0150  081F               	movf	31,w	;volatile
   417  0151  39C3               	andlw	-61
   418  0152  3818               	iorlw	24
   419  0153  009F               	movwf	31	;volatile
   420  0154  2948               	goto	l1193
   421  0155                     l1199:
   422                           
   423                           ;LAB1.c: 87:             _delay((unsigned long)((50)*(8000000/4000000.0)));
   424  0155  3020               	movlw	32
   425  0156  1283               	bcf	3,5	;RP0=0, select bank0
   426  0157  1303               	bcf	3,6	;RP1=0, select bank0
   427  0158  00A1               	movwf	??_main
   428  0159                     u267:
   429  0159  0BA1               	decfsz	??_main,f
   430  015A  2959               	goto	u267
   431  015B  0000               	nop
   432  015C                     l1201:
   433                           
   434                           ;LAB1.c: 88:             ADCON0bits.GO = 1;
   435  015C  1283               	bcf	3,5	;RP0=0, select bank0
   436  015D  1303               	bcf	3,6	;RP1=0, select bank0
   437  015E  149F               	bsf	31,1	;volatile
   438  015F                     l1203:
   439                           
   440                           ;LAB1.c: 90:         limite();
   441  015F  120A  118A  20E8  120A  118A  	fcall	_limite
   442  0164  2935               	goto	l1187
   443  0165  120A  118A  280E   	ljmp	start
   444  0168                     __end_of_main:
   445                           
   446                           	psect	text1
   447  00A3                     __ptext1:	
   448 ;; *************** function _setup *****************
   449 ;; Defined at:
   450 ;;		line 95 in file "LAB1.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;		None
   453 ;; Auto vars:     Size  Location     Type
   454 ;;		None
   455 ;; Return value:  Size  Location     Type
   456 ;;                  1    wreg      void 
   457 ;; Registers used:
   458 ;;		wreg, status,2, status,0
   459 ;; Tracked objects:
   460 ;;		On entry : 0/0
   461 ;;		On exit  : 0/0
   462 ;;		Unchanged: 0/0
   463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   464 ;;      Params:         0       0       0       0       0
   465 ;;      Locals:         0       0       0       0       0
   466 ;;      Temps:          0       1       0       0       0
   467 ;;      Totals:         0       1       0       0       0
   468 ;;Total ram usage:        1 bytes
   469 ;; Hardware stack levels used: 1
   470 ;; Hardware stack levels required when called: 3
   471 ;; This function calls:
   472 ;;		Nothing
   473 ;; This function is called by:
   474 ;;		_main
   475 ;; This function uses a non-reentrant model
   476 ;;
   477                           
   478                           
   479                           ;psect for function _setup
   480  00A3                     _setup:
   481  00A3                     l1093:	
   482                           ;incstack = 0
   483                           ; Regs used in _setup: [wreg+status,2+status,0]
   484                           
   485                           
   486                           ;LAB1.c: 98:     ANSEL = 0b00100000;
   487  00A3  3020               	movlw	32
   488  00A4  1683               	bsf	3,5	;RP0=1, select bank3
   489  00A5  1703               	bsf	3,6	;RP1=1, select bank3
   490  00A6  0088               	movwf	8	;volatile
   491  00A7                     l1095:
   492                           
   493                           ;LAB1.c: 99:     ANSELH = 0;
   494  00A7  0189               	clrf	9	;volatile
   495  00A8                     l1097:
   496                           
   497                           ;LAB1.c: 102:     TRISB = 0;
   498  00A8  1683               	bsf	3,5	;RP0=1, select bank1
   499  00A9  1303               	bcf	3,6	;RP1=0, select bank1
   500  00AA  0186               	clrf	6	;volatile
   501  00AB                     l1099:
   502                           
   503                           ;LAB1.c: 103:     TRISA = 0;
   504  00AB  0185               	clrf	5	;volatile
   505  00AC                     l1101:
   506                           
   507                           ;LAB1.c: 104:     TRISC = 0;
   508  00AC  0187               	clrf	7	;volatile
   509  00AD                     l1103:
   510                           
   511                           ;LAB1.c: 105:     TRISD = 0;
   512  00AD  0188               	clrf	8	;volatile
   513  00AE                     l1105:
   514                           
   515                           ;LAB1.c: 106:     TRISE = 0b001;
   516  00AE  3001               	movlw	1
   517  00AF  0089               	movwf	9	;volatile
   518                           
   519                           ;LAB1.c: 108:     PORTA = 0;
   520  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   521  00B1  1303               	bcf	3,6	;RP1=0, select bank0
   522  00B2  0185               	clrf	5	;volatile
   523                           
   524                           ;LAB1.c: 109:     PORTB = 0;
   525  00B3  0186               	clrf	6	;volatile
   526                           
   527                           ;LAB1.c: 110:     PORTD = 0;
   528  00B4  0188               	clrf	8	;volatile
   529                           
   530                           ;LAB1.c: 111:     PORTC = 0;
   531  00B5  0187               	clrf	7	;volatile
   532                           
   533                           ;LAB1.c: 112:     PORTE = 0;
   534  00B6  0189               	clrf	9	;volatile
   535  00B7                     l1107:
   536                           
   537                           ;LAB1.c: 115:     OSCCONbits.IRCF = 0b0111;
   538  00B7  3070               	movlw	112
   539  00B8  1683               	bsf	3,5	;RP0=1, select bank1
   540  00B9  1303               	bcf	3,6	;RP1=0, select bank1
   541  00BA  048F               	iorwf	15,f	;volatile
   542  00BB                     l1109:
   543                           
   544                           ;LAB1.c: 116:     OSCCONbits.SCS = 1;
   545  00BB  140F               	bsf	15,0	;volatile
   546  00BC                     l1111:
   547                           
   548                           ;LAB1.c: 119:     OPTION_REGbits.T0CS = 0;
   549  00BC  1281               	bcf	1,5	;volatile
   550  00BD                     l1113:
   551                           
   552                           ;LAB1.c: 120:     OPTION_REGbits.T0SE = 0;
   553  00BD  1201               	bcf	1,4	;volatile
   554  00BE                     l1115:
   555                           
   556                           ;LAB1.c: 121:     OPTION_REGbits.PSA = 1;
   557  00BE  1581               	bsf	1,3	;volatile
   558  00BF                     l1117:
   559                           
   560                           ;LAB1.c: 122:     OPTION_REGbits.PS2 = 0;
   561  00BF  1101               	bcf	1,2	;volatile
   562  00C0                     l1119:
   563                           
   564                           ;LAB1.c: 123:     OPTION_REGbits.PS1 = 0;
   565  00C0  1081               	bcf	1,1	;volatile
   566  00C1                     l1121:
   567                           
   568                           ;LAB1.c: 124:     OPTION_REGbits.PS0 = 0;
   569  00C1  1001               	bcf	1,0	;volatile
   570  00C2                     l1123:
   571                           
   572                           ;LAB1.c: 125:     TMR0 = 156;
   573  00C2  309C               	movlw	156
   574  00C3  1283               	bcf	3,5	;RP0=0, select bank0
   575  00C4  1303               	bcf	3,6	;RP1=0, select bank0
   576  00C5  0081               	movwf	1	;volatile
   577  00C6                     l1125:
   578                           
   579                           ;LAB1.c: 128:     ADCON1bits.ADFM = 0;
   580  00C6  1683               	bsf	3,5	;RP0=1, select bank1
   581  00C7  1303               	bcf	3,6	;RP1=0, select bank1
   582  00C8  139F               	bcf	31,7	;volatile
   583  00C9                     l1127:
   584                           
   585                           ;LAB1.c: 129:     ADCON1bits.VCFG0 = 0;
   586  00C9  121F               	bcf	31,4	;volatile
   587  00CA                     l1129:
   588                           
   589                           ;LAB1.c: 130:     ADCON1bits.VCFG1 = 0;
   590  00CA  129F               	bcf	31,5	;volatile
   591  00CB                     l1131:
   592                           
   593                           ;LAB1.c: 132:     ADCON0bits.ADCS = 0b10;
   594  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   595  00CC  1303               	bcf	3,6	;RP1=0, select bank0
   596  00CD  081F               	movf	31,w	;volatile
   597  00CE  393F               	andlw	-193
   598  00CF  3880               	iorlw	128
   599  00D0  009F               	movwf	31	;volatile
   600  00D1                     l1133:
   601                           
   602                           ;LAB1.c: 133:     ADCON0bits.CHS = 5;
   603  00D1  081F               	movf	31,w	;volatile
   604  00D2  39C3               	andlw	-61
   605  00D3  3814               	iorlw	20
   606  00D4  009F               	movwf	31	;volatile
   607  00D5                     l1135:
   608                           
   609                           ;LAB1.c: 134:     ADCON0bits.ADON = 1;
   610  00D5  141F               	bsf	31,0	;volatile
   611  00D6                     l1137:
   612                           
   613                           ;LAB1.c: 135:     _delay((unsigned long)((200)*(8000000/4000000.0)));
   614  00D6  3084               	movlw	132
   615  00D7  1283               	bcf	3,5	;RP0=0, select bank0
   616  00D8  1303               	bcf	3,6	;RP1=0, select bank0
   617  00D9  00A0               	movwf	??_setup
   618  00DA                     u277:
   619  00DA  0BA0               	decfsz	??_setup,f
   620  00DB  28DA               	goto	u277
   621  00DC  0000               	nop
   622  00DD                     l1139:
   623                           
   624                           ;LAB1.c: 138:     INTCONbits.T0IF = 0;
   625  00DD  110B               	bcf	11,2	;volatile
   626  00DE                     l1141:
   627                           
   628                           ;LAB1.c: 139:     INTCONbits.T0IE = 1;
   629  00DE  168B               	bsf	11,5	;volatile
   630  00DF                     l1143:
   631                           
   632                           ;LAB1.c: 140:     INTCONbits.GIE = 1;
   633  00DF  178B               	bsf	11,7	;volatile
   634  00E0                     l1145:
   635                           
   636                           ;LAB1.c: 141:     PIR1bits.ADIF = 0;
   637  00E0  1283               	bcf	3,5	;RP0=0, select bank0
   638  00E1  1303               	bcf	3,6	;RP1=0, select bank0
   639  00E2  130C               	bcf	12,6	;volatile
   640  00E3                     l1147:
   641                           
   642                           ;LAB1.c: 142:     PIE1bits.ADIE = 1;
   643  00E3  1683               	bsf	3,5	;RP0=1, select bank1
   644  00E4  1303               	bcf	3,6	;RP1=0, select bank1
   645  00E5  170C               	bsf	12,6	;volatile
   646  00E6                     l1149:
   647                           
   648                           ;LAB1.c: 143:     INTCONbits.PEIE = 1;
   649  00E6  170B               	bsf	11,6	;volatile
   650  00E7                     l85:
   651  00E7  0008               	return
   652  00E8                     __end_of_setup:
   653                           
   654                           	psect	text2
   655  00E8                     __ptext2:	
   656 ;; *************** function _limite *****************
   657 ;; Defined at:
   658 ;;		line 166 in file "LAB1.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;		None
   661 ;; Auto vars:     Size  Location     Type
   662 ;;		None
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, status,2, status,0
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   672 ;;      Params:         0       0       0       0       0
   673 ;;      Locals:         0       0       0       0       0
   674 ;;      Temps:          0       0       0       0       0
   675 ;;      Totals:         0       0       0       0       0
   676 ;;Total ram usage:        0 bytes
   677 ;; Hardware stack levels used: 1
   678 ;; Hardware stack levels required when called: 3
   679 ;; This function calls:
   680 ;;		Nothing
   681 ;; This function is called by:
   682 ;;		_main
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           
   687                           ;psect for function _limite
   688  00E8                     _limite:
   689  00E8                     l1153:	
   690                           ;incstack = 0
   691                           ; Regs used in _limite: [wreg+status,2+status,0]
   692                           
   693                           
   694                           ;LAB1.c: 167:     if(unidades == 16){
   695  00E8  3010               	movlw	16
   696  00E9  067A               	xorwf	_unidades,w
   697  00EA  047B               	iorwf	_unidades+1,w
   698  00EB  1D03               	btfss	3,2
   699  00EC  28EE               	goto	u151
   700  00ED  28EF               	goto	u150
   701  00EE                     u151:
   702  00EE  28F7               	goto	l1159
   703  00EF                     u150:
   704  00EF                     l1155:
   705                           
   706                           ;LAB1.c: 168:         unidades = 0;
   707  00EF  01FA               	clrf	_unidades
   708  00F0  01FB               	clrf	_unidades+1
   709  00F1                     l1157:
   710                           
   711                           ;LAB1.c: 169:         decenas++;
   712  00F1  3001               	movlw	1
   713  00F2  07F8               	addwf	_decenas,f
   714  00F3  1803               	skipnc
   715  00F4  0AF9               	incf	_decenas+1,f
   716  00F5  3000               	movlw	0
   717  00F6  07F9               	addwf	_decenas+1,f
   718  00F7                     l1159:
   719                           
   720                           ;LAB1.c: 171:     if(unidades == -1){
   721  00F7  0A7A               	incf	_unidades,w
   722  00F8  1D03               	skipz
   723  00F9  28FE               	goto	u161
   724  00FA  0A7B               	incf	_unidades+1,w
   725  00FB  1D03               	btfss	3,2
   726  00FC  28FE               	goto	u161
   727  00FD  28FF               	goto	u160
   728  00FE                     u161:
   729  00FE  2909               	goto	l1163
   730  00FF                     u160:
   731  00FF                     l1161:
   732                           
   733                           ;LAB1.c: 172:         unidades = 15;
   734  00FF  300F               	movlw	15
   735  0100  00FA               	movwf	_unidades
   736  0101  3000               	movlw	0
   737  0102  00FB               	movwf	_unidades+1
   738                           
   739                           ;LAB1.c: 173:         decenas--;
   740  0103  30FF               	movlw	255
   741  0104  07F8               	addwf	_decenas,f
   742  0105  1803               	skipnc
   743  0106  0AF9               	incf	_decenas+1,f
   744  0107  30FF               	movlw	255
   745  0108  07F9               	addwf	_decenas+1,f
   746  0109                     l1163:
   747                           
   748                           ;LAB1.c: 175:     if(unidades == -1 && decenas == -1){
   749  0109  0A7A               	incf	_unidades,w
   750  010A  1D03               	skipz
   751  010B  2910               	goto	u171
   752  010C  0A7B               	incf	_unidades+1,w
   753  010D  1D03               	btfss	3,2
   754  010E  2910               	goto	u171
   755  010F  2911               	goto	u170
   756  0110                     u171:
   757  0110  2921               	goto	l1169
   758  0111                     u170:
   759  0111                     l1165:
   760  0111  0A78               	incf	_decenas,w
   761  0112  1D03               	skipz
   762  0113  2918               	goto	u181
   763  0114  0A79               	incf	_decenas+1,w
   764  0115  1D03               	btfss	3,2
   765  0116  2918               	goto	u181
   766  0117  2919               	goto	u180
   767  0118                     u181:
   768  0118  2921               	goto	l1169
   769  0119                     u180:
   770  0119                     l1167:
   771                           
   772                           ;LAB1.c: 176:         unidades = 15;
   773  0119  300F               	movlw	15
   774  011A  00FA               	movwf	_unidades
   775  011B  3000               	movlw	0
   776  011C  00FB               	movwf	_unidades+1
   777                           
   778                           ;LAB1.c: 177:         decenas = 15;
   779  011D  300F               	movlw	15
   780  011E  00F8               	movwf	_decenas
   781  011F  3000               	movlw	0
   782  0120  00F9               	movwf	_decenas+1
   783  0121                     l1169:
   784                           
   785                           ;LAB1.c: 179:     if(decenas == 16){
   786  0121  3010               	movlw	16
   787  0122  0678               	xorwf	_decenas,w
   788  0123  0479               	iorwf	_decenas+1,w
   789  0124  1D03               	btfss	3,2
   790  0125  2927               	goto	u191
   791  0126  2928               	goto	u190
   792  0127                     u191:
   793  0127  292C               	goto	l101
   794  0128                     u190:
   795  0128                     l1171:
   796                           
   797                           ;LAB1.c: 180:         unidades = 0;
   798  0128  01FA               	clrf	_unidades
   799  0129  01FB               	clrf	_unidades+1
   800                           
   801                           ;LAB1.c: 181:         decenas = 0;
   802  012A  01F8               	clrf	_decenas
   803  012B  01F9               	clrf	_decenas+1
   804  012C                     l101:
   805  012C  0008               	return
   806  012D                     __end_of_limite:
   807                           
   808                           	psect	text3
   809  0199                     __ptext3:	
   810 ;; *************** function _isr *****************
   811 ;; Defined at:
   812 ;;		line 58 in file "LAB1.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;		None
   815 ;; Auto vars:     Size  Location     Type
   816 ;;		None
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   826 ;;      Params:         0       0       0       0       0
   827 ;;      Locals:         0       0       0       0       0
   828 ;;      Temps:          5       0       0       0       0
   829 ;;      Totals:         5       0       0       0       0
   830 ;;Total ram usage:        5 bytes
   831 ;; Hardware stack levels used: 1
   832 ;; Hardware stack levels required when called: 2
   833 ;; This function calls:
   834 ;;		_displays
   835 ;;		_tmr0
   836 ;; This function is called by:
   837 ;;		Interrupt level 1
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           
   842                           ;psect for function _isr
   843  0199                     _isr:
   844  0199                     i1l1173:
   845                           
   846                           ;LAB1.c: 59:     if(PIR1bits.ADIF){
   847  0199  1283               	bcf	3,5	;RP0=0, select bank0
   848  019A  1303               	bcf	3,6	;RP1=0, select bank0
   849  019B  1F0C               	btfss	12,6	;volatile
   850  019C  299E               	goto	u20_21
   851  019D  299F               	goto	u20_20
   852  019E                     u20_21:
   853  019E  29B0               	goto	i1l67
   854  019F                     u20_20:
   855  019F                     i1l1175:
   856                           
   857                           ;LAB1.c: 60:         if(ADCON0bits.CHS == 5){
   858  019F  0C1F               	rrf	31,w	;volatile
   859  01A0  00F3               	movwf	??_isr
   860  01A1  0C73               	rrf	??_isr,w
   861  01A2  390F               	andlw	15
   862  01A3  3A05               	xorlw	5
   863  01A4  1D03               	skipz
   864  01A5  29A7               	goto	u21_21
   865  01A6  29A8               	goto	u21_20
   866  01A7                     u21_21:
   867  01A7  29AF               	goto	i1l69
   868  01A8                     u21_20:
   869  01A8                     i1l1177:
   870                           
   871                           ;LAB1.c: 61:             unidades = ADRESH;
   872  01A8  081E               	movf	30,w	;volatile
   873  01A9  00F3               	movwf	??_isr
   874  01AA  01F4               	clrf	??_isr+1
   875  01AB  0873               	movf	??_isr,w
   876  01AC  00FA               	movwf	_unidades
   877  01AD  0874               	movf	??_isr+1,w
   878  01AE  00FB               	movwf	_unidades+1
   879  01AF                     i1l69:	
   880                           ;LAB1.c: 64:         }
   881                           
   882                           
   883                           ;LAB1.c: 65:         PIR1bits.ADIF = 0;
   884  01AF  130C               	bcf	12,6	;volatile
   885  01B0                     i1l67:	
   886                           ;LAB1.c: 66:     }
   887                           
   888                           
   889                           ;LAB1.c: 67:     if(T0IF){
   890  01B0  1D0B               	btfss	11,2	;volatile
   891  01B1  29B3               	goto	u22_21
   892  01B2  29B4               	goto	u22_20
   893  01B3                     u22_21:
   894  01B3  29BE               	goto	i1l71
   895  01B4                     u22_20:
   896  01B4                     i1l1179:
   897                           
   898                           ;LAB1.c: 68:         tmr0();
   899  01B4  120A  118A  21C7  120A  118A  	fcall	_tmr0
   900  01B9                     i1l1181:
   901                           
   902                           ;LAB1.c: 69:         displays();
   903  01B9  120A  118A  2168  120A  118A  	fcall	_displays
   904  01BE                     i1l71:
   905  01BE  0877               	movf	??_isr+4,w
   906  01BF  008A               	movwf	10
   907  01C0  0876               	movf	??_isr+3,w
   908  01C1  0084               	movwf	4
   909  01C2  0E75               	swapf	??_isr+2,w
   910  01C3  0083               	movwf	3
   911  01C4  0EFE               	swapf	btemp,f
   912  01C5  0E7E               	swapf	btemp,w
   913  01C6  0009               	retfie
   914  01C7                     __end_of_isr:
   915                           
   916                           	psect	intentry
   917  0004                     __pintentry:	
   918                           ;incstack = 0
   919                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   920                           
   921  0004                     interrupt_function:
   922  007E                     saved_w	set	btemp
   923  0004  00FE               	movwf	btemp
   924  0005  0E03               	swapf	3,w
   925  0006  00F5               	movwf	??_isr+2
   926  0007  0804               	movf	4,w
   927  0008  00F6               	movwf	??_isr+3
   928  0009  080A               	movf	10,w
   929  000A  00F7               	movwf	??_isr+4
   930  000B  120A  118A  2999   	ljmp	_isr
   931                           
   932                           	psect	text4
   933  01C7                     __ptext4:	
   934 ;; *************** function _tmr0 *****************
   935 ;; Defined at:
   936 ;;		line 148 in file "LAB1.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;		None
   939 ;; Auto vars:     Size  Location     Type
   940 ;;		None
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      void 
   943 ;; Registers used:
   944 ;;		wreg
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   950 ;;      Params:         0       0       0       0       0
   951 ;;      Locals:         0       0       0       0       0
   952 ;;      Temps:          0       0       0       0       0
   953 ;;      Totals:         0       0       0       0       0
   954 ;;Total ram usage:        0 bytes
   955 ;; Hardware stack levels used: 1
   956 ;; This function calls:
   957 ;;		Nothing
   958 ;; This function is called by:
   959 ;;		_isr
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           
   964                           ;psect for function _tmr0
   965  01C7                     _tmr0:
   966  01C7                     i1l821:	
   967                           ;incstack = 0
   968                           ; Regs used in _tmr0: [wreg]
   969                           
   970                           
   971                           ;LAB1.c: 149:     INTCONbits.T0IF = 0;
   972  01C7  110B               	bcf	11,2	;volatile
   973  01C8                     i1l823:
   974                           
   975                           ;LAB1.c: 150:     TMR0 = 156;
   976  01C8  309C               	movlw	156
   977  01C9  1283               	bcf	3,5	;RP0=0, select bank0
   978  01CA  1303               	bcf	3,6	;RP1=0, select bank0
   979  01CB  0081               	movwf	1	;volatile
   980  01CC                     i1l88:
   981  01CC  0008               	return
   982  01CD                     __end_of_tmr0:
   983                           
   984                           	psect	text5
   985  0168                     __ptext5:	
   986 ;; *************** function _displays *****************
   987 ;; Defined at:
   988 ;;		line 154 in file "LAB1.c"
   989 ;; Parameters:    Size  Location     Type
   990 ;;		None
   991 ;; Auto vars:     Size  Location     Type
   992 ;;		None
   993 ;; Return value:  Size  Location     Type
   994 ;;                  1    wreg      void 
   995 ;; Registers used:
   996 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   997 ;; Tracked objects:
   998 ;;		On entry : 0/0
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1002 ;;      Params:         0       0       0       0       0
  1003 ;;      Locals:         0       0       0       0       0
  1004 ;;      Temps:          1       0       0       0       0
  1005 ;;      Totals:         1       0       0       0       0
  1006 ;;Total ram usage:        1 bytes
  1007 ;; Hardware stack levels used: 1
  1008 ;; Hardware stack levels required when called: 1
  1009 ;; This function calls:
  1010 ;;		_tabla
  1011 ;; This function is called by:
  1012 ;;		_isr
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           
  1017                           ;psect for function _displays
  1018  0168                     _displays:
  1019  0168                     i1l1079:	
  1020                           ;incstack = 0
  1021                           ; Regs used in _displays: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1022                           
  1023                           
  1024                           ;LAB1.c: 155:     PORTD = disp_selector;
  1025  0168  087C               	movf	_disp_selector,w
  1026  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1027  016A  1303               	bcf	3,6	;RP1=0, select bank0
  1028  016B  0088               	movwf	8	;volatile
  1029  016C                     i1l1081:
  1030                           
  1031                           ;LAB1.c: 156:     if(disp_selector == 0b001){
  1032  016C  037C               	decf	_disp_selector,w
  1033  016D  1D03               	btfss	3,2
  1034  016E  2970               	goto	u13_21
  1035  016F  2971               	goto	u13_20
  1036  0170                     u13_21:
  1037  0170  2983               	goto	i1l1087
  1038  0171                     u13_20:
  1039  0171                     i1l1083:
  1040                           
  1041                           ;LAB1.c: 157:         PORTC = tabla(unidades);
  1042  0171  087B               	movf	_unidades+1,w
  1043  0172  00F1               	movwf	tabla@a+1
  1044  0173  087A               	movf	_unidades,w
  1045  0174  00F0               	movwf	tabla@a
  1046  0175  120A  118A  201A  120A  118A  	fcall	_tabla
  1047  017A  0870               	movf	?_tabla,w
  1048  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1049  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1050  017D  0087               	movwf	7	;volatile
  1051  017E                     i1l1085:
  1052                           
  1053                           ;LAB1.c: 158:         disp_selector = 0b010;
  1054  017E  3002               	movlw	2
  1055  017F  00F2               	movwf	??_displays
  1056  0180  0872               	movf	??_displays,w
  1057  0181  00FC               	movwf	_disp_selector
  1058                           
  1059                           ;LAB1.c: 159:     }
  1060  0182  2998               	goto	i1l94
  1061  0183                     i1l1087:
  1062  0183  3002               	movlw	2
  1063  0184  067C               	xorwf	_disp_selector,w
  1064  0185  1D03               	btfss	3,2
  1065  0186  2988               	goto	u14_21
  1066  0187  2989               	goto	u14_20
  1067  0188                     u14_21:
  1068  0188  2998               	goto	i1l94
  1069  0189                     u14_20:
  1070  0189                     i1l1089:
  1071                           
  1072                           ;LAB1.c: 161:         PORTC = tabla(decenas);
  1073  0189  0879               	movf	_decenas+1,w
  1074  018A  00F1               	movwf	tabla@a+1
  1075  018B  0878               	movf	_decenas,w
  1076  018C  00F0               	movwf	tabla@a
  1077  018D  120A  118A  201A  120A  118A  	fcall	_tabla
  1078  0192  0870               	movf	?_tabla,w
  1079  0193  1283               	bcf	3,5	;RP0=0, select bank0
  1080  0194  1303               	bcf	3,6	;RP1=0, select bank0
  1081  0195  0087               	movwf	7	;volatile
  1082  0196                     i1l1091:
  1083                           
  1084                           ;LAB1.c: 162:         disp_selector = 0b001;
  1085  0196  01FC               	clrf	_disp_selector
  1086  0197  0AFC               	incf	_disp_selector,f
  1087  0198                     i1l94:
  1088  0198  0008               	return
  1089  0199                     __end_of_displays:
  1090                           
  1091                           	psect	text6
  1092  001A                     __ptext6:	
  1093 ;; *************** function _tabla *****************
  1094 ;; Defined at:
  1095 ;;		line 185 in file "LAB1.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;  a               2    0[COMMON] int 
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;		None
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  2    0[COMMON] int 
  1102 ;; Registers used:
  1103 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1109 ;;      Params:         2       0       0       0       0
  1110 ;;      Locals:         0       0       0       0       0
  1111 ;;      Temps:          0       0       0       0       0
  1112 ;;      Totals:         2       0       0       0       0
  1113 ;;Total ram usage:        2 bytes
  1114 ;; Hardware stack levels used: 1
  1115 ;; This function calls:
  1116 ;;		Nothing
  1117 ;; This function is called by:
  1118 ;;		_displays
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122                           
  1123                           ;psect for function _tabla
  1124  001A                     _tabla:
  1125  001A                     i1l973:	
  1126                           ;incstack = 0
  1127                           ; Regs used in _tabla: [wreg-fsr0h+status,2+status,0]
  1128                           
  1129                           
  1130                           ;LAB1.c: 186:     switch (a){
  1131  001A  286B               	goto	i1l1073
  1132  001B                     i1l975:
  1133                           
  1134                           ;LAB1.c: 188:             return 0b00111111;
  1135  001B  303F               	movlw	63
  1136  001C  00F0               	movwf	?_tabla
  1137  001D  3000               	movlw	0
  1138  001E  00F1               	movwf	?_tabla+1
  1139  001F  28A2               	goto	i1l106
  1140  0020                     i1l981:
  1141                           
  1142                           ;LAB1.c: 191:             return 0b00000110;
  1143  0020  3006               	movlw	6
  1144  0021  00F0               	movwf	?_tabla
  1145  0022  3000               	movlw	0
  1146  0023  00F1               	movwf	?_tabla+1
  1147  0024  28A2               	goto	i1l106
  1148  0025                     i1l987:
  1149                           
  1150                           ;LAB1.c: 194:             return 0b01011011;
  1151  0025  305B               	movlw	91
  1152  0026  00F0               	movwf	?_tabla
  1153  0027  3000               	movlw	0
  1154  0028  00F1               	movwf	?_tabla+1
  1155  0029  28A2               	goto	i1l106
  1156  002A                     i1l993:
  1157                           
  1158                           ;LAB1.c: 197:             return 0b01001111;
  1159  002A  304F               	movlw	79
  1160  002B  00F0               	movwf	?_tabla
  1161  002C  3000               	movlw	0
  1162  002D  00F1               	movwf	?_tabla+1
  1163  002E  28A2               	goto	i1l106
  1164  002F                     i1l999:
  1165                           
  1166                           ;LAB1.c: 200:             return 0b01100110;
  1167  002F  3066               	movlw	102
  1168  0030  00F0               	movwf	?_tabla
  1169  0031  3000               	movlw	0
  1170  0032  00F1               	movwf	?_tabla+1
  1171  0033  28A2               	goto	i1l106
  1172  0034                     i1l1005:
  1173                           
  1174                           ;LAB1.c: 203:             return 0b01101101;
  1175  0034  306D               	movlw	109
  1176  0035  00F0               	movwf	?_tabla
  1177  0036  3000               	movlw	0
  1178  0037  00F1               	movwf	?_tabla+1
  1179  0038  28A2               	goto	i1l106
  1180  0039                     i1l1011:
  1181                           
  1182                           ;LAB1.c: 206:             return 0b01111101;
  1183  0039  307D               	movlw	125
  1184  003A  00F0               	movwf	?_tabla
  1185  003B  3000               	movlw	0
  1186  003C  00F1               	movwf	?_tabla+1
  1187  003D  28A2               	goto	i1l106
  1188  003E                     i1l1017:
  1189                           
  1190                           ;LAB1.c: 209:             return 0b00000111;
  1191  003E  3007               	movlw	7
  1192  003F  00F0               	movwf	?_tabla
  1193  0040  3000               	movlw	0
  1194  0041  00F1               	movwf	?_tabla+1
  1195  0042  28A2               	goto	i1l106
  1196  0043                     i1l1023:
  1197                           
  1198                           ;LAB1.c: 212:             return 0b01111111;
  1199  0043  307F               	movlw	127
  1200  0044  00F0               	movwf	?_tabla
  1201  0045  3000               	movlw	0
  1202  0046  00F1               	movwf	?_tabla+1
  1203  0047  28A2               	goto	i1l106
  1204  0048                     i1l1029:
  1205                           
  1206                           ;LAB1.c: 215:             return 0b01101111;
  1207  0048  306F               	movlw	111
  1208  0049  00F0               	movwf	?_tabla
  1209  004A  3000               	movlw	0
  1210  004B  00F1               	movwf	?_tabla+1
  1211  004C  28A2               	goto	i1l106
  1212  004D                     i1l1035:
  1213                           
  1214                           ;LAB1.c: 218:             return 0b01110111;
  1215  004D  3077               	movlw	119
  1216  004E  00F0               	movwf	?_tabla
  1217  004F  3000               	movlw	0
  1218  0050  00F1               	movwf	?_tabla+1
  1219  0051  28A2               	goto	i1l106
  1220  0052                     i1l1041:
  1221                           
  1222                           ;LAB1.c: 221:             return 0b01111100;
  1223  0052  307C               	movlw	124
  1224  0053  00F0               	movwf	?_tabla
  1225  0054  3000               	movlw	0
  1226  0055  00F1               	movwf	?_tabla+1
  1227  0056  28A2               	goto	i1l106
  1228  0057                     i1l1047:
  1229                           
  1230                           ;LAB1.c: 224:             return 0b00111001;
  1231  0057  3039               	movlw	57
  1232  0058  00F0               	movwf	?_tabla
  1233  0059  3000               	movlw	0
  1234  005A  00F1               	movwf	?_tabla+1
  1235  005B  28A2               	goto	i1l106
  1236  005C                     i1l1053:
  1237                           
  1238                           ;LAB1.c: 227:             return 0b01011110;
  1239  005C  305E               	movlw	94
  1240  005D  00F0               	movwf	?_tabla
  1241  005E  3000               	movlw	0
  1242  005F  00F1               	movwf	?_tabla+1
  1243  0060  28A2               	goto	i1l106
  1244  0061                     i1l1059:
  1245                           
  1246                           ;LAB1.c: 230:             return 0b01111001;
  1247  0061  3079               	movlw	121
  1248  0062  00F0               	movwf	?_tabla
  1249  0063  3000               	movlw	0
  1250  0064  00F1               	movwf	?_tabla+1
  1251  0065  28A2               	goto	i1l106
  1252  0066                     i1l1065:
  1253                           
  1254                           ;LAB1.c: 233:             return 0b01110001;
  1255  0066  3071               	movlw	113
  1256  0067  00F0               	movwf	?_tabla
  1257  0068  3000               	movlw	0
  1258  0069  00F1               	movwf	?_tabla+1
  1259  006A  28A2               	goto	i1l106
  1260  006B                     i1l1073:
  1261                           
  1262                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1263                           ; Switch size 1, requested type "simple"
  1264                           ; Number of cases is 1, Range of values is 0 to 0
  1265                           ; switch strategies available:
  1266                           ; Name         Instructions Cycles
  1267                           ; simple_byte            4     3 (average)
  1268                           ; direct_byte           11     8 (fixed)
  1269                           ; jumptable            260     6 (fixed)
  1270                           ;	Chosen strategy is simple_byte
  1271  006B  0871               	movf	tabla@a+1,w
  1272  006C  3A00               	xorlw	0	; case 0
  1273  006D  1903               	skipnz
  1274  006E  2870               	goto	i1l1225
  1275  006F  28A2               	goto	i1l106
  1276  0070                     i1l1225:
  1277                           
  1278                           ; Switch size 1, requested type "simple"
  1279                           ; Number of cases is 16, Range of values is 0 to 15
  1280                           ; switch strategies available:
  1281                           ; Name         Instructions Cycles
  1282                           ; simple_byte           49    25 (average)
  1283                           ; direct_byte           56     8 (fixed)
  1284                           ; jumptable            260     6 (fixed)
  1285                           ;	Chosen strategy is simple_byte
  1286  0070  0870               	movf	tabla@a,w
  1287  0071  3A00               	xorlw	0	; case 0
  1288  0072  1903               	skipnz
  1289  0073  281B               	goto	i1l975
  1290  0074  3A01               	xorlw	1	; case 1
  1291  0075  1903               	skipnz
  1292  0076  2820               	goto	i1l981
  1293  0077  3A03               	xorlw	3	; case 2
  1294  0078  1903               	skipnz
  1295  0079  2825               	goto	i1l987
  1296  007A  3A01               	xorlw	1	; case 3
  1297  007B  1903               	skipnz
  1298  007C  282A               	goto	i1l993
  1299  007D  3A07               	xorlw	7	; case 4
  1300  007E  1903               	skipnz
  1301  007F  282F               	goto	i1l999
  1302  0080  3A01               	xorlw	1	; case 5
  1303  0081  1903               	skipnz
  1304  0082  2834               	goto	i1l1005
  1305  0083  3A03               	xorlw	3	; case 6
  1306  0084  1903               	skipnz
  1307  0085  2839               	goto	i1l1011
  1308  0086  3A01               	xorlw	1	; case 7
  1309  0087  1903               	skipnz
  1310  0088  283E               	goto	i1l1017
  1311  0089  3A0F               	xorlw	15	; case 8
  1312  008A  1903               	skipnz
  1313  008B  2843               	goto	i1l1023
  1314  008C  3A01               	xorlw	1	; case 9
  1315  008D  1903               	skipnz
  1316  008E  2848               	goto	i1l1029
  1317  008F  3A03               	xorlw	3	; case 10
  1318  0090  1903               	skipnz
  1319  0091  284D               	goto	i1l1035
  1320  0092  3A01               	xorlw	1	; case 11
  1321  0093  1903               	skipnz
  1322  0094  2852               	goto	i1l1041
  1323  0095  3A07               	xorlw	7	; case 12
  1324  0096  1903               	skipnz
  1325  0097  2857               	goto	i1l1047
  1326  0098  3A01               	xorlw	1	; case 13
  1327  0099  1903               	skipnz
  1328  009A  285C               	goto	i1l1053
  1329  009B  3A03               	xorlw	3	; case 14
  1330  009C  1903               	skipnz
  1331  009D  2861               	goto	i1l1059
  1332  009E  3A01               	xorlw	1	; case 15
  1333  009F  1903               	skipnz
  1334  00A0  2866               	goto	i1l1065
  1335  00A1  28A2               	goto	i1l106
  1336  00A2                     i1l106:
  1337  00A2  0008               	return
  1338  00A3                     __end_of_tabla:
  1339  007E                     btemp	set	126	;btemp
  1340  007E                     wtemp0	set	126
  1341                           
  1342                           	psect	config
  1343                           
  1344                           ;Config register CONFIG1 @ 0x2007
  1345                           ;	Oscillator Selection bits
  1346                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1347                           ;	Watchdog Timer Enable bit
  1348                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1349                           ;	Power-up Timer Enable bit
  1350                           ;	PWRTE = OFF, PWRT disabled
  1351                           ;	RE3/MCLR pin function select bit
  1352                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1353                           ;	Code Protection bit
  1354                           ;	CP = OFF, Program memory code protection is disabled
  1355                           ;	Data Code Protection bit
  1356                           ;	CPD = OFF, Data memory code protection is disabled
  1357                           ;	Brown Out Reset Selection bits
  1358                           ;	BOREN = OFF, BOR disabled
  1359                           ;	Internal External Switchover bit
  1360                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1361                           ;	Fail-Safe Clock Monitor Enabled bit
  1362                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1363                           ;	Low Voltage Programming Enable bit
  1364                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1365                           ;	In-Circuit Debugger Mode bit
  1366                           ;	DEBUG = 0x1, unprogrammed default
  1367  2007                     	org	8199
  1368  2007  20D4               	dw	8404
  1369                           
  1370                           ;Config register CONFIG2 @ 0x2008
  1371                           ;	Brown-out Reset Selection bit
  1372                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1373                           ;	Flash Program Memory Self Write Enable bits
  1374                           ;	WRT = OFF, Write protection off
  1375  2008                     	org	8200
  1376  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      13
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_displays
    _displays->_tabla

Critical Paths under _main in BANK0

    _main->_setup

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              1 BANK0      1     1      0
                             _limite
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _limite                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  5     5      0     174
                                              3 COMMON     5     5      0
                           _displays
                               _tmr0
 ---------------------------------------------------------------------------------
 (3) _tmr0                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _displays                                             1     1      0     174
                                              2 COMMON     1     1      0
                              _tabla
 ---------------------------------------------------------------------------------
 (4) _tabla                                                2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _limite
   _setup

 _isr (ROOT)
   _displays
     _tabla
   _tmr0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       F      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jan 27 03:43:24 2022

                     l85 00E7                      l101 012C                      u150 00EF  
                    u230 013B                      u151 00EE                      u231 013A  
                    u160 00FF                      u240 0144                      u161 00FE  
                    u241 0143                      u170 0111                      u171 0110  
                    u180 0119                      u181 0118                      u190 0128  
                    u191 0127                      u257 014C                      u267 0159  
                    u277 00DA                      _isr 0199                      fsr0 0004  
                   l1101 00AC                     l1111 00BC                     l1103 00AD  
                   l1121 00C1                     l1113 00BD                     l1105 00AE  
                   l1201 015C                     l1131 00CB                     l1123 00C2  
                   l1115 00BE                     l1107 00B7                     l1203 015F  
                   l1141 00DE                     l1133 00D1                     l1125 00C6  
                   l1117 00BF                     l1109 00BB                     l1143 00DF  
                   l1135 00D5                     l1127 00C9                     l1119 00C0  
                   l1161 00FF                     l1153 00E8                     l1145 00E0  
                   l1137 00D6                     l1129 00CA                     l1171 0128  
                   l1163 0109                     l1155 00EF                     l1147 00E3  
                   l1139 00DD                     l1165 0111                     l1157 00F1  
                   l1149 00E6                     l1093 00A3                     l1167 0119  
                   l1159 00F7                     l1095 00A7                     l1191 0144  
                   l1183 012D                     l1169 0121                     l1097 00A8  
                   l1193 0148                     l1185 0132                     l1099 00AB  
                   l1195 0150                     l1187 0135                     l1189 013B  
                   l1199 0155                     ?_isr 0070                     _T0IF 005A  
                   i1l71 01BE                     i1l67 01B0                     i1l69 01AF  
                   i1l94 0198                     i1l88 01CC                     _TMR0 0001  
                   _main 012D                     _tmr0 01C7                     btemp 007E  
                   start 000E                    ??_isr 0073                    ?_main 0070  
                  ?_tmr0 0070                    _ANSEL 0188                    i1l106 00A2  
                  i1l821 01C7                    i1l823 01C8                    i1l981 0020  
                  i1l973 001A                    i1l975 001B                    i1l993 002A  
                  i1l987 0025                    i1l999 002F                    u20_20 019F  
                  u20_21 019E                    u13_20 0171                    u21_20 01A8  
                  u13_21 0170                    u21_21 01A7                    u14_20 0189  
                  u22_20 01B4                    u14_21 0188                    u22_21 01B3  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _tabla 001A                    _setup 00A3  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 0168             __end_of_tmr0 01CD  
                 ??_main 0021                   ??_tmr0 0070                   ?_tabla 0070  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
                 i1l1011 0039                   i1l1005 0034                   i1l1023 0043  
                 i1l1041 0052                   i1l1017 003E                   i1l1035 004D  
                 i1l1053 005C                   i1l1029 0048                   i1l1047 0057  
                 i1l1225 0070                   i1l1065 0066                   i1l1073 006B  
                 i1l1081 016C                   i1l1059 0061                   i1l1091 0196  
                 i1l1083 0171                   i1l1085 017E                   i1l1181 01B9  
                 i1l1173 0199                   i1l1087 0183                   i1l1079 0168  
                 i1l1175 019F                   i1l1089 0189                   i1l1177 01A8  
                 i1l1179 01B4         __end_of_displays 0199                   _limite 00E8  
                 tabla@a 0070                   saved_w 007E  __end_of__initialization 0016  
         __pcstackCOMMON 0070            __end_of_tabla 00A3            __end_of_setup 00E8  
         _OPTION_REGbits 0081                  ??_tabla 0072                  ??_setup 0020  
             __pmaintext 012D               __pintentry 0004                  ?_limite 0070  
              ?_displays 0070                  _decenas 0078          __size_of_limite 0045  
                __ptext1 00A3                  __ptext2 00E8                  __ptext3 0199  
                __ptext4 01C7                  __ptext5 0168                  __ptext6 001A  
           __size_of_isr 002E               ??_displays 0072     end_of_initialization 0016  
         __end_of_limite 012D      start_initialization 0011              __end_of_isr 01C7  
               ??_limite 0020              __pbssCOMMON 0078                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_displays 0031           __size_of_tabla 0089  
         __size_of_setup 0045        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
               _displays 0168            __size_of_main 003B            __size_of_tmr0 0006  
               _unidades 007A               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F            _disp_selector 007C  
